(function(e){function t(t){for(var a,s,o=t[0],c=t[1],d=t[2],u=0,b=[];u<o.length;u++)s=o[u],Object.prototype.hasOwnProperty.call(r,s)&&r[s]&&b.push(r[s][0]),r[s]=0;for(a in c)Object.prototype.hasOwnProperty.call(c,a)&&(e[a]=c[a]);l&&l(t);while(b.length)b.shift()();return i.push.apply(i,d||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],a=!0,o=1;o<n.length;o++){var c=n[o];0!==r[c]&&(a=!1)}a&&(i.splice(t--,1),e=s(s.s=n[0]))}return e}var a={},r={app:0},i=[];function s(t){if(a[t])return a[t].exports;var n=a[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=e,s.c=a,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)s.d(n,a,function(t){return e[t]}.bind(null,a));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="";var o=window["webpackJsonp"]=window["webpackJsonp"]||[],c=o.push.bind(o);o.push=t,o=o.slice();for(var d=0;d<o.length;d++)t(o[d]);var l=c;i.push([0,"chunk-vendors"]),n()})({0:function(e,t,n){e.exports=n("56d7")},"0629":function(e,t,n){"use strict";n("71be")},"08ef":function(e,t,n){},"0be7":function(e,t,n){},"0fee":function(e){e.exports=JSON.parse('{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]}')},1:function(e,t){},10:function(e,t){},11:function(e,t){},12:function(e,t){},13:function(e,t){},1315:function(e,t,n){e.exports=n.p+"img/spacepi-logo.015fe43b.png"},1335:function(e,t,n){"use strict";n("e296")},"136c":function(e,t,n){e.exports=n.p+"img/logo.243ac4e1.svg"},"13d4":function(e,t,n){e.exports=n.p+"img/fswap.0a5b79a1.svg"},14:function(e,t){},"14ac":function(e,t,n){e.exports=n.p+"img/go.8e075bd6.svg"},"16e6":function(e,t,n){e.exports=n.p+"img/individuals.8324b2b7.svg"},"175e":function(e){e.exports=JSON.parse('{"address":"0x55d398326f99059fF775485246999027B3197955","abi":[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[],"name":"_decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"_name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"_symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"transactionHash":"0x89f190420a10886fec4787d8f24f9d3e1e3c5eb87c5e9473a5c9efd260953cb1","receipt":{"to":null,"from":"0x3A2d206A01DFE9f27D5CC915AbC8bA7504B1ec02","contractAddress":"0x2D2Bd7DD1DF6B279B758b5CC6Da296E3F551B074","transactionIndex":0,"gasUsed":"1150693","logsBloom":"0xblockHash":"0xdff7b7510a512104b0bd8007b8bb59818e1710a0a3ad358153698579367da409","transactionHash":"0x89f190420a10886fec4787d8f24f9d3e1e3c5eb87c5e9473a5c9efd260953cb1","logs":[{"transactionIndex":0,"blockNumber":16132555,"transactionHash":"0x89f190420a10886fec4787d8f24f9d3e1e3c5eb87c5e9473a5c9efd260953cb1","address":"0x2D2Bd7DD1DF6B279B758b5CC6Da296E3F551B074","topics":["0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000003a2d206a01dfe9f27d5cc915abc8ba7504b1ec02"],"data":"0x","logIndex":0,"blockHash":"0xdff7b7510a512104b0bd8007b8bb59818e1710a0a3ad358153698579367da409"},{"transactionIndex":0,"blockNumber":16132555,"transactionHash":"0x89f190420a10886fec4787d8f24f9d3e1e3c5eb87c5e9473a5c9efd260953cb1","address":"0x2D2Bd7DD1DF6B279B758b5CC6Da296E3F551B074","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000003a2d206a01dfe9f27d5cc915abc8ba7504b1ec02"],"data":"0x00000000000000000000000000000000000000000018d0bf423c03d8de000000","logIndex":1,"blockHash":"0xdff7b7510a512104b0bd8007b8bb59818e1710a0a3ad358153698579367da409"}],"blockNumber":16132555,"cumulativeGasUsed":"1150693","status":1,"byzantium":true},"args":[],"solcInputHash":"e75260db3366f9c13fe184a85061151f","metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.16+commit.9c3226ce\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"previousOwner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"_decimals\\",\\"outputs\\":[{\\"internalType\\":\\"uint8\\",\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"_name\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"_symbol\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"burn\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"internalType\\":\\"uint8\\",\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"subtractedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"decreaseAllowance\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getOwner\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"addedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"increaseAllowance\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"mint\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"owner\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"renounceOwnership\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"recipient\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"recipient\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"methods\\":{\\"allowance(address,address)\\":{\\"details\\":\\"See {BEP20-allowance}.\\"},\\"approve(address,uint256)\\":{\\"details\\":\\"See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address.\\"},\\"balanceOf(address)\\":{\\"details\\":\\"See {BEP20-balanceOf}.\\"},\\"burn(uint256)\\":{\\"details\\":\\"Burn `amount` tokens and decreasing the total supply.\\"},\\"decimals()\\":{\\"details\\":\\"Returns the token decimals.\\"},\\"decreaseAllowance(address,uint256)\\":{\\"details\\":\\"Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\\"},\\"getOwner()\\":{\\"details\\":\\"Returns the bep token owner.\\"},\\"increaseAllowance(address,uint256)\\":{\\"details\\":\\"Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address.\\"},\\"mint(uint256)\\":{\\"details\\":\\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner\\"},\\"name()\\":{\\"details\\":\\"Returns the token name.\\"},\\"owner()\\":{\\"details\\":\\"Returns the address of the current owner.\\"},\\"renounceOwnership()\\":{\\"details\\":\\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\\"},\\"symbol()\\":{\\"details\\":\\"Returns the token symbol.\\"},\\"totalSupply()\\":{\\"details\\":\\"See {BEP20-totalSupply}.\\"},\\"transfer(address,uint256)\\":{\\"details\\":\\"See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\\"},\\"transferFrom(address,address,uint256)\\":{\\"details\\":\\"See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`\'s tokens of at least `amount`.\\"},\\"transferOwnership(address)\\":{\\"details\\":\\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\\"}}},\\"userdoc\\":{\\"methods\\":{}}},\\"settings\\":{\\"compilationTarget\\":{\\"contracts/tokens/usdt.sol\\":\\"USDT\\"},\\"evmVersion\\":\\"istanbul\\",\\"libraries\\":{},\\"metadata\\":{\\"useLiteralContent\\":true},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"contracts/tokens/usdt.sol\\":{\\"content\\":\\"/**\\\\r\\\\n *Submitted for verification at BscScan.com on 2020-09-04\\\\r\\\\n*/\\\\r\\\\n\\\\r\\\\npragma solidity 0.5.16;\\\\r\\\\n\\\\r\\\\ninterface IBEP20 {\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the amount of tokens in existence.\\\\r\\\\n   */\\\\r\\\\n    function totalSupply() external view returns (uint256);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the token decimals.\\\\r\\\\n   */\\\\r\\\\n    function decimals() external view returns (uint8);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the token symbol.\\\\r\\\\n   */\\\\r\\\\n    function symbol() external view returns (string memory);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n    * @dev Returns the token name.\\\\r\\\\n  */\\\\r\\\\n    function name() external view returns (string memory);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the bep token owner.\\\\r\\\\n   */\\\\r\\\\n    function getOwner() external view returns (address);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the amount of tokens owned by `account`.\\\\r\\\\n   */\\\\r\\\\n    function balanceOf(address account) external view returns (uint256);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Moves `amount` tokens from the caller\'s account to `recipient`.\\\\r\\\\n   *\\\\r\\\\n   * Returns a boolean value indicating whether the operation succeeded.\\\\r\\\\n   *\\\\r\\\\n   * Emits a {Transfer} event.\\\\r\\\\n   */\\\\r\\\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the remaining number of tokens that `spender` will be\\\\r\\\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\\\r\\\\n   * zero by default.\\\\r\\\\n   *\\\\r\\\\n   * This value changes when {approve} or {transferFrom} are called.\\\\r\\\\n   */\\\\r\\\\n    function allowance(address _owner, address spender) external view returns (uint256);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\\\r\\\\n   *\\\\r\\\\n   * Returns a boolean value indicating whether the operation succeeded.\\\\r\\\\n   *\\\\r\\\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\\\r\\\\n   * that someone may use both the old and the new allowance by unfortunate\\\\r\\\\n   * transaction ordering. One possible solution to mitigate this race\\\\r\\\\n   * condition is to first reduce the spender\'s allowance to 0 and set the\\\\r\\\\n   * desired value afterwards:\\\\r\\\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\\\r\\\\n   *\\\\r\\\\n   * Emits an {Approval} event.\\\\r\\\\n   */\\\\r\\\\n    function approve(address spender, uint256 amount) external returns (bool);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\\\r\\\\n   * allowance mechanism. `amount` is then deducted from the caller\'s\\\\r\\\\n   * allowance.\\\\r\\\\n   *\\\\r\\\\n   * Returns a boolean value indicating whether the operation succeeded.\\\\r\\\\n   *\\\\r\\\\n   * Emits a {Transfer} event.\\\\r\\\\n   */\\\\r\\\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\\\r\\\\n   * another (`to`).\\\\r\\\\n   *\\\\r\\\\n   * Note that `value` may be zero.\\\\r\\\\n   */\\\\r\\\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\\\r\\\\n   * a call to {approve}. `value` is the new allowance.\\\\r\\\\n   */\\\\r\\\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n/*\\\\r\\\\n * @dev Provides information about the current execution context, including the\\\\r\\\\n * sender of the transaction and its data. While these are generally available\\\\r\\\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\\\r\\\\n * manner, since when dealing with GSN meta-transactions the account sending and\\\\r\\\\n * paying for execution may not be the actual sender (as far as an application\\\\r\\\\n * is concerned).\\\\r\\\\n *\\\\r\\\\n * This contract is only required for intermediate, library-like contracts.\\\\r\\\\n */\\\\r\\\\ncontract Context {\\\\r\\\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\\\r\\\\n    // an instance of this contract, which should be used via inheritance.\\\\r\\\\n    constructor () internal { }\\\\r\\\\n\\\\r\\\\n    function _msgSender() internal view returns (address payable) {\\\\r\\\\n        return msg.sender;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function _msgData() internal view returns (bytes memory) {\\\\r\\\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\\\r\\\\n        return msg.data;\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n * @dev Wrappers over Solidity\'s arithmetic operations with added overflow\\\\r\\\\n * checks.\\\\r\\\\n *\\\\r\\\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\\\r\\\\n * in bugs, because programmers usually assume that an overflow raises an\\\\r\\\\n * error, which is the standard behavior in high level programming languages.\\\\r\\\\n * `SafeMath` restores this intuition by reverting the transaction when an\\\\r\\\\n * operation overflows.\\\\r\\\\n *\\\\r\\\\n * Using this library instead of the unchecked operations eliminates an entire\\\\r\\\\n * class of bugs, so it\'s recommended to use it always.\\\\r\\\\n */\\\\r\\\\nlibrary SafeMath {\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the addition of two unsigned integers, reverting on\\\\r\\\\n   * overflow.\\\\r\\\\n   *\\\\r\\\\n   * Counterpart to Solidity\'s `+` operator.\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   * - Addition cannot overflow.\\\\r\\\\n   */\\\\r\\\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        uint256 c = a + b;\\\\r\\\\n        require(c >= a, \\\\\\"SafeMath: addition overflow\\\\\\");\\\\r\\\\n\\\\r\\\\n        return c;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\\\r\\\\n   * overflow (when the result is negative).\\\\r\\\\n   *\\\\r\\\\n   * Counterpart to Solidity\'s `-` operator.\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   * - Subtraction cannot overflow.\\\\r\\\\n   */\\\\r\\\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        return sub(a, b, \\\\\\"SafeMath: subtraction overflow\\\\\\");\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\\\r\\\\n   * overflow (when the result is negative).\\\\r\\\\n   *\\\\r\\\\n   * Counterpart to Solidity\'s `-` operator.\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   * - Subtraction cannot overflow.\\\\r\\\\n   */\\\\r\\\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\\\r\\\\n        require(b <= a, errorMessage);\\\\r\\\\n        uint256 c = a - b;\\\\r\\\\n\\\\r\\\\n        return c;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\\\r\\\\n   * overflow.\\\\r\\\\n   *\\\\r\\\\n   * Counterpart to Solidity\'s `*` operator.\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   * - Multiplication cannot overflow.\\\\r\\\\n   */\\\\r\\\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        // Gas optimization: this is cheaper than requiring \'a\' not being zero, but the\\\\r\\\\n        // benefit is lost if \'b\' is also tested.\\\\r\\\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\\\r\\\\n        if (a == 0) {\\\\r\\\\n            return 0;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        uint256 c = a * b;\\\\r\\\\n        require(c / a == b, \\\\\\"SafeMath: multiplication overflow\\\\\\");\\\\r\\\\n\\\\r\\\\n        return c;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\\\r\\\\n   * division by zero. The result is rounded towards zero.\\\\r\\\\n   *\\\\r\\\\n   * Counterpart to Solidity\'s `/` operator. Note: this function uses a\\\\r\\\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\\\r\\\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   * - The divisor cannot be zero.\\\\r\\\\n   */\\\\r\\\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        return div(a, b, \\\\\\"SafeMath: division by zero\\\\\\");\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\\\r\\\\n   * division by zero. The result is rounded towards zero.\\\\r\\\\n   *\\\\r\\\\n   * Counterpart to Solidity\'s `/` operator. Note: this function uses a\\\\r\\\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\\\r\\\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   * - The divisor cannot be zero.\\\\r\\\\n   */\\\\r\\\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\\\r\\\\n        // Solidity only automatically asserts when dividing by 0\\\\r\\\\n        require(b > 0, errorMessage);\\\\r\\\\n        uint256 c = a / b;\\\\r\\\\n        // assert(a == b * c + a % b); // There is no case in which this doesn\'t hold\\\\r\\\\n\\\\r\\\\n        return c;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\\\r\\\\n   * Reverts when dividing by zero.\\\\r\\\\n   *\\\\r\\\\n   * Counterpart to Solidity\'s `%` operator. This function uses a `revert`\\\\r\\\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\\\r\\\\n   * invalid opcode to revert (consuming all remaining gas).\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   * - The divisor cannot be zero.\\\\r\\\\n   */\\\\r\\\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        return mod(a, b, \\\\\\"SafeMath: modulo by zero\\\\\\");\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\\\r\\\\n   * Reverts with custom message when dividing by zero.\\\\r\\\\n   *\\\\r\\\\n   * Counterpart to Solidity\'s `%` operator. This function uses a `revert`\\\\r\\\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\\\r\\\\n   * invalid opcode to revert (consuming all remaining gas).\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   * - The divisor cannot be zero.\\\\r\\\\n   */\\\\r\\\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\\\r\\\\n        require(b != 0, errorMessage);\\\\r\\\\n        return a % b;\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n * @dev Contract module which provides a basic access control mechanism, where\\\\r\\\\n * there is an account (an owner) that can be granted exclusive access to\\\\r\\\\n * specific functions.\\\\r\\\\n *\\\\r\\\\n * By default, the owner account will be the one that deploys the contract. This\\\\r\\\\n * can later be changed with {transferOwnership}.\\\\r\\\\n *\\\\r\\\\n * This module is used through inheritance. It will make available the modifier\\\\r\\\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\\\r\\\\n * the owner.\\\\r\\\\n */\\\\r\\\\ncontract Ownable is Context {\\\\r\\\\n    address private _owner;\\\\r\\\\n\\\\r\\\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\\\r\\\\n   */\\\\r\\\\n    constructor () internal {\\\\r\\\\n        address msgSender = _msgSender();\\\\r\\\\n        _owner = msgSender;\\\\r\\\\n        emit OwnershipTransferred(address(0), msgSender);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the address of the current owner.\\\\r\\\\n   */\\\\r\\\\n    function owner() public view returns (address) {\\\\r\\\\n        return _owner;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Throws if called by any account other than the owner.\\\\r\\\\n   */\\\\r\\\\n    modifier onlyOwner() {\\\\r\\\\n        require(_owner == _msgSender(), \\\\\\"Ownable: caller is not the owner\\\\\\");\\\\r\\\\n        _;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Leaves the contract without owner. It will not be possible to call\\\\r\\\\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\\\\r\\\\n   *\\\\r\\\\n   * NOTE: Renouncing ownership will leave the contract without an owner,\\\\r\\\\n   * thereby removing any functionality that is only available to the owner.\\\\r\\\\n   */\\\\r\\\\n    function renounceOwnership() public onlyOwner {\\\\r\\\\n        emit OwnershipTransferred(_owner, address(0));\\\\r\\\\n        _owner = address(0);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\\\r\\\\n   * Can only be called by the current owner.\\\\r\\\\n   */\\\\r\\\\n    function transferOwnership(address newOwner) public onlyOwner {\\\\r\\\\n        _transferOwnership(newOwner);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\\\r\\\\n   */\\\\r\\\\n    function _transferOwnership(address newOwner) internal {\\\\r\\\\n        require(newOwner != address(0), \\\\\\"Ownable: new owner is the zero address\\\\\\");\\\\r\\\\n        emit OwnershipTransferred(_owner, newOwner);\\\\r\\\\n        _owner = newOwner;\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\ncontract USDT is Context, IBEP20, Ownable {\\\\r\\\\n    using SafeMath for uint256;\\\\r\\\\n\\\\r\\\\n    mapping (address => uint256) private _balances;\\\\r\\\\n\\\\r\\\\n    mapping (address => mapping (address => uint256)) private _allowances;\\\\r\\\\n\\\\r\\\\n    uint256 private _totalSupply;\\\\r\\\\n    uint8 public _decimals;\\\\r\\\\n    string public _symbol;\\\\r\\\\n    string public _name;\\\\r\\\\n\\\\r\\\\n    constructor() public {\\\\r\\\\n        _name = \\\\\\"Tether USD\\\\\\";\\\\r\\\\n        _symbol = \\\\\\"USDT\\\\\\";\\\\r\\\\n        _decimals = 18;\\\\r\\\\n        _totalSupply = 30000000000000000000000000;\\\\r\\\\n        _balances[msg.sender] = _totalSupply;\\\\r\\\\n\\\\r\\\\n        emit Transfer(address(0), msg.sender, _totalSupply);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the bep token owner.\\\\r\\\\n   */\\\\r\\\\n    function getOwner() external view returns (address) {\\\\r\\\\n        return owner();\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the token decimals.\\\\r\\\\n   */\\\\r\\\\n    function decimals() external view returns (uint8) {\\\\r\\\\n        return _decimals;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the token symbol.\\\\r\\\\n   */\\\\r\\\\n    function symbol() external view returns (string memory) {\\\\r\\\\n        return _symbol;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n    * @dev Returns the token name.\\\\r\\\\n  */\\\\r\\\\n    function name() external view returns (string memory) {\\\\r\\\\n        return _name;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See {BEP20-totalSupply}.\\\\r\\\\n   */\\\\r\\\\n    function totalSupply() external view returns (uint256) {\\\\r\\\\n        return _totalSupply;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See {BEP20-balanceOf}.\\\\r\\\\n   */\\\\r\\\\n    function balanceOf(address account) external view returns (uint256) {\\\\r\\\\n        return _balances[account];\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See {BEP20-transfer}.\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   *\\\\r\\\\n   * - `recipient` cannot be the zero address.\\\\r\\\\n   * - the caller must have a balance of at least `amount`.\\\\r\\\\n   */\\\\r\\\\n    function transfer(address recipient, uint256 amount) external returns (bool) {\\\\r\\\\n        _transfer(_msgSender(), recipient, amount);\\\\r\\\\n        return true;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See {BEP20-allowance}.\\\\r\\\\n   */\\\\r\\\\n    function allowance(address owner, address spender) external view returns (uint256) {\\\\r\\\\n        return _allowances[owner][spender];\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See {BEP20-approve}.\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   *\\\\r\\\\n   * - `spender` cannot be the zero address.\\\\r\\\\n   */\\\\r\\\\n    function approve(address spender, uint256 amount) external returns (bool) {\\\\r\\\\n        _approve(_msgSender(), spender, amount);\\\\r\\\\n        return true;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See {BEP20-transferFrom}.\\\\r\\\\n   *\\\\r\\\\n   * Emits an {Approval} event indicating the updated allowance. This is not\\\\r\\\\n   * required by the EIP. See the note at the beginning of {BEP20};\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   * - `sender` and `recipient` cannot be the zero address.\\\\r\\\\n   * - `sender` must have a balance of at least `amount`.\\\\r\\\\n   * - the caller must have allowance for `sender`\'s tokens of at least\\\\r\\\\n   * `amount`.\\\\r\\\\n   */\\\\r\\\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\\\\r\\\\n        _transfer(sender, recipient, amount);\\\\r\\\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\\\\"BEP20: transfer amount exceeds allowance\\\\\\"));\\\\r\\\\n        return true;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\\\r\\\\n   *\\\\r\\\\n   * This is an alternative to {approve} that can be used as a mitigation for\\\\r\\\\n   * problems described in {BEP20-approve}.\\\\r\\\\n   *\\\\r\\\\n   * Emits an {Approval} event indicating the updated allowance.\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   *\\\\r\\\\n   * - `spender` cannot be the zero address.\\\\r\\\\n   */\\\\r\\\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\\\r\\\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\\\r\\\\n        return true;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\\\r\\\\n   *\\\\r\\\\n   * This is an alternative to {approve} that can be used as a mitigation for\\\\r\\\\n   * problems described in {BEP20-approve}.\\\\r\\\\n   *\\\\r\\\\n   * Emits an {Approval} event indicating the updated allowance.\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   *\\\\r\\\\n   * - `spender` cannot be the zero address.\\\\r\\\\n   * - `spender` must have allowance for the caller of at least\\\\r\\\\n   * `subtractedValue`.\\\\r\\\\n   */\\\\r\\\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\\\r\\\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\\\\"BEP20: decreased allowance below zero\\\\\\"));\\\\r\\\\n        return true;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\\\\r\\\\n   * the total supply.\\\\r\\\\n   *\\\\r\\\\n   * Requirements\\\\r\\\\n   *\\\\r\\\\n   * - `msg.sender` must be the token owner\\\\r\\\\n   */\\\\r\\\\n    function mint(uint256 amount) public onlyOwner returns (bool) {\\\\r\\\\n        _mint(_msgSender(), amount);\\\\r\\\\n        return true;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Burn `amount` tokens and decreasing the total supply.\\\\r\\\\n   */\\\\r\\\\n    function burn(uint256 amount) public returns (bool) {\\\\r\\\\n        _burn(_msgSender(), amount);\\\\r\\\\n        return true;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\\\r\\\\n   *\\\\r\\\\n   * This is internal function is equivalent to {transfer}, and can be used to\\\\r\\\\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\\\\r\\\\n   *\\\\r\\\\n   * Emits a {Transfer} event.\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   *\\\\r\\\\n   * - `sender` cannot be the zero address.\\\\r\\\\n   * - `recipient` cannot be the zero address.\\\\r\\\\n   * - `sender` must have a balance of at least `amount`.\\\\r\\\\n   */\\\\r\\\\n    function _transfer(address sender, address recipient, uint256 amount) internal {\\\\r\\\\n        require(sender != address(0), \\\\\\"BEP20: transfer from the zero address\\\\\\");\\\\r\\\\n        require(recipient != address(0), \\\\\\"BEP20: transfer to the zero address\\\\\\");\\\\r\\\\n\\\\r\\\\n        _balances[sender] = _balances[sender].sub(amount, \\\\\\"BEP20: transfer amount exceeds balance\\\\\\");\\\\r\\\\n        _balances[recipient] = _balances[recipient].add(amount);\\\\r\\\\n        emit Transfer(sender, recipient, amount);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\\\r\\\\n   * the total supply.\\\\r\\\\n   *\\\\r\\\\n   * Emits a {Transfer} event with `from` set to the zero address.\\\\r\\\\n   *\\\\r\\\\n   * Requirements\\\\r\\\\n   *\\\\r\\\\n   * - `to` cannot be the zero address.\\\\r\\\\n   */\\\\r\\\\n    function _mint(address account, uint256 amount) internal {\\\\r\\\\n        require(account != address(0), \\\\\\"BEP20: mint to the zero address\\\\\\");\\\\r\\\\n\\\\r\\\\n        _totalSupply = _totalSupply.add(amount);\\\\r\\\\n        _balances[account] = _balances[account].add(amount);\\\\r\\\\n        emit Transfer(address(0), account, amount);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\\\r\\\\n   * total supply.\\\\r\\\\n   *\\\\r\\\\n   * Emits a {Transfer} event with `to` set to the zero address.\\\\r\\\\n   *\\\\r\\\\n   * Requirements\\\\r\\\\n   *\\\\r\\\\n   * - `account` cannot be the zero address.\\\\r\\\\n   * - `account` must have at least `amount` tokens.\\\\r\\\\n   */\\\\r\\\\n    function _burn(address account, uint256 amount) internal {\\\\r\\\\n        require(account != address(0), \\\\\\"BEP20: burn from the zero address\\\\\\");\\\\r\\\\n\\\\r\\\\n        _balances[account] = _balances[account].sub(amount, \\\\\\"BEP20: burn amount exceeds balance\\\\\\");\\\\r\\\\n        _totalSupply = _totalSupply.sub(amount);\\\\r\\\\n        emit Transfer(account, address(0), amount);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\\\r\\\\n   *\\\\r\\\\n   * This is internal function is equivalent to `approve`, and can be used to\\\\r\\\\n   * e.g. set automatic allowances for certain subsystems, etc.\\\\r\\\\n   *\\\\r\\\\n   * Emits an {Approval} event.\\\\r\\\\n   *\\\\r\\\\n   * Requirements:\\\\r\\\\n   *\\\\r\\\\n   * - `owner` cannot be the zero address.\\\\r\\\\n   * - `spender` cannot be the zero address.\\\\r\\\\n   */\\\\r\\\\n    function _approve(address owner, address spender, uint256 amount) internal {\\\\r\\\\n        require(owner != address(0), \\\\\\"BEP20: approve from the zero address\\\\\\");\\\\r\\\\n        require(spender != address(0), \\\\\\"BEP20: approve to the zero address\\\\\\");\\\\r\\\\n\\\\r\\\\n        _allowances[owner][spender] = amount;\\\\r\\\\n        emit Approval(owner, spender, amount);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\\\\r\\\\n   * from the caller\'s allowance.\\\\r\\\\n   *\\\\r\\\\n   * See {_burn} and {_approve}.\\\\r\\\\n   */\\\\r\\\\n    function _burnFrom(address account, uint256 amount) internal {\\\\r\\\\n        _burn(account, amount);\\\\r\\\\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\\\\"BEP20: burn amount exceeds allowance\\\\\\"));\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\",\\"keccak256\\":\\"0xe802c5f01afcb8a2a0119d27603d39fd521e109e6a4d1a2cc2756ec2f9d1b2f5\\"}},\\"version\\":1}","bytecode":"0x60806040523480156200001157600080fd5b506000620000276001600160e01b036200014016565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060408051808201909152600a8082526915195d1a195c881554d160b21b6020909201918252620000a49160069162000145565b50604080518082019091526004808252631554d11560e21b6020909201918252620000d29160059162000145565b506004805460ff191660121790556a18d0bf423c03d8de0000006003819055336000818152600160209081526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3620001e7565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200018857805160ff1916838001178555620001b8565b82800160010185558215620001b8579182015b82811115620001b85782518255916020019190600101906200019b565b50620001c6929150620001ca565b5090565b6200014291905b80821115620001c65760008155600101620001d1565b61113d80620001f76000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063893d20e8116100ad578063a9059cbb11610071578063a9059cbb1461035a578063b09f126614610386578063d28d88521461038e578063dd62ed3e14610396578063f2fde38b146103c45761012c565b8063893d20e8146102dd5780638da5cb5b1461030157806395d89b4114610309578063a0712d6814610311578063a457c2d71461032e5761012c565b806332424aa3116100f457806332424aa31461025c578063395093511461026457806342966c681461029057806370a08231146102ad578063715018a6146102d35761012c565b806306fdde0314610131578063095ea7b3146101ae57806318160ddd146101ee57806323b872dd14610208578063313ce5671461023e575b600080fd5b6101396103ea565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017357818101518382015260200161015b565b50505050905090810190601f1680156101a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101da600480360360408110156101c457600080fd5b506001600160a01b038135169060200135610480565b604080519115158252519081900360200190f35b6101f661049d565b60408051918252519081900360200190f35b6101da6004803603606081101561021e57600080fd5b506001600160a01b038135811691602081013590911690604001356104a3565b610246610530565b6040805160ff9092168252519081900360200190f35b610246610539565b6101da6004803603604081101561027a57600080fd5b506001600160a01b038135169060200135610542565b6101da600480360360208110156102a657600080fd5b5035610596565b6101f6600480360360208110156102c357600080fd5b50356001600160a01b03166105b1565b6102db6105cc565b005b6102e5610680565b604080516001600160a01b039092168252519081900360200190f35b6102e561068f565b61013961069e565b6101da6004803603602081101561032757600080fd5b50356106ff565b6101da6004803603604081101561034457600080fd5b506001600160a01b03813516906020013561077c565b6101da6004803603604081101561037057600080fd5b506001600160a01b0381351690602001356107ea565b6101396107fe565b61013961088c565b6101f6600480360360408110156103ac57600080fd5b506001600160a01b03813581169160200135166108e7565b6102db600480360360208110156103da57600080fd5b50356001600160a01b0316610912565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104765780601f1061044b57610100808354040283529160200191610476565b820191906000526020600020905b81548152906001019060200180831161045957829003601f168201915b5050505050905090565b600061049461048d610988565b848461098c565b50600192915050565b60035490565b60006104b0848484610a78565b610526846104bc610988565b6105218560405180606001604052806028815260200161100e602891396001600160a01b038a166000908152600260205260408120906104fa610988565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610bd616565b61098c565b5060019392505050565b60045460ff1690565b60045460ff1681565b600061049461054f610988565b846105218560026000610560610988565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610c6d16565b60006105a96105a3610988565b83610cce565b506001919050565b6001600160a01b031660009081526001602052604090205490565b6105d4610988565b6000546001600160a01b03908116911614610636576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600061068a61068f565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104765780601f1061044b57610100808354040283529160200191610476565b6000610709610988565b6000546001600160a01b0390811691161461076b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6105a9610776610988565b83610dca565b6000610494610789610988565b846105218560405180606001604052806025815260200161107f60259139600260006107b3610988565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610bd616565b60006104946107f7610988565b8484610a78565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108845780601f1061085957610100808354040283529160200191610884565b820191906000526020600020905b81548152906001019060200180831161086757829003601f168201915b505050505081565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108845780601f1061085957610100808354040283529160200191610884565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61091a610988565b6000546001600160a01b0390811691161461097c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61098581610ebc565b50565b3390565b6001600160a01b0383166109d15760405162461bcd60e51b8152600401808060200182810382526024815260200180610fc46024913960400191505060405180910390fd5b6001600160a01b038216610a165760405162461bcd60e51b81526004018080602001828103825260228152602001806110e76022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610abd5760405162461bcd60e51b8152600401808060200182810382526025815260200180610f9f6025913960400191505060405180910390fd5b6001600160a01b038216610b025760405162461bcd60e51b815260040180806020018281038252602381526020018061105c6023913960400191505060405180910390fd5b610b4581604051806060016040528060268152602001611036602691396001600160a01b038616600090815260016020526040902054919063ffffffff610bd616565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610b7a908263ffffffff610c6d16565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610c655760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c2a578181015183820152602001610c12565b50505050905090810190601f168015610c575780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610cc7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610d135760405162461bcd60e51b81526004018080602001828103825260218152602001806110a46021913960400191505060405180910390fd5b610d56816040518060600160405280602281526020016110c5602291396001600160a01b038516600090815260016020526040902054919063ffffffff610bd616565b6001600160a01b038316600090815260016020526040902055600354610d82908263ffffffff610f5c16565b6003556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b038216610e25576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600354610e38908263ffffffff610c6d16565b6003556001600160a01b038216600090815260016020526040902054610e64908263ffffffff610c6d16565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038116610f015760405162461bcd60e51b8152600401808060200182810382526026815260200180610fe86026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000610cc783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610bd656fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a7231582009b00b4f488e052d162e0e19ea074f398692c3167d985b27a085e352bf1d765d64736f6c63430005100032","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061012c5760003560e01c8063893d20e8116100ad578063a9059cbb11610071578063a9059cbb1461035a578063b09f126614610386578063d28d88521461038e578063dd62ed3e14610396578063f2fde38b146103c45761012c565b8063893d20e8146102dd5780638da5cb5b1461030157806395d89b4114610309578063a0712d6814610311578063a457c2d71461032e5761012c565b806332424aa3116100f457806332424aa31461025c578063395093511461026457806342966c681461029057806370a08231146102ad578063715018a6146102d35761012c565b806306fdde0314610131578063095ea7b3146101ae57806318160ddd146101ee57806323b872dd14610208578063313ce5671461023e575b600080fd5b6101396103ea565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017357818101518382015260200161015b565b50505050905090810190601f1680156101a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101da600480360360408110156101c457600080fd5b506001600160a01b038135169060200135610480565b604080519115158252519081900360200190f35b6101f661049d565b60408051918252519081900360200190f35b6101da6004803603606081101561021e57600080fd5b506001600160a01b038135811691602081013590911690604001356104a3565b610246610530565b6040805160ff9092168252519081900360200190f35b610246610539565b6101da6004803603604081101561027a57600080fd5b506001600160a01b038135169060200135610542565b6101da600480360360208110156102a657600080fd5b5035610596565b6101f6600480360360208110156102c357600080fd5b50356001600160a01b03166105b1565b6102db6105cc565b005b6102e5610680565b604080516001600160a01b039092168252519081900360200190f35b6102e561068f565b61013961069e565b6101da6004803603602081101561032757600080fd5b50356106ff565b6101da6004803603604081101561034457600080fd5b506001600160a01b03813516906020013561077c565b6101da6004803603604081101561037057600080fd5b506001600160a01b0381351690602001356107ea565b6101396107fe565b61013961088c565b6101f6600480360360408110156103ac57600080fd5b506001600160a01b03813581169160200135166108e7565b6102db600480360360208110156103da57600080fd5b50356001600160a01b0316610912565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104765780601f1061044b57610100808354040283529160200191610476565b820191906000526020600020905b81548152906001019060200180831161045957829003601f168201915b5050505050905090565b600061049461048d610988565b848461098c565b50600192915050565b60035490565b60006104b0848484610a78565b610526846104bc610988565b6105218560405180606001604052806028815260200161100e602891396001600160a01b038a166000908152600260205260408120906104fa610988565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610bd616565b61098c565b5060019392505050565b60045460ff1690565b60045460ff1681565b600061049461054f610988565b846105218560026000610560610988565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610c6d16565b60006105a96105a3610988565b83610cce565b506001919050565b6001600160a01b031660009081526001602052604090205490565b6105d4610988565b6000546001600160a01b03908116911614610636576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600061068a61068f565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104765780601f1061044b57610100808354040283529160200191610476565b6000610709610988565b6000546001600160a01b0390811691161461076b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6105a9610776610988565b83610dca565b6000610494610789610988565b846105218560405180606001604052806025815260200161107f60259139600260006107b3610988565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610bd616565b60006104946107f7610988565b8484610a78565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108845780601f1061085957610100808354040283529160200191610884565b820191906000526020600020905b81548152906001019060200180831161086757829003601f168201915b505050505081565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108845780601f1061085957610100808354040283529160200191610884565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61091a610988565b6000546001600160a01b0390811691161461097c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61098581610ebc565b50565b3390565b6001600160a01b0383166109d15760405162461bcd60e51b8152600401808060200182810382526024815260200180610fc46024913960400191505060405180910390fd5b6001600160a01b038216610a165760405162461bcd60e51b81526004018080602001828103825260228152602001806110e76022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610abd5760405162461bcd60e51b8152600401808060200182810382526025815260200180610f9f6025913960400191505060405180910390fd5b6001600160a01b038216610b025760405162461bcd60e51b815260040180806020018281038252602381526020018061105c6023913960400191505060405180910390fd5b610b4581604051806060016040528060268152602001611036602691396001600160a01b038616600090815260016020526040902054919063ffffffff610bd616565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610b7a908263ffffffff610c6d16565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610c655760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c2a578181015183820152602001610c12565b50505050905090810190601f168015610c575780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610cc7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610d135760405162461bcd60e51b81526004018080602001828103825260218152602001806110a46021913960400191505060405180910390fd5b610d56816040518060600160405280602281526020016110c5602291396001600160a01b038516600090815260016020526040902054919063ffffffff610bd616565b6001600160a01b038316600090815260016020526040902055600354610d82908263ffffffff610f5c16565b6003556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b038216610e25576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600354610e38908263ffffffff610c6d16565b6003556001600160a01b038216600090815260016020526040902054610e64908263ffffffff610c6d16565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038116610f015760405162461bcd60e51b8152600401808060200182810382526026815260200180610fe86026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000610cc783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610bd656fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a7231582009b00b4f488e052d162e0e19ea074f398692c3167d985b27a085e352bf1d765d64736f6c63430005100032","devdoc":{"methods":{"allowance(address,address)":{"details":"See {BEP20-allowance}."},"approve(address,uint256)":{"details":"See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {BEP20-balanceOf}."},"burn(uint256)":{"details":"Burn `amount` tokens and decreasing the total supply."},"decimals()":{"details":"Returns the token decimals."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"getOwner()":{"details":"Returns the bep token owner."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address."},"mint(uint256)":{"details":"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner"},"name()":{"details":"Returns the token name."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"symbol()":{"details":"Returns the token symbol."},"totalSupply()":{"details":"See {BEP20-totalSupply}."},"transfer(address,uint256)":{"details":"See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`\'s tokens of at least `amount`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"userdoc":{"methods":{}},"storageLayout":{"storage":[{"astId":302,"contract":"contracts/tokens/usdt.sol:USDT","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":417,"contract":"contracts/tokens/usdt.sol:USDT","label":"_balances","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":423,"contract":"contracts/tokens/usdt.sol:USDT","label":"_allowances","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":425,"contract":"contracts/tokens/usdt.sol:USDT","label":"_totalSupply","offset":0,"slot":"3","type":"t_uint256"},{"astId":427,"contract":"contracts/tokens/usdt.sol:USDT","label":"_decimals","offset":0,"slot":"4","type":"t_uint8"},{"astId":429,"contract":"contracts/tokens/usdt.sol:USDT","label":"_symbol","offset":0,"slot":"5","type":"t_string_storage"},{"astId":431,"contract":"contracts/tokens/usdt.sol:USDT","label":"_name","offset":0,"slot":"6","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}')},1974:function(e,t,n){e.exports=n.p+"img/lang.38e810f4.svg"},2:function(e,t){},2250:function(e,t,n){"use strict";n("3614")},2376:function(e){e.exports=JSON.parse('{"v":"5.6.9","fr":30,"ip":0,"op":59,"w":500,"h":500,"nm":"btcpi矿工","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"3","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":30,"s":[0]},{"t":60,"s":[100]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[138.268,227.04,0],"ix":2},"a":{"a":0,"k":[4.268,17.468,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-4.018,-10.885],[4.018,-17.219],[-1.018,17.219]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.882353001015,0.443137284821,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[4.267,17.469],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"2","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":30,"s":[0]},{"t":60,"s":[100]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[184.116,240.663,0],"ix":2},"a":{"a":0,"k":[12.826,17.229,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[0.49,-16.98],[12.577,-10.874],[-12.577,16.98]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.882353001015,0.443137284821,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[12.826,17.229],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"1","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":30,"s":[0]},{"t":60,"s":[100]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[93.468,240.663,0],"ix":2},"a":{"a":0,"k":[13.476,17.174,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-13.225,-8.062],[-2.986,-16.924],[13.225,16.924]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.882353001015,0.443137284821,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[13.475,17.174],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"身","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[252.915,297.827,0],"ix":2},"a":{"a":0,"k":[201.224,171.571,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.098,-0.002],[-0.026,0.06],[0.036,0.014]],"o":[[0.168,0.06],[-0.039,-0.016],[-0.068,-0.003]],"v":[[-0.184,-0.051],[0.184,-0.007],[0.072,-0.05]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.666666666667,0.666666666667,0.666666666667,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[81.359,294.149],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.981,-0.981],[-1.889,-1.794],[-3.252,-0.002],[-1.718,-0.006],[-1.719,-0.303],[-3.488,0],[-3.538,0.565],[-3.143,-0.006],[-0.715,0.025],[-0.272,0.005],[0.011,-0.005],[-0.26,-0.099],[-0.003,-0.011],[0.004,-0.008],[-0.326,-0.081],[-1.088,-0.07],[-3.132,0.298],[-1.736,0.404],[-0.356,0.063],[-0.13,0.017],[-0.852,0.01],[-1.881,0],[-0.89,-0.011],[-0.219,-0.009],[-0.597,-0.059],[-0.628,-0.305],[-0.083,-0.038],[-0.02,0.006],[0.052,-0.002],[-0.632,-0.152],[-1.16,-0.029],[-1.898,-0.005],[0.116,2.59],[0.015,0.128],[0,0],[0,0],[0.306,2.364],[0,0]],"o":[[-1.803,1.803],[2.568,2.438],[1.718,0.002],[1.347,0.004],[3.456,0.609],[3.568,0],[2.718,-0.434],[0.717,0.002],[0.077,-0.003],[-0.15,-0.053],[0.088,-0.045],[0.072,0.003],[0.002,0.012],[0.638,0.26],[1.059,0.266],[3.143,0.2],[1.791,-0.171],[0.352,-0.082],[0.029,-0.005],[0.848,-0.088],[1.881,-0.021],[0.891,0],[0.221,0.003],[-0.31,0.002],[-0.384,-0.122],[0.081,0.039],[0.11,0.008],[-0.05,0.014],[0.592,0.272],[1.14,0.274],[1.895,0.047],[2.514,0.006],[-0.006,-0.131],[0,0],[0,0],[-2.384,-0.012],[0,0],[-1.291,-0.06]],"v":[[-50.655,-4.451],[-50.655,2.346],[-41.006,4.064],[-35.852,4.068],[-31.67,4.699],[-21.22,4.995],[-10.565,4.643],[-1.08,4.372],[1.061,4.301],[1.742,4.276],[1.441,4.168],[1.996,4.276],[2.118,4.296],[2.108,4.32],[3.955,5.141],[7.215,5.598],[16.914,5.566],[22.067,4.478],[23.127,4.263],[23.63,4.201],[26.178,4.064],[31.822,4.073],[34.495,4.065],[35.152,4.086],[36.329,4.264],[36.361,4.174],[36.608,4.289],[36.816,4.294],[36.662,4.314],[38.494,4.971],[41.95,5.31],[47.622,5.615],[52.428,0.809],[52.376,0.424],[19.923,0.258],[-42.183,-0.06],[-46.876,-4.211],[-47.079,-5.805]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.666666666667,0.666666666667,0.666666666667,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[79.433,289.823],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":4,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.104,0.01],[-0.115,0.004],[0.018,0.009]],"o":[[0.103,0.033],[-0.018,-0.008],[-0.079,-0.005]],"v":[[-0.167,-0.027],[0.167,0.022],[0.113,-0.003]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.666666666667,0.666666666667,0.666666666667,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[115.929,294.113],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 3","np":4,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0.001,-2.014],[0.341,-3.173],[0.858,-2.958],[0.599,-2.672],[0.33,-1.284],[0.26,-1.329],[-0.016,-3.056],[0.592,-3.155],[0.112,-0.711],[0.052,-0.357],[-0.093,0.358],[0.397,-1.511],[0.631,-1.387],[0.002,-0.005],[0.002,-0.295],[0,0],[0.969,0.004],[0,0],[0,0],[2.379,0.012],[0,0],[-0.006,-0.131],[2.514,0.007],[1.895,0.047],[1.14,0.274],[0.592,0.272],[0.103,0.032],[-0.309,0.003],[0.221,0.003],[0.891,0],[1.88,-0.022],[0.848,-0.087],[0.028,-0.005],[0.353,-0.082],[1.791,-0.17],[3.143,0.201],[1.059,0.266],[0.638,0.26],[0.168,0.06],[0.077,-0.003],[0.717,0.001],[2.718,-0.434],[3.568,0],[3.456,0.61],[1.347,0.005],[1.718,0.001],[2.568,2.438],[-1.803,1.804],[-1.291,-0.06],[0,0],[0,0],[-0.005,0.974],[0,0],[-0.974,-0.005],[0,0],[0,0],[0,0],[0.013,-0.062],[-0.028,-0.212],[-0.005,-0.954],[0.115,-1.558],[0.134,-1.527],[-0.01,-1.685],[-1.65,-4.585],[-0.798,-2.008],[-0.344,-1.075],[-0.473,-2.712],[-0.092,-0.657],[-0.027,-0.099],[-0.022,-0.066],[-0.056,-0.225],[0.022,-1.446],[-0.411,-2.795],[-0.151,-3.175],[-0.015,-2.777],[1.328,-0.844],[0,0],[-2.373,-0.012],[0,0],[0,0],[-0.34,2.349],[0,0]],"o":[[0,0],[1.899,0.635],[-0.001,3.192],[-0.329,3.066],[-0.762,2.628],[-0.292,1.303],[-0.337,1.31],[-0.547,2.801],[0.016,3.193],[-0.133,0.707],[-0.055,0.356],[-0.109,0.589],[-0.046,1.526],[-0.386,1.467],[-0.003,0.005],[0.127,0.245],[0,0],[-0.005,0.974],[0,0],[0,0],[-0.324,2.36],[0,0],[0.015,0.129],[0.116,2.591],[-1.898,-0.005],[-1.16,-0.029],[-0.632,-0.152],[-0.115,0.004],[-0.597,-0.059],[-0.218,-0.009],[-0.89,-0.011],[-1.881,0],[-0.853,0.009],[-0.13,0.017],[-0.357,0.063],[-1.736,0.404],[-3.132,0.298],[-1.088,-0.07],[-0.326,-0.082],[-0.025,0.06],[-0.272,0.005],[-0.715,0.025],[-3.142,-0.006],[-3.538,0.565],[-3.488,0],[-1.719,-0.303],[-1.718,-0.006],[-3.252,-0.003],[-1.889,-1.793],[0.981,-0.981],[0,0],[0,0],[-0.974,-0.005],[0,0],[0.005,-0.969],[0,0],[0,0],[0,0],[-0.003,0.274],[0.037,0.241],[0.127,0.946],[0.009,1.564],[-0.114,1.526],[-0.148,1.68],[0.029,5.072],[0.732,2.037],[0.424,1.065],[0.84,2.625],[0.114,0.654],[0.006,0.042],[0.077,0.166],[0.073,0.22],[0.349,1.408],[-0.045,2.915],[0.463,3.147],[0.132,2.776],[0.009,1.719],[0,0],[0.31,2.353],[0,0],[0,0],[2.373,0.012],[0,0],[0,0]],"v":[[76.592,-48.893],[76.418,-47.634],[79.736,-43.043],[79.232,-33.605],[77.996,-24.218],[75.944,-16.237],[74.757,-12.476],[74.066,-8.447],[73.229,-0.497],[72.554,8.893],[72.185,11.019],[72.024,12.088],[72.001,12.435],[71.633,16.904],[70.291,21.239],[70.283,21.254],[70.487,22.068],[70.457,27.879],[68.694,29.63],[65.74,29.614],[64.768,36.648],[60.038,40.751],[30.385,40.599],[30.437,40.983],[25.631,45.789],[19.959,45.485],[16.503,45.146],[14.671,44.488],[14.338,44.439],[13.161,44.261],[12.504,44.24],[9.831,44.248],[4.188,44.239],[1.639,44.375],[1.137,44.438],[0.076,44.652],[-5.077,45.741],[-14.776,45.772],[-18.036,45.316],[-19.883,44.495],[-20.249,44.45],[-20.93,44.475],[-23.071,44.547],[-32.556,44.817],[-43.211,45.169],[-53.661,44.874],[-57.843,44.242],[-62.997,44.239],[-72.646,42.521],[-72.646,35.724],[-69.07,34.37],[-69.767,28.92],[-72.715,28.905],[-74.466,27.137],[-74.436,21.326],[-72.668,19.58],[-70.957,19.589],[-79.814,-49.694],[-87.491,-49.733],[-87.512,-49.086],[-87.398,-48.387],[-87.238,-45.556],[-87.443,-40.889],[-87.566,-36.313],[-87.695,-31.265],[-84.938,-16.35],[-82.982,-11.642],[-82.154,-8.414],[-80.38,-0.364],[-80.118,1.609],[-80.055,1.862],[-79.845,2.354],[-79.641,3.016],[-79.218,7.367],[-78.405,15.295],[-77.603,24.78],[-77.154,33.128],[-79.38,37.118],[-78.35,44.864],[-73.663,48.988],[-2.114,49.354],[69.436,49.721],[74.165,45.645],[87.714,-48.836]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.556862745098,0.552941176471,0.576470588235,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[101.424,249.648],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 4","np":4,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.082,0.04],[-0.384,-0.121],[-0.078,-0.005]],"o":[[-0.627,-0.304],[0.105,0.01],[-0.082,-0.038]],"v":[[0.19,0.095],[0.158,0.185],[0.437,0.209]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.556862745098,0.552941176471,0.576470588235,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[115.604,293.902],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 5","np":4,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.111,0.008],[-0.018,-0.008],[-0.051,0.014]],"o":[[0.018,0.008],[0.052,-0.002],[-0.021,0.006]],"v":[[-0.105,-0.013],[-0.051,0.013],[0.105,-0.008]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.556862745098,0.552941176471,0.576470588235,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[116.146,294.124],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 6","np":4,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.072,0.003],[-0.039,-0.016],[0.003,0.012]],"o":[[0.036,0.014],[0.003,-0.008],[-0.002,-0.011]],"v":[[-0.062,-0.022],[0.05,0.022],[0.059,-0.002]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.556862745098,0.552941176471,0.576470588235,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[81.492,294.121],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 7","np":4,"cix":2,"bm":0,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.087,-0.045],[-0.149,-0.053],[-0.067,-0.002]],"o":[[0.01,-0.005],[0.099,-0.002],[-0.26,-0.099]],"v":[[-0.277,-0.031],[0.022,0.077],[0.277,0.077]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.556862745098,0.552941176471,0.576470588235,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[81.152,294.022],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 8","np":4,"cix":2,"bm":0,"ix":8,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-2.227,-0.065],[-1.081,-0.052],[-1.1,-0.284],[-2.137,-0.354],[-4.837,-0.324],[-4.574,0.412],[-2.358,0.242],[-0.427,0.026],[0,0]],"o":[[0.607,1.996],[1.081,0.032],[1.293,0.061],[2.095,0.541],[4.804,0.795],[4.568,0.307],[2.361,-0.212],[0.428,-0.044],[0,0],[0,0]],"v":[[-26.831,-3.336],[-22.27,0.153],[-19.025,0.238],[-16.548,0.59],[-10.247,2.2],[4.251,2.795],[17.768,2.924],[24.837,2.182],[26.119,2.088],[26.831,-3.061]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.686274509804,0.498039245605,0.372549019608,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[151.185,203.816],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 9","np":4,"cix":2,"bm":0,"ix":9,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.041,0.019],[-3.073,0.154],[-6.193,-0.017],[-6.122,0.259],[-2.992,0.362],[-3.262,-0.013],[-0.643,1.888],[0,0],[0,0]],"o":[[3.077,-0.019],[6.186,-0.311],[6.126,0.016],[3.013,-0.127],[3.242,-0.392],[2.006,0.007],[0,0],[0,0],[2.859,1.266]],"v":[[-29.614,2.507],[-20.386,2.271],[-1.835,1.885],[16.573,1.939],[25.568,1.079],[35.238,0.654],[39.821,-2.643],[-39.821,-3.051],[-39.203,1.785]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.686274509804,0.498039245605,0.372549019608,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[61.431,203.005],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 10","np":4,"cix":2,"bm":0,"ix":10,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-5.625,1.406],[5.399,0.23],[5.625,-1.406]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.537254901961,0.345098039216,0.20000001496,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[164.616,258.425],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 11","np":4,"cix":2,"bm":0,"ix":11,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[29.406,1.398],[29.82,-1.599],[-29.82,1.6]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.537254901961,0.345098039216,0.20000001496,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[145.816,219.577],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 12","np":4,"cix":2,"bm":0,"ix":12,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-23.686,3.423],[23.283,-0.507],[23.686,-3.422]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.537254901961,0.345098039216,0.20000001496,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[149.398,239.872],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 13","np":4,"cix":2,"bm":0,"ix":13,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[38.687,2.403],[-38.687,-2.702],[-37.995,2.702]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.537254901961,0.345098039216,0.20000001496,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[62.555,220.325],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 14","np":4,"cix":2,"bm":0,"ix":14,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[59.245,1.791],[-59.245,-1.791],[-58.788,1.791]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.537254901961,0.345098039216,0.20000001496,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[87.947,257.214],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 15","np":4,"cix":2,"bm":0,"ix":15,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[18.332,-0.958],[-18.332,-2.12],[-17.79,2.12]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.537254901961,0.345098039216,0.20000001496,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[44.885,240.738],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 16","np":4,"cix":2,"bm":0,"ix":16,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-0.13,-0.313],[0.13,0.313],[0.013,-0.313]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.537254901961,0.345098039216,0.20000001496,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[23.625,259.318],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 17","np":4,"cix":2,"bm":0,"ix":17,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.361,-0.212],[4.568,0.306],[4.803,0.796],[2.095,0.54],[1.293,0.062],[1.081,0.031],[0.607,1.995],[0,0],[2.006,0.007],[3.242,-0.392],[3.013,-0.127],[6.126,0.016],[6.185,-0.311],[3.077,-0.019],[2.859,1.266],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.428,-0.044]],"o":[[-4.574,0.411],[-4.837,-0.325],[-2.138,-0.354],[-1.1,-0.284],[-1.081,-0.051],[-2.227,-0.065],[0,0],[-0.642,1.888],[-3.262,-0.013],[-2.992,0.362],[-6.122,0.259],[-6.193,-0.017],[-3.073,0.154],[-3.041,0.019],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.427,0.026],[-2.358,0.242]],"v":[[69.186,-28.412],[55.669,-28.541],[41.172,-29.137],[34.871,-30.746],[32.394,-31.099],[29.149,-31.183],[24.587,-34.672],[1.485,-34.791],[-3.097,-31.493],[-12.767,-31.068],[-21.762,-30.209],[-40.17,-30.262],[-58.721,-29.876],[-67.949,-29.64],[-77.538,-30.363],[-75.897,-17.53],[1.475,-12.425],[-75.206,-12.126],[-73.213,3.466],[-36.549,4.629],[-72.671,7.706],[-71.065,20.27],[47.427,23.852],[-70.607,23.852],[-69.299,34.085],[68.689,34.791],[70.249,23.503],[59.225,24.679],[70.475,21.867],[72.915,4.212],[25.945,8.143],[73.317,1.298],[75.456,-14.176],[16.23,-13.975],[75.87,-17.175],[77.538,-29.248],[76.256,-29.154]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.619607843137,0.419607873056,0.250980392157,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[99.766,235.152],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 18","np":4,"cix":2,"bm":0,"ix":18,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.009,1.718],[0.133,2.777],[0.463,3.147],[-0.045,2.914],[0.349,1.409],[0.073,0.22],[0.077,0.166],[0.006,0.042],[0.114,0.654],[0.84,2.624],[0.424,1.065],[0.732,2.037],[0.029,5.071],[-0.147,1.681],[-0.114,1.526],[0.009,1.564],[0.127,0.947],[0.037,0.24],[-0.002,0.274],[0,0],[0,0]],"o":[[-0.015,-2.777],[-0.151,-3.174],[-0.411,-2.795],[0.022,-1.446],[-0.055,-0.225],[-0.022,-0.066],[-0.027,-0.099],[-0.092,-0.657],[-0.473,-2.713],[-0.344,-1.075],[-0.798,-2.008],[-1.649,-4.585],[-0.009,-1.685],[0.134,-1.526],[0.115,-1.558],[-0.005,-0.954],[-0.028,-0.211],[0.013,-0.063],[0,0],[0,0],[1.328,-0.844]],"v":[[6.884,39.445],[6.435,31.096],[5.633,21.611],[4.82,13.684],[4.397,9.331],[4.193,8.671],[3.983,8.178],[3.92,7.925],[3.658,5.952],[1.884,-2.098],[1.056,-5.326],[-0.9,-10.033],[-3.657,-24.949],[-3.528,-29.997],[-3.405,-34.572],[-3.2,-39.24],[-3.36,-42.072],[-3.474,-42.77],[-3.453,-43.417],[-6.893,-43.434],[4.658,43.434]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.666666666667,0.666666666667,0.666666666667,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[17.386,243.331],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 19","np":4,"cix":2,"bm":0,"ix":19,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.386,1.467],[-0.046,1.527],[-0.108,0.589],[-0.056,0.356],[-0.133,0.707],[0.016,3.193],[-0.548,2.8],[-0.337,1.31],[-0.293,1.303],[-0.762,2.628],[-0.329,3.066],[-0.002,3.192],[1.899,0.635],[0,0],[0,0],[-0.291,-0.558],[-0.002,0.005]],"o":[[0.397,-1.51],[-0.093,0.358],[0.052,-0.357],[0.111,-0.711],[0.592,-3.155],[-0.015,-3.056],[0.26,-1.33],[0.33,-1.284],[0.599,-2.673],[0.858,-2.958],[0.342,-3.173],[0.001,-2.014],[0,0],[0,0],[0.674,0.003],[0.003,-0.005],[0.631,-1.387]],"v":[[-1.751,30.094],[-1.383,25.625],[-1.361,25.279],[-1.199,24.209],[-0.831,22.083],[-0.156,12.693],[0.682,4.744],[1.372,0.714],[2.561,-3.046],[4.611,-11.027],[5.848,-20.415],[6.352,-29.853],[3.033,-34.444],[-6.354,33.486],[-4.643,33.495],[-3.102,34.444],[-3.094,34.429]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.666666666667,0.666666666667,0.666666666667,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[174.808,236.457],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 20","np":4,"cix":2,"bm":0,"ix":20,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.291,-0.007],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.006,1.291],[0,0],[0,0],[1.599,0.03],[0.881,0.152],[1.765,0.13],[1.543,0.053],[2.934,0.173],[3.327,0.005],[3.171,-0.017],[6.441,0],[0,0],[3.102,0.09],[0.375,0.026],[0,0],[0.171,0.027],[0.944,0.095],[1.606,-0.018],[3.536,-0.15],[7.376,-0.005],[0.4,-0.113],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[1.292,0.006],[0,0],[0,0],[-1.6,0],[-1.33,-0.024],[-1.746,-0.301],[-0.972,-0.071],[-2.936,-0.101],[-3.317,-0.195],[-3.181,-0.004],[-6.439,0.036],[0,0],[-3.106,0],[-0.375,-0.011],[0,0],[0.023,-0.001],[-0.931,-0.176],[-1.599,-0.161],[-3.536,0.039],[-7.362,0.312],[-0.417,0.001],[0,0],[-0.006,1.292]],"v":[[-93.811,2.785],[-89.335,2.809],[-78.217,2.865],[78.188,3.667],[89.311,3.723],[93.787,3.747],[96.135,1.417],[96.146,-0.846],[52.41,-0.846],[47.61,-0.859],[43.846,-1.141],[38.581,-1.699],[34.132,-2.242],[25.317,-2.766],[15.413,-3.18],[5.917,-3.633],[-13.39,-3.173],[-43.557,-3.173],[-52.891,-3.031],[-54.014,-3.09],[-54.322,-3.118],[-54.54,-3.161],[-57.354,-3.592],[-62.227,-3.654],[-72.854,-3.12],[-94.898,-2.243],[-96.128,-2.062],[-96.141,0.432]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.513725490196,0.513725490196,0.537254901961,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[99.828,197.089],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 21","np":4,"cix":2,"bm":0,"ix":21,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-7.362,0.312],[-3.536,0.039],[-1.599,-0.16],[-0.931,-0.176],[0.023,-0.002],[0,0],[-0.375,-0.011],[-3.107,0],[0,0],[-6.439,0.035],[-3.181,-0.005],[-3.316,-0.195],[-2.936,-0.1],[-0.972,-0.071],[-1.746,-0.3],[-1.33,-0.025],[-1.6,0],[0,0],[0,0],[1.291,0.007],[0,0],[0,0],[0,0],[0.007,-1.292],[0,0],[-0.417,0]],"o":[[3.536,-0.15],[1.607,-0.018],[0.944,0.095],[0.171,0.028],[0,0],[0.375,0.025],[3.102,0.09],[0,0],[6.441,0],[3.171,-0.018],[3.327,0.004],[2.935,0.173],[1.543,0.053],[1.765,0.131],[0.881,0.152],[1.599,0.03],[0,0],[0,0],[0.007,-1.291],[0,0],[0,0],[0,0],[-1.292,-0.006],[0,0],[0.4,-0.113],[7.376,-0.006]],"v":[[-72.883,2.719],[-62.258,2.185],[-57.383,2.248],[-54.571,2.679],[-54.353,2.722],[-54.045,2.751],[-52.921,2.808],[-43.587,2.668],[-13.42,2.668],[5.886,2.207],[15.383,2.66],[25.286,3.073],[34.102,3.598],[38.551,4.141],[43.815,4.699],[47.579,4.981],[52.38,4.993],[96.117,4.993],[96.15,-1.697],[93.827,-4.044],[85.967,-4.084],[-83.199,-4.95],[-93.771,-5.005],[-96.124,-2.681],[-96.158,3.777],[-94.928,3.598]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.556862745098,0.552941176471,0.576470588235,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[99.858,191.249],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 22","np":4,"cix":2,"bm":0,"ix":22,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.028,0.186],[4.15,-3.133],[-0.091,-0.105],[0,0],[0,0],[-0.016,-0.009],[-2.793,-2.584],[-0.236,-0.586],[-0.129,0.022],[-0.177,0.025],[-0.398,2.56]],"o":[[-5.122,0.452],[0.07,0.121],[1.471,1.687],[0,0],[0.016,0.009],[1.717,-1.776],[0.633,0.587],[0.129,-0.023],[-0.105,0.02],[0.563,-2.834],[0.033,-0.203]],"v":[[7.038,-6.47],[-7.038,-1.836],[-6.797,-1.496],[-1.962,0.143],[-6.958,6.444],[-6.91,6.47],[3.411,1.651],[4.672,3.431],[5.057,3.358],[5.249,3.339],[6.947,-5.892]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.717647058824,0.603921568627,0.490196108351,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[339.664,12.793],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 23","np":4,"cix":2,"bm":0,"ix":23,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.029,0.021],[-0.034,-0.027],[0.004,0.008]],"o":[[0.032,0.03],[-0.004,-0.007],[-0.03,-0.02]],"v":[[-0.051,-0.042],[0.05,0.042],[0.037,0.02]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.717647058824,0.603921568627,0.490196108351,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[354.619,17.318],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 24","np":4,"cix":2,"bm":0,"ix":24,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.105,0.02],[0.128,-0.024],[-0.026,-0.406],[-0.098,0.494]],"o":[[-0.129,0.022],[0.181,0.45],[0.084,-0.42],[-0.178,0.024]],"v":[[0.097,-0.674],[-0.288,-0.601],[0.012,0.693],[0.288,-0.693]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.666666666667,0.552941176471,0.517647058824,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[344.625,16.825],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 25","np":4,"cix":2,"bm":0,"ix":25,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.196,0.202],[0.016,0.009]],"o":[[0.079,-0.084],[-0.016,-0.009],[0,0]],"v":[[-0.21,0.233],[0.21,-0.208],[0.161,-0.233]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.666666666667,0.552941176471,0.517647058824,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[332.545,19.47],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 26","np":4,"cix":2,"bm":0,"ix":26,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.015,0.371],[0,0],[3.94,-1.319],[0,0],[-1.037,-1.79],[-5.122,0.452]],"o":[[0.099,-2.491],[-1.382,1.984],[0,0],[-0.057,0.156],[4.15,-3.133],[0.114,-0.754]],"v":[[7.608,-1.015],[1.151,-5.353],[-6.507,-0.006],[-6.507,0],[-6.669,5.353],[7.405,0.72]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.666666666667,0.552941176471,0.517647058824,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[339.296,5.603],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 27","np":4,"cix":2,"bm":0,"ix":27,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.566,0.741],[-0.03,0.047],[0.06,-0.073],[0.011,-0.018],[-0.132,0.132],[-0.063,0.039],[-0.709,0.554],[-0.196,0.292],[0.232,0.172],[0,0],[0,0],[0,0],[0,0],[-1.386,-0.438],[-0.894,-1.139],[-0.277,0.361]],"o":[[0.078,-0.102],[-0.063,0.072],[0.158,-0.181],[0.122,-0.139],[0.048,-0.03],[0.783,-0.441],[0.288,-0.226],[-0.255,-0.167],[0,0],[0,0],[0,0],[0,0],[0.26,-0.423],[0.405,0.128],[0.273,-0.435],[0.566,-0.74]],"v":[[3.3,-2.1],[3.849,-2.782],[3.657,-2.571],[3.849,-2.782],[4.224,-3.195],[4.391,-3.298],[6.568,-4.829],[7.281,-5.617],[6.541,-6.123],[6.541,-6.118],[-2.212,-4.414],[-3.43,-1.88],[-7.281,6.123],[-1.337,-0.82],[0.736,1.298],[1.56,0.088]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.717647058824,0.603921568627,0.490196108351,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[309.819,9.882],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 28","np":4,"cix":2,"bm":0,"ix":28,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.158,-0.182],[-0.063,0.071]],"o":[[0.06,-0.074],[0.011,-0.018]],"v":[[-0.101,0.114],[0.091,-0.097]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.717647058824,0.603921568627,0.490196108351,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[313.577,7.197],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 29","np":4,"cix":2,"bm":0,"ix":29,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[1.077,0.706],[0.289,-0.226],[0.783,-0.44],[0.049,-0.03],[0.123,-0.14],[0.077,-0.102],[0.567,-0.739],[0.273,-0.435],[0,0],[0,0],[0,0],[-1.689,0.799]],"o":[[-1.495,-0.46],[-0.195,0.292],[-0.708,0.554],[-0.063,0.04],[-0.132,0.132],[-0.029,0.047],[-0.566,0.741],[-0.276,0.362],[2.267,2.888],[0,0],[0,0],[0,0],[1.683,-0.798]],"v":[[4.983,-5.486],[1.138,-7.3],[0.426,-6.512],[-1.751,-4.982],[-1.918,-4.878],[-2.293,-4.465],[-2.841,-3.783],[-4.582,-1.597],[-5.406,-0.386],[-0.072,7.3],[-0.065,7.3],[0.357,0.588],[3.724,-0.202]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.666666666667,0.552941176471,0.517647058824,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[315.961,11.566],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 30","np":4,"cix":2,"bm":0,"ix":30,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.444,2.468],[-1.131,2.081],[-0.025,0.052],[-1.393,0.125],[-1.313,0.846],[-0.125,0.087],[-0.004,0.001],[-0.516,0.324],[-0.059,0.164],[0.932,-0.199],[2.476,0.766],[1.683,-0.799],[0,0],[0,0],[0,0],[0,0],[-0.374,3.529]],"o":[[0.456,-2.537],[0.028,-0.051],[1.456,0.159],[1.54,-0.138],[0.127,-0.083],[0.004,-0.001],[0.462,0.112],[-1.333,-1.695],[-0.798,0.265],[-3.717,0.805],[0,0],[-1.688,0.798],[0,0],[0,0],[0,0],[0.163,-3.54],[0.27,-2.54]],"v":[[-3.792,-3.794],[-1.512,-10.378],[-1.437,-10.534],[2.916,-10.527],[7.13,-11.872],[7.505,-12.131],[7.516,-12.134],[9.197,-12.755],[9.179,-18.364],[6.592,-17.662],[-2.667,-17.887],[-3.927,-12.603],[-7.294,-11.814],[-7.716,-5.1],[-9.197,18.364],[-5.418,13.593],[-4.691,2.989]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.949019667682,0.611764705882,0.439215716194,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[323.61,23.967],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 31","np":4,"cix":2,"bm":0,"ix":31,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.471,1.686],[0.021,0.027],[0.462,0.113],[0.005,-0.001],[0.127,-0.084],[1.539,-0.138],[1.456,0.158],[0.028,-0.051],[0.456,-2.536],[0.269,-2.539],[0.163,-3.539],[0,0],[-0.038,0.048],[0,0]],"o":[[-0.023,-0.026],[-0.516,0.324],[-0.005,0.002],[-0.124,0.088],[-1.313,0.846],[-1.394,0.125],[-0.026,0.051],[-1.131,2.081],[-0.444,2.469],[-0.374,3.529],[0,0],[0,0],[0,0],[0,0]],"v":[[4.92,-13.09],[4.86,-13.173],[3.179,-12.553],[3.167,-12.551],[2.793,-12.29],[-1.421,-10.947],[-5.774,-10.952],[-5.849,-10.796],[-8.129,-4.214],[-9.028,2.57],[-9.755,13.173],[4.328,-4.607],[4.387,-4.681],[9.755,-11.451]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.807843197093,0.627450980392,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[327.948,24.386],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 32","np":4,"cix":2,"bm":0,"ix":32,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.439,2.621],[-0.769,2.505],[-1.166,4.804],[-1.284,2.138],[-0.644,1.137],[-0.268,0.461],[0.178,-0.213],[-0.187,0.336],[1.351,0.828],[2.689,-10.366],[1.123,-6.048],[0,0],[-1.669,-0.414],[-0.224,2.024]],"o":[[0.431,-2.573],[1.445,-4.713],[0.554,-2.285],[0.673,-1.119],[0.262,-0.464],[0.138,-0.238],[0.253,-0.303],[-1.279,-0.934],[0,0],[-1.488,5.729],[0,0],[1.793,0.417],[0.378,-2.001],[0.27,-2.445]],"v":[[-2.991,11.821],[-1.447,4.256],[3.383,-9.719],[6.144,-15.857],[8.173,-19.21],[8.953,-20.607],[9.718,-21.824],[10.367,-22.79],[6.385,-25.444],[-6.616,5.199],[-10.367,24.191],[-10.362,24.191],[-5.159,25.444],[-4.211,19.412]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.537254901961,0.431372578939,0.400000029919,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[351.11,38.039],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 33","np":4,"cix":2,"bm":0,"ix":33,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.295,3.176],[0.102,0.792],[0.004,0.025],[0.047,0.348],[0.101,0.553],[0.034,0.092],[0.209,0.712],[1.127,2.748],[0.699,1.329],[0.626,1.32],[0.984,1.918],[0,0],[3.146,2.297],[0.253,-0.303],[0.139,-0.238],[0.263,-0.464],[0.672,-1.119],[0.554,-2.285],[1.446,-4.713],[0.431,-2.573],[0.27,-2.445],[0.377,-2.001],[-1.368,-0.402],[-0.191,2.506],[0.889,-4.392],[2.545,-10.566],[0,0],[-0.069,0.073],[-0.249,0.284],[-0.222,0.309],[-0.46,0.475],[-0.142,0.143],[-0.037,0.052],[-0.306,0.415],[-0.073,0.113],[-0.222,0.326],[-0.5,0.733],[-1.395,2.647],[-0.878,2.739],[-0.019,2.335]],"o":[[-0.074,-0.794],[-0.017,-0.099],[-0.054,-0.347],[-0.076,-0.556],[-0.022,-0.063],[-0.257,-0.695],[-0.838,-2.845],[-0.477,-1.163],[-0.679,-1.293],[-0.929,-1.954],[-6.126,-7.973],[-1.039,-2.526],[-0.186,0.336],[0.178,-0.213],[-0.268,0.461],[-0.644,1.137],[-1.284,2.138],[-1.166,4.804],[-0.768,2.505],[-0.44,2.621],[-0.224,2.024],[7.832,1.943],[0.061,-6.661],[6.311,5.429],[-1.01,5.005],[0,0],[0.069,-0.074],[0.259,-0.273],[0.016,-0.03],[0.387,-0.537],[0.048,-0.049],[0.144,-0.204],[0.303,-0.417],[0.002,-0.027],[0.216,-0.33],[0.499,-0.733],[1.688,-2.47],[1.46,-2.77],[0.874,-2.729],[0.027,-3.188]],"v":[[22.257,4.611],[22.011,2.228],[21.935,1.732],[21.789,0.689],[21.568,-0.996],[21.485,-1.225],[20.726,-3.309],[17.84,-11.777],[16.109,-15.57],[14.106,-19.461],[11.224,-25.255],[-0.183,-39.337],[-7.058,-46.715],[-7.706,-45.749],[-8.472,-44.531],[-9.252,-43.134],[-11.28,-39.781],[-14.041,-33.643],[-18.872,-19.669],[-20.415,-12.104],[-21.635,-4.513],[-22.583,1.52],[-7.237,5.639],[-6.876,-9.048],[5.483,7.879],[-1.74,38.82],[4.993,46.715],[5.199,46.492],[5.976,45.667],[6.301,45.202],[7.568,43.697],[7.993,43.255],[8.446,42.633],[9.41,41.415],[9.862,40.676],[10.52,39.693],[12.034,37.504],[16.76,29.826],[20.712,21.949],[22.556,14.172]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.564705882353,0.486274539723,0.458823559331,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[368.535,61.964],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 34","np":4,"cix":2,"bm":0,"ix":34,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.465,9.204],[7.916,10.302],[-0.928,-1.955],[-0.68,-1.292],[-0.477,-1.163],[-0.838,-2.845],[-0.257,-0.695],[-0.023,-0.062],[-0.076,-0.556],[-0.053,-0.347],[-0.017,-0.1],[-0.073,-0.794],[0.026,-3.188],[0.874,-2.729],[1.46,-2.769],[1.687,-2.471],[0.5,-0.733],[0.215,-0.331],[0.002,-0.027],[0.302,-0.416],[0.144,-0.204],[0.048,-0.05],[0.387,-0.538],[0.017,-0.031],[0.258,-0.272],[0.07,-0.074],[0,0]],"o":[[-1.176,-7.386],[0.983,1.917],[0.627,1.319],[0.698,1.329],[1.127,2.748],[0.209,0.711],[0.034,0.092],[0.1,0.554],[0.047,0.348],[0.004,0.025],[0.101,0.791],[0.295,3.176],[-0.02,2.334],[-0.877,2.739],[-1.396,2.647],[-0.501,0.732],[-0.222,0.326],[-0.074,0.113],[-0.306,0.415],[-0.038,0.052],[-0.142,0.142],[-0.46,0.474],[-0.222,0.308],[-0.248,0.284],[-0.07,0.073],[0,0],[8.268,-13.141]],"v":[[11.593,-7.332],[-6.826,-38.436],[-3.945,-32.642],[-1.941,-28.753],[-0.211,-24.96],[2.675,-16.49],[3.434,-14.405],[3.518,-14.177],[3.738,-12.493],[3.884,-11.449],[3.961,-10.953],[4.206,-8.57],[4.506,0.991],[2.661,8.768],[-1.29,16.643],[-6.016,24.324],[-7.531,26.512],[-8.188,27.496],[-8.641,28.234],[-9.604,29.452],[-10.058,30.074],[-10.483,30.516],[-11.75,32.021],[-12.075,32.486],[-12.851,33.31],[-13.058,33.533],[-8.874,38.436]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.537254901961,0.431372578939,0.400000029919,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[386.585,75.145],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 35","np":4,"cix":2,"bm":0,"ix":35,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.007,0.018],[-0.011,-0.061]],"o":[[0.012,0.061],[-0.02,-0.11]],"v":[[-0.02,-0.092],[0.019,0.092]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.537254901961,0.431372578939,0.400000029919,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[399.467,59.012],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 36","np":4,"cix":2,"bm":0,"ix":36,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[4.633,1.127],[0.123,0.067],[-0.654,-0.089],[-0.582,4.279],[0.804,1.555],[0.463,-0.028]],"o":[[-0.136,-0.033],[0.517,0.457],[2.662,0.362],[0.314,-2.31],[-0.481,0.024],[-0.411,7.703]],"v":[[-3.589,5.647],[-3.976,5.495],[-2.21,6.338],[3.662,-0.755],[2.821,-6.774],[1.393,-6.698]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.223529426724,0.356862745098,0.388235324037,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[293.957,64.499],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 37","np":4,"cix":2,"bm":0,"ix":37,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[1.6,2.747],[1.721,0.144],[0,0],[-1.079,0.602],[-1.464,-3.101],[-0.659,-0.444],[-0.602,-0.041]],"o":[[0,0],[0,0],[-0.411,-0.701],[0,0],[0,0],[1.08,-0.597],[0.431,0.912],[1.186,0.792],[-0.11,0.462]],"v":[[5.313,2.381],[6.391,4.055],[-1.905,1.683],[-5.337,0.406],[-5.331,0.352],[-5.312,-3.446],[0.667,-1.329],[2.378,0.661],[5.483,1.666]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.807843197093,0.627450980392,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[358.925,108.985],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 38","np":4,"cix":2,"bm":0,"ix":38,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.793,-0.911],[3.166,-1.41],[-1.376,5.912],[-5.002,-0.429],[-0.411,-0.702],[0,0],[0,0]],"o":[[-6.858,1.649],[-4.924,2.197],[1.023,-4.397],[1.721,0.144],[1.6,2.747],[0,0],[-2.234,3.357]],"v":[[7.112,7.178],[-10.753,9.271],[-15.253,-5.146],[-0.635,-11.039],[2.797,-9.762],[11.093,-7.39],[16.629,1.195]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.807843197093,0.627450980392,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[354.223,120.43],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 39","np":4,"cix":2,"bm":0,"ix":39,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-1.079,0.603],[-1.464,-3.102],[-0.659,-0.445],[0,0],[-0.158,17.213],[3.647,0.984],[-0.291,-1.067],[-0.026,-0.086],[-0.002,-0.033],[-0.01,-0.414],[-0.064,-0.948],[-0.011,-1.819],[0.182,-3.772],[0.153,-3.801],[0.006,-2.034],[0.001,-0.407],[-0.001,-0.329],[-0.211,-0.018]],"o":[[0,0],[1.08,-0.597],[0.431,0.911],[0,0],[0,0],[-0.829,-0.244],[-0.385,0.925],[0.04,0.145],[0.001,0.024],[0.023,0.414],[0.022,0.95],[0.122,1.816],[0.024,3.778],[-0.185,3.798],[-0.082,2.032],[-0.001,0.407],[0,-0.035],[0.223,0.01],[0,0]],"v":[[-3.324,21.699],[-3.306,17.9],[2.673,20.019],[4.384,22.008],[4.384,22.002],[4.379,-20.034],[-2.678,-22.008],[-2.883,-18.973],[-2.785,-18.631],[-2.781,-18.548],[-2.76,-17.305],[-2.613,-14.459],[-2.427,-9.02],[-3.079,2.273],[-3.863,13.649],[-3.988,19.748],[-3.988,20.969],[-3.991,21.717],[-3.331,21.753]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.223529426724,0.356862745098,0.388235324037,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[356.918,87.638],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 40","np":4,"cix":2,"bm":0,"ix":40,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.365,-0.966],[-0.043,-0.496],[-0.472,3.016],[0.265,-1.089]],"o":[[0.068,0.497],[0.581,-2.143],[-0.292,1.082],[-0.251,1.026]],"v":[[-0.859,2.376],[-0.712,3.865],[0.859,-3.865],[0.01,-0.613]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.262745098039,0.396078461292,0.435294147566,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[358.144,291.921],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 41","np":4,"cix":2,"bm":0,"ix":41,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.337,2.937],[-9.303,10.143],[0.527,-0.024],[0.324,-2.684],[-0.01,0.052],[0.145,-0.521],[0.481,-0.974],[1.093,-2.128],[0.452,-2.361],[0.348,-0.601],[0.553,-1.119],[1.076,-2.162],[0.643,-2.498],[0.13,-0.416],[0.023,-0.046],[0.182,-1.604],[0.728,-2.213],[0.701,-4.796],[0.469,-2.247],[0.331,-2.66],[0.119,-1.012],[-0.007,0.03],[0.119,-0.511],[0.034,-1.391],[0.162,-0.905],[-0.046,-2.601],[0.328,-1.575],[0.018,-1.531],[0.079,-1.285],[-0.063,-2.567],[0.002,-0.453],[0.004,-0.136],[0.438,0.013],[1.155,-0.831],[-1.739,-1.342],[-3.095,2.25],[-0.092,0.076],[0.387,6.359]],"o":[[-1.134,-9.879],[-0.524,-0.197],[-2.863,0.128],[0.103,-0.855],[-0.104,0.531],[-0.342,1.225],[-1.166,2.362],[-1.079,2.1],[-0.192,1.003],[-0.628,1.079],[-1.15,2.327],[-1.153,2.318],[-0.109,0.421],[0,-0.059],[-0.719,1.458],[-0.218,1.925],[-1.521,4.627],[-0.333,2.27],[-0.547,2.616],[-0.126,1.015],[0.013,-0.23],[-0.117,0.511],[-0.316,1.355],[-0.03,1.219],[-0.46,2.566],[0.039,2.204],[-0.311,1.493],[-0.016,1.284],[-0.158,2.552],[0.011,0.453],[0.001,0.136],[-0.433,-0.072],[-1.502,-0.045],[0.958,2.706],[3.688,2.854],[0.097,-0.071],[3,-2.473],[-0.164,-2.69]],"v":[[-1.15,44.012],[19.45,-68.859],[17.856,-69.139],[13.05,-64.333],[12.903,-63.514],[12.532,-61.934],[11.606,-59.613],[8.666,-53.04],[5.778,-46.592],[5.186,-44.221],[3.403,-40.908],[0.785,-34.977],[-1.825,-27.904],[-2.176,-26.645],[-2.519,-25.861],[-3.721,-21.618],[-5.515,-15.188],[-8.186,-0.912],[-9.326,5.877],[-10.957,13.697],[-11.171,16.757],[-11.398,17.741],[-11.775,19.268],[-12.314,23.393],[-12.452,26.783],[-12.97,34.527],[-13.034,41.402],[-13.646,45.926],[-13.644,49.772],[-14.218,57.383],[-14.184,58.741],[-14.195,59.148],[-15.5,58.996],[-19.45,60.266],[-15.266,66.309],[-3.688,66.867],[-3.418,66.632],[-0.339,52.513]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.223529426724,0.356862745098,0.388235324037,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[291.205,236.52],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 42","np":4,"cix":2,"bm":0,"ix":42,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.771,2.852],[0.326,-0.451],[1.867,-2.819],[0,0]],"o":[[-3.377,0.953],[-0.186,0.261],[0,0],[0.769,-5.246]],"v":[[5.064,-6.28],[-1.803,-3.878],[-5.064,1.177],[2.685,6.28]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.564705882353,0.486274539723,0.458823559331,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[286.997,16.927],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 43","np":4,"cix":2,"bm":0,"ix":43,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.414,0.943],[0.078,-0.01],[-0.249,0.069],[-0.754,0.123],[-0.799,0.097],[-0.881,0.1],[-1.716,0.23],[-0.533,0.075],[-0.156,0.021],[0.909,0.006],[0.093,2.569],[4.28,0.701],[1.924,-5.346]],"o":[[0.163,-0.109],[0.253,-0.094],[0.736,-0.205],[0.585,-0.095],[0.881,-0.108],[1.721,-0.196],[0.725,-0.098],[0.031,-0.005],[0.08,-0.01],[2.503,0.017],[-4.626,-0.799],[-6.735,-1.103],[1.452,0.783]],"v":[[-8.604,4.975],[-8.292,4.704],[-7.511,4.478],[-5.267,4.006],[-3.693,3.806],[-1.052,3.479],[4.105,2.88],[6.465,2.532],[7.626,2.378],[8.401,2.324],[13.206,-2.448],[-0.788,-4.815],[-13.299,5.021]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.686274509804,0.450980422076,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[250.843,328.873],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 44","np":4,"cix":2,"bm":0,"ix":44,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.688,2.855],[0,0],[7.288,1.259],[2.503,0.017],[0.08,-0.011],[0.031,-0.004],[0.725,-0.097],[1.721,-0.196],[0.881,-0.108],[0.585,-0.096],[0.736,-0.205],[0.253,-0.094],[0.163,-0.109],[1.452,0.783],[-0.098,-1.413],[0,0],[0,0]],"o":[[0,0],[0,0],[0.093,2.568],[0.909,0.006],[-0.156,0.021],[-0.533,0.076],[-1.716,0.231],[-0.881,0.1],[-0.799,0.097],[-0.754,0.123],[-0.249,0.069],[0.078,-0.011],[-1.414,0.943],[-1.224,3.402],[0,0],[0,0],[-3.095,2.249]],"v":[[14.243,-19.723],[15.778,6.221],[2.353,3.874],[-2.452,8.646],[-3.227,8.7],[-4.388,8.853],[-6.748,9.201],[-11.905,9.801],[-14.546,10.128],[-16.12,10.328],[-18.364,10.8],[-19.145,11.026],[-19.457,11.297],[-24.152,11.343],[-25.723,19.461],[25.395,19.723],[25.82,-19.163]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.988235353956,0.541176470588,0.239215701234,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[261.696,322.551],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 45","np":4,"cix":2,"bm":0,"ix":45,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.005,1.001],[1,0.005],[0.005,-1.006],[-1.001,-0.005]],"o":[[0.005,-1.006],[-1.001,-0.005],[-0.006,1.001],[1.001,0.005]],"v":[[1.819,0.012],[0.01,-1.816],[-1.818,-0.007],[-0.009,1.816]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.223529426724,0.356862745098,0.388235324037,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[291.472,64.725],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 46","np":4,"cix":2,"bm":0,"ix":46,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.107,-1.98],[4.632,1.127],[-0.341,6.59],[-3.312,8.824],[0,0],[0,0],[0,0],[1.563,-13.197]],"o":[[-0.411,7.704],[-2.096,-0.511],[0.766,-15.036],[4.206,-0.764],[0,0],[-0.006,0.016],[-0.119,-0.888],[-0.253,2.151]],"v":[[-1.688,18.163],[-6.669,30.508],[-9.009,18.745],[0.626,-30.195],[9.35,-31.635],[5.5,-23.632],[5.488,-23.611],[-1.193,11.93]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.305882352941,0.447058853449,0.478431402468,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[297.038,39.637],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 47","np":4,"cix":2,"bm":0,"ix":47,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.662,-0.074],[-0.132,-0.015],[-0.004,-0.001],[-1.482,-0.284],[-3.058,-0.312],[-2.919,1.275],[-0.536,0.269],[-0.038,0.026],[-0.127,0.032],[-0.018,0.004],[-0.001,0],[-0.028,0.006],[-0.053,0.014],[0.036,-0.01],[-0.05,0.005],[-0.623,0.106],[-0.729,0.446],[-0.437,3.046],[0.136,3.397],[0.205,1.575],[0.171,1.184],[0,0],[-1.194,-8.521],[-0.419,-0.132]],"o":[[0.052,0.006],[0.164,0.03],[1.481,0.289],[3.019,0.578],[3.112,0.317],[0.55,-0.239],[0.147,-0.073],[-0.221,0.057],[0.013,-0.002],[0.001,-0.001],[0.025,-0.006],[0.038,-0.01],[-0.045,0.012],[0.062,-0.013],[0.587,-0.053],[0.829,-0.142],[2.808,-1.722],[0.483,-3.357],[-0.064,-1.588],[-0.142,-1.083],[0,0],[0,0],[0.346,0.186],[0.643,0.202]],"v":[[-15.182,12.8],[-14.833,12.841],[-14.425,12.913],[-9.984,13.795],[-0.849,15.158],[8.283,14.49],[9.923,13.734],[10.187,13.589],[10.147,13.594],[10.193,13.585],[10.195,13.583],[10.275,13.565],[10.411,13.529],[10.29,13.562],[10.465,13.533],[12.178,13.331],[14.54,12.493],[18.69,4.504],[19.419,-5.683],[18.969,-10.425],[18.455,-14.066],[-16.404,-15.765],[-18.361,12.02],[-17.222,12.503]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.258823529412,0.360784313725,0.400000029919,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[309.586,101.757],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 48","np":4,"cix":2,"bm":0,"ix":48,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.024,-0.005],[0.003,-0.001],[-0.039,0.011],[0.005,-0.001]],"o":[[-0.002,0.001],[0.03,-0.007],[-0.005,0.001],[-0.033,0.009]],"v":[[-0.045,0.009],[-0.051,0.014],[0.052,-0.014],[0.036,-0.011]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.235294132607,0.337254901961,0.388235324037,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[319.824,115.332],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 49","np":4,"cix":2,"bm":0,"ix":49,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.039,-0.01],[-0.005,0.001],[-0.045,0.013]],"o":[[0.005,-0.001],[0.036,-0.01],[-0.053,0.015]],"v":[[-0.068,0.018],[-0.053,0.015],[0.068,-0.018]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.235294132607,0.337254901961,0.388235324037,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[319.929,115.304],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 50","np":4,"cix":2,"bm":0,"ix":50,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-0.141,-1.084],[-0.064,-1.588],[0.482,-3.357],[2.808,-1.721],[0.829,-0.141],[0.588,-0.053],[0.062,-0.013],[0.029,-0.008],[0.147,-0.073],[0.549,-0.24],[3.112,0.318],[3.019,0.578],[1.481,0.29],[0.164,0.03],[0.052,0.006],[0.643,0.202],[0.346,0.186],[-0.414,-0.693],[-4.764,2.451]],"o":[[0,0],[0.171,1.183],[0.205,1.574],[0.136,3.396],[-0.438,3.045],[-0.728,0.447],[-0.623,0.106],[-0.05,0.005],[-0.04,0.011],[-0.038,0.027],[-0.536,0.269],[-2.92,1.274],[-3.058,-0.312],[-1.483,-0.284],[-0.004,-0.001],[-0.133,-0.015],[-0.662,-0.074],[-0.419,-0.131],[0.183,1.304],[3.11,5.219],[4.769,-2.451]],"v":[[21.461,-16.88],[15.257,-17.181],[15.771,-13.54],[16.221,-8.798],[15.493,1.388],[11.342,9.376],[8.98,10.215],[7.267,10.417],[7.092,10.445],[6.989,10.473],[6.725,10.617],[5.086,11.375],[-4.047,12.042],[-13.181,10.678],[-17.623,9.797],[-18.03,9.724],[-18.38,9.684],[-20.42,9.387],[-21.559,8.905],[-20.68,11.962],[16.79,14.699]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.235294132607,0.337254901961,0.388235324037,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[312.784,104.873],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 51","np":4,"cix":2,"bm":0,"ix":51,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.013,-0.003],[-0.221,0.057],[-0.002,0.002]],"o":[[-0.127,0.032],[0.002,-0.002],[-0.018,0.004]],"v":[[0.068,-0.021],[0.108,-0.026],[0.113,-0.031]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.235294132607,0.337254901961,0.388235324037,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[319.666,115.372],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 52","np":4,"cix":2,"bm":0,"ix":52,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.026,-0.006],[0.001,-0.001],[-0.033,0.008]],"o":[[-0.001,0.001],[0.024,-0.006],[-0.027,0.006]],"v":[[-0.039,0.008],[-0.041,0.01],[0.041,-0.01]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.235294132607,0.337254901961,0.388235324037,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[319.82,115.332],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 53","np":4,"cix":2,"bm":0,"ix":53,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.019,-0.065],[-0.475,0.751]],"o":[[-0.301,1.047],[-0.017,0.065]],"v":[[1.793,2.308],[1.844,2.113]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0.569,-2.833],[0,0],[-0.282,1.397],[1.119,1.038],[0.769,-0.825],[0,0],[0,0],[-0.087,-0.087],[-1.854,1.828],[0.097,-0.034],[-0.419,0.2],[-0.05,-0.062],[-0.176,-0.239],[-1.07,-0.986],[-0.28,-0.174],[0,0]],"o":[[-2.33,-1.159],[-0.467,3.006],[0.085,1.329],[0,0],[-0.06,-0.937],[-3.112,-2.879],[-0.038,0.048],[0,0],[0.079,0.092],[1.852,1.853],[-0.016,0.017],[0.386,-0.258],[0.05,0.063],[0.024,0.036],[0.775,1.211],[0.257,0.236],[3.516,-9.078],[0,0]],"v":[[9.73,-7.149],[5.816,-8.994],[3.841,1.623],[3.372,3.946],[3.841,1.623],[2.28,-1.451],[-8.461,3.809],[-8.52,3.885],[-9.73,5.412],[-9.501,5.695],[-2.705,5.695],[-1.961,5.002],[-0.728,4.334],[-0.578,4.523],[-0.28,4.934],[2.279,8.39],[3.088,8.994],[9.73,-7.144]],"c":true},"ix":2},"nm":"路径 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"合并路径 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.537254901961,0.431372578939,0.400000029919,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[340.795,15.895],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 54","np":6,"cix":2,"bm":0,"ix":54,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.085,1.33],[0,0]],"o":[[-0.282,1.398],[0,0]],"v":[[0.192,-1.161],[-0.277,1.161]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.537254901961,0.431372578939,0.400000029919,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[344.444,18.679],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 55","np":4,"cix":2,"bm":0,"ix":55,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.776,1.211],[0.023,0.036],[0.05,0.063],[0.386,-0.258],[-0.016,0.017],[1.852,1.853],[0.079,0.093],[0,0],[0,0],[0.046,1.375],[-0.001,0.066],[0.042,0.133],[0.02,0.064],[0.18,0.284],[-0.188,-0.215],[0.996,0.915],[0.048,0.045],[0.098,0.058],[0.168,0.083],[0.023,-0.006],[0.786,-0.213],[0.316,-0.081],[0.216,-0.367],[0.169,-0.488],[0.013,-2.339],[-0.003,-2.325],[0.044,-2.408],[0.412,-4.858],[0.083,-1.141],[-4.757,-0.283],[-6.784,-1.407],[-0.672,3.193],[-3.382,8.733],[0.256,0.236]],"o":[[-0.175,-0.239],[-0.051,-0.063],[-0.419,0.2],[0.097,-0.034],[-1.854,1.828],[-0.087,-0.087],[0,0],[0,0],[-1.007,-0.917],[-0.004,-0.121],[-0.026,-0.068],[-0.041,-0.128],[-0.151,-0.302],[-0.073,-0.116],[-0.871,-1.035],[-0.067,-0.061],[-0.024,-0.005],[-0.157,-0.094],[-0.024,0.006],[-0.794,0.185],[-0.315,0.086],[-0.237,0.369],[-0.481,0.819],[-0.747,2.15],[-0.014,2.626],[0.002,2.407],[-0.088,4.877],[-0.097,1.148],[4.122,-0.112],[5.562,0.33],[0.335,-2.441],[1.677,-7.993],[-0.279,-0.174],[-1.071,-0.986]],"v":[[18.125,-17.642],[17.827,-18.053],[17.676,-18.242],[16.443,-17.575],[15.699,-16.882],[8.904,-16.882],[8.674,-17.164],[-7.978,3.86],[-6.931,-12.717],[-8.628,-16.352],[-8.63,-16.629],[-8.732,-16.924],[-8.868,-17.314],[-9.371,-18.195],[-9.737,-18.705],[-12.5,-21.677],[-12.669,-21.834],[-12.841,-21.92],[-13.336,-22.178],[-13.406,-22.162],[-15.767,-21.537],[-16.714,-21.286],[-17.397,-20.179],[-18.419,-18.067],[-19.259,-12.62],[-19.896,-6.174],[-20.108,1.048],[-21.223,15.663],[-21.492,19.094],[-8.056,19.287],[11.182,22.178],[12.689,13.743],[21.492,-13.582],[20.685,-14.186]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.564705882353,0.486274539723,0.458823559331,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[322.391,38.471],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 56","np":4,"cix":2,"bm":0,"ix":56,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.301,1.047],[-0.017,0.065]],"o":[[0.019,-0.065],[-0.475,0.751]],"v":[[0.187,-0.426],[0.238,-0.622]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.564705882353,0.486274539723,0.458823559331,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[342.402,18.629],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 57","np":4,"cix":2,"bm":0,"ix":57,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.088,4.877],[0.003,2.407],[-0.015,2.626],[-0.747,2.151],[-0.482,0.819],[-0.237,0.369],[-0.314,0.086],[-0.793,0.185],[-0.024,0.006],[-0.158,-0.093],[-0.025,-0.005],[-0.066,-0.061],[-0.87,-1.035],[-0.074,-0.116],[-0.151,-0.302],[-0.04,-0.128],[-0.027,-0.068],[-0.004,-0.12],[-1.007,-0.917],[0,0],[0,0],[1.434,0.454],[0.26,-0.424],[0,0],[1.563,-13.197],[0.107,-1.98],[-1.956,0.053],[-0.098,1.148]],"o":[[0.044,-2.408],[-0.002,-2.324],[0.013,-2.338],[0.169,-0.488],[0.215,-0.368],[0.317,-0.081],[0.786,-0.213],[0.024,-0.006],[0.168,0.083],[0.097,0.058],[0.047,0.045],[0.997,0.915],[-0.187,-0.215],[0.18,0.284],[0.02,0.065],[0.042,0.133],[-0.002,0.067],[0.045,1.375],[0,0],[0,0],[0,0],[-1.386,-0.437],[-0.006,0.016],[-0.119,-0.888],[-0.253,2.151],[1.727,-0.102],[0.083,-1.141],[0.411,-4.858]],"v":[[-3.339,6.306],[-3.128,-0.916],[-2.491,-7.362],[-1.651,-12.809],[-0.629,-14.92],[0.054,-16.028],[1,-16.279],[3.361,-16.904],[3.433,-16.92],[3.927,-16.662],[4.099,-16.576],[4.267,-16.419],[7.03,-13.447],[7.398,-12.937],[7.9,-12.056],[8.036,-11.666],[8.138,-11.371],[8.141,-11.094],[9.837,-7.458],[10.272,-14.346],[10.267,-14.346],[2.859,-24.151],[-3.085,-17.207],[-3.096,-17.186],[-9.778,18.354],[-10.273,24.588],[-4.724,24.352],[-4.454,20.921]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.537254901961,0.431372578939,0.400000029919,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[305.622,33.213],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 58","np":4,"cix":2,"bm":0,"ix":58,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.005,0.952],[0.952,0.005],[0.005,-0.957],[-0.958,-0.004]],"o":[[0.005,-0.958],[-0.958,-0.005],[-0.004,0.953],[0.952,0.005]],"v":[[1.727,0.009],[0.009,-1.727],[-1.728,-0.009],[-0.009,1.727]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.223529426724,0.356862745098,0.388235324037,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[336.074,68.184],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 59","np":4,"cix":2,"bm":0,"ix":59,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-2.51,-1.541],[2.69,-10.366],[1.123,-6.048],[1.695,0.008],[-1.358,9.797],[-0.672,3.192],[0,0]],"o":[[1.964,0.984],[0,0],[-1.488,5.728],[-1.267,6.849],[-3.084,-0.016],[0.335,-2.442],[3.42,-16.304],[0,0]],"v":[[5.67,-32.841],[12.64,-28.99],[-0.361,1.653],[-4.112,20.645],[-8.323,32.833],[-11.282,19.064],[-9.776,10.629],[5.67,-32.836]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.305882352941,0.447058853449,0.478431402468,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[344.855,41.586],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 60","np":4,"cix":2,"bm":0,"ix":60,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.009,22.818],[0.013,0.014],[0,0],[0.256,-0.147],[0.396,-0.22],[-0.051,0.011],[1.623,-0.555],[1.565,-0.604],[0.817,-0.237],[0.064,-0.017],[1.582,-0.925],[-1.472,-2.153],[-4.577,1.667],[-0.869,-0.761],[-0.004,-0.013],[-0.157,-0.749],[-0.277,-1.024],[-0.049,-1.565],[0.002,-2.879],[-0.206,-2.866],[-0.516,-2.979],[-0.002,0.025],[-0.001,-0.007],[-0.011,-0.272],[0.022,-0.737],[0,-1.416],[0,0],[-0.041,-1.356],[-0.007,-0.199],[0.001,-0.004],[0.134,-1.004],[-0.014,0.075],[0.071,-0.359],[0.101,-0.636],[0.075,-0.881],[0.16,-0.902],[0.004,-3.023],[0,-6.154],[0,0],[-0.05,-2.872],[0.794,-2.713],[0.976,-3.04],[0.41,-1.572],[0.416,-1.436],[0.45,-1.372],[0.012,-0.037],[0.21,-0.318],[0.402,-0.665],[0.36,-0.572],[0.07,-0.104],[0.52,-0.928],[0.033,-0.061],[-0.16,-0.303],[0,0],[-2.795,-0.451],[-1.665,4.614],[0,0],[-0.258,0.954],[0.069,0.496],[-0.251,1.027],[-0.292,1.081],[-1.054,21.083]],"o":[[-0.013,-0.014],[0,0],[-0.254,0.148],[-0.393,0.226],[-0.012,0.007],[-1.579,0.667],[-1.587,0.543],[-0.793,0.306],[-0.063,0.018],[-1.432,-0.837],[-2.121,1.241],[3.369,4.927],[0.116,1.388],[0.005,0.016],[0.195,0.742],[0.217,1.038],[0.433,1.603],[0.089,2.864],[-0.003,2.871],[0.215,3.013],[0.048,0.278],[0.001,0.007],[0.03,0.271],[0.03,0.738],[-0.044,1.416],[0,0],[0,1.357],[0.002,0.059],[-0.043,0.148],[-0.336,0.959],[-0.069,0.519],[-0.066,0.359],[-0.125,0.632],[-0.14,0.872],[-0.092,1.087],[-0.53,2.989],[-0.008,6.154],[0,0],[0,2.872],[0.051,2.888],[-0.898,3.067],[-0.496,1.545],[-0.377,1.446],[-0.402,1.39],[-0.019,0.059],[-0.175,0.341],[-0.43,0.647],[-0.349,0.577],[-0.071,0.105],[-0.599,0.88],[-0.034,0.06],[0.141,0.323],[0,0],[1.327,2.503],[2.85,0.456],[0,0],[0.285,-0.789],[-0.043,-0.496],[0.366,-0.966],[0.265,-1.089],[1.57,-10.041],[1.305,-26.213]],"v":[[10.562,-80.577],[10.522,-80.617],[9.772,-90.86],[9.008,-90.415],[7.817,-89.76],[7.352,-89.514],[2.397,-87.976],[-2.333,-86.285],[-4.739,-85.436],[-4.93,-85.386],[-9.709,-85.432],[-11.433,-78.856],[1.584,-77.539],[3.119,-74.312],[3.133,-74.267],[3.594,-72.019],[4.418,-68.945],[4.965,-65.175],[5.582,-56.641],[5.669,-48.001],[6.481,-38.94],[6.548,-38.626],[6.55,-38.608],[6.603,-37.792],[6.592,-35.577],[6.514,-31.335],[6.514,-22.242],[6.537,-18.171],[6.539,-17.55],[6.443,-17.185],[5.884,-14.268],[5.891,-14.391],[5.677,-13.315],[5.326,-11.416],[4.987,-8.78],[4.794,-7.09],[4.344,1.882],[4.344,20.345],[4.344,38.556],[4.423,47.167],[3.489,54.228],[1.019,63.499],[-0.477,68.133],[-1.498,72.496],[-2.663,76.707],[-2.709,76.848],[-3.317,77.832],[-4.597,79.771],[-5.671,81.488],[-5.883,81.803],[-7.568,84.517],[-7.663,84.701],[-7.212,85.641],[-7.212,85.647],[-1.097,90.403],[5.547,84.415],[5.547,84.41],[6.361,81.797],[6.213,80.309],[7.083,77.319],[7.932,74.068],[11.6,27.913]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.223529426724,0.356862745098,0.388235324037,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[351.071,213.988],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 61","np":4,"cix":2,"bm":0,"ix":61,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.459,0.734],[0.001,-0.008],[-2.207,-1.167],[-1.417,2.283],[-0.124,0.304],[-0.025,0.736],[-0.241,1.098],[0.937,2.237],[0.073,0.145],[0.779,0.181],[0,0],[1.695,0.009],[0.5,2.4],[0.07,-0.403]],"o":[[-0.001,0.008],[-1.216,2.139],[2.355,1.243],[0.165,-0.266],[0.342,-0.65],[0.238,-1.098],[0.502,-2.288],[-0.062,-0.149],[-0.758,-0.182],[0,0],[-1.267,6.849],[-1.601,-0.008],[-0.084,0.4],[-0.274,0.498]],"v":[[-4.956,1.183],[-4.961,1.208],[-3.164,7.649],[3.411,5.925],[3.906,4.895],[4.456,2.816],[5.212,-0.472],[5.24,-7.907],[5.036,-8.347],[2.733,-8.893],[2.729,-8.893],[-1.482,3.296],[-4.681,-0.196],[-4.924,1.006]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.223529426724,0.356862745098,0.388235324037,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[338.015,71.123],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 62","np":4,"cix":2,"bm":0,"ix":62,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.11,0.462],[-1.116,4.654],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0.368,-1.494],[0,0],[-3.51,5.578],[0,0],[0,0],[0,0],[0,0]],"v":[[-6.566,-1.182],[-4.181,-11.049],[6.736,1.749],[0.689,11.049],[-0.123,9.791],[-5.659,1.206],[-6.737,-0.467]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.666666666667,0.552941176471,0.517647058824,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[370.975,111.834],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 63","np":4,"cix":2,"bm":0,"ix":63,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[4.301,0.644],[7.973,-1.386],[-0.185,-0.572],[-2.66,0.464],[-0.019,0.004],[-0.35,0.012],[-0.596,0.033],[-1.394,0.083],[-2.613,0.113],[-5.444,0.388],[-0.902,0.065]],"o":[[-8.659,-1.296],[-0.084,0.624],[0.865,2.673],[0.021,-0.004],[0.35,-0.022],[0.596,-0.028],[1.395,-0.077],[2.611,-0.155],[5.453,-0.235],[0.902,-0.064],[-1.38,-2.655]],"v":[[11.917,-3.345],[-19.964,-1.002],[-19.824,0.82],[-13.912,4.177],[-13.857,4.167],[-12.807,4.116],[-11.02,4.028],[-6.838,3.767],[1.001,3.412],[17.344,2.418],[20.049,2.222]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.686274509804,0.450980422076,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[379.648,329.743],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 64","np":4,"cix":2,"bm":0,"ix":64,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[5.453,-0.235],[2.612,-0.155],[1.395,-0.077],[0.595,-0.028],[0.349,-0.023],[0.021,-0.004],[0.865,2.673],[-0.083,0.624],[0,0],[0,0],[2.85,0.456],[1.327,2.504],[0,0],[0,0],[2.501,4.811],[0.902,-0.064]],"o":[[-2.614,0.112],[-1.394,0.083],[-0.595,0.032],[-0.351,0.012],[-0.02,0.003],[-2.661,0.464],[-0.185,-0.572],[-3.167,0.551],[0,0],[-1.665,4.613],[-2.796,-0.45],[0,0],[0,0],[0,0],[-0.902,0.065],[-5.443,0.388]],"v":[[7.621,12.523],[-0.219,12.878],[-4.401,13.139],[-6.187,13.227],[-7.237,13.278],[-7.292,13.288],[-13.204,9.931],[-13.345,8.109],[-18.534,9.074],[-16.41,-22.227],[-23.054,-16.24],[-29.169,-20.996],[-28.092,21.939],[28.138,22.227],[26.668,11.333],[23.963,11.529]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.988235353956,0.541176470588,0.239215701234,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[373.028,320.632],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 65","np":4,"cix":2,"bm":0,"ix":65,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-2.571,-0.169],[0.169,-2.566],[2.571,0.175],[-0.169,2.571]],"o":[[2.571,0.169],[-0.169,2.571],[-2.571,-0.169],[0.169,-2.566]],"v":[[0.309,-4.656],[4.653,0.306],[-0.309,4.65],[-4.653,-0.312]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.513725490196,0.494117676978,0.478431402468,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[46.439,330.036],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 66","np":4,"cix":2,"bm":0,"ix":66,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.683,0.004],[0,0],[0,0],[0,0],[-0.003,0.688],[0,0],[-0.689,-0.004],[0,0],[0.003,-0.684],[0,0]],"o":[[0,0],[0,0],[0,0],[-0.689,-0.004],[0,0],[0.004,-0.683],[0,0],[0.683,0.003],[0,0],[-0.004,0.689]],"v":[[15.424,3.846],[9.613,3.816],[-9.651,3.718],[-15.457,3.688],[-16.694,2.439],[-16.668,-2.614],[-15.418,-3.845],[15.463,-3.687],[16.694,-2.443],[16.668,2.609]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.556862745098,0.552941176471,0.576470588235,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[46.523,313.621],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 67","np":4,"cix":2,"bm":0,"ix":67,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.689,-0.004],[0,0],[0.004,-0.684],[0,0],[0.688,0.004],[0,0],[0,0],[0,0],[-0.003,0.689],[0,0]],"o":[[0,0],[0.688,0.003],[0,0],[-0.004,0.688],[0,0],[0,0],[0,0],[-0.689,-0.004],[0,0],[0.003,-0.683]],"v":[[-9.621,-2.202],[9.643,-2.103],[10.879,-0.859],[10.87,0.965],[9.621,2.201],[9.604,2.201],[-9.622,2.103],[-9.643,2.103],[-10.88,0.853],[-10.87,-0.971]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.619607843137,0.419607873056,0.250980392157,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[46.493,319.54],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 68","np":4,"cix":2,"bm":0,"ix":68,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.169,2.571],[2.571,0.169],[0.169,-2.566],[-2.571,-0.169]],"o":[[0.169,-2.566],[-2.571,-0.169],[-0.169,2.571],[2.571,0.175]],"v":[[4.653,0.306],[0.309,-4.656],[-4.653,-0.312],[-0.309,4.65]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.305882352941,0.286274509804,0.274509803922,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[46.439,330.036],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 69","np":4,"cix":2,"bm":0,"ix":69,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.015,-3.072],[6.936,0.035],[-0.035,6.936],[-1.851,2.169]],"o":[[1.824,2.189],[-0.036,6.936],[-6.936,-0.036],[0.016,-3.073],[0,0]],"v":[[9.667,-10.256],[12.564,-2.17],[-0.054,10.32],[-12.544,-2.298],[-9.559,-10.354]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.305882352941,0.286274509804,0.274509803922,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[46.431,331.998],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 70","np":4,"cix":2,"bm":0,"ix":70,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.006,1.125],[0,0],[-1.125,-0.006],[0,0],[0,0],[0,0],[0,0],[0.005,-1.13],[0,0],[1.13,0.006],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0.006,-1.13],[0,0],[0,0],[0,0],[0,0],[1.13,0.005],[0,0],[-0.006,1.125],[0,0],[0,0],[0,0],[0,0],[0,0],[-1.125,-0.006]],"v":[[-99.026,3.014],[-98.99,-4.023],[-96.94,-6.057],[-71.521,-5.927],[0.029,-5.561],[71.578,-5.195],[96.992,-5.065],[99.027,-3.009],[98.991,4.029],[96.935,6.057],[68.121,5.909],[37.24,5.751],[-37.296,5.37],[-68.177,5.211],[-96.997,5.065]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.733333333333,0.733333333333,0.737254901961,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[99.282,304.564],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 71","np":4,"cix":2,"bm":0,"ix":71,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-2.571,-0.169],[0.169,-2.566],[2.571,0.175],[-0.17,2.571]],"o":[[2.566,0.169],[-0.175,2.571],[-2.566,-0.169],[0.174,-2.566]],"v":[[0.312,-4.656],[4.656,0.306],[-0.311,4.65],[-4.655,-0.312]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.513725490196,0.494117676978,0.478431402468,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[151.859,330.576],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 72","np":4,"cix":2,"bm":0,"ix":72,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-0.004,0.689],[0,0],[-0.684,-0.003],[0,0],[0.004,-0.683],[0,0],[0.683,0.004],[0,0]],"o":[[0,0],[-0.683,-0.003],[0,0],[0.003,-0.683],[0,0],[0.684,0.004],[0,0],[-0.003,0.689],[0,0],[0,0]],"v":[[-9.656,3.717],[-15.463,3.687],[-16.693,2.438],[-16.667,-2.615],[-15.424,-3.846],[15.456,-3.688],[16.693,-2.444],[16.667,2.609],[15.419,3.845],[9.613,3.816]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.556862745098,0.552941176471,0.576470588235,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[151.946,314.161],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 73","np":4,"cix":2,"bm":0,"ix":73,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.004,0.689],[0,0],[-0.683,-0.004],[0,0],[0.004,-0.683],[0,0],[0.684,0.004],[0,0],[0,0],[0,0]],"o":[[0,0],[0.004,-0.683],[0,0],[0.684,0.004],[0,0],[-0.003,0.689],[0,0],[0,0],[0,0],[-0.683,-0.003]],"v":[[-10.876,0.854],[-10.868,-0.97],[-9.624,-2.201],[9.645,-2.103],[10.876,-0.859],[10.867,0.965],[9.624,2.202],[9.607,2.202],[-9.624,2.103],[-9.646,2.103]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.619607843137,0.419607873056,0.250980392157,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[151.912,320.08],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 74","np":4,"cix":2,"bm":0,"ix":74,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.175,2.571],[2.566,0.169],[0.174,-2.566],[-2.566,-0.169]],"o":[[0.169,-2.566],[-2.571,-0.169],[-0.17,2.571],[2.571,0.175]],"v":[[4.664,-1.656],[0.32,-6.618],[-4.647,-2.274],[-0.303,2.688]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0.016,-3.072],[6.931,0.035],[-0.035,6.936],[-1.846,2.17]],"o":[[1.819,2.188],[-0.036,6.936],[-6.936,-0.036],[0.016,-3.073],[0,0]],"v":[[9.669,-10.256],[12.566,-2.17],[-0.052,10.32],[-12.547,-2.298],[-9.562,-10.355]],"c":true},"ix":2},"nm":"路径 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"合并路径 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.305882352941,0.286274509804,0.274509803922,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[151.851,332.538],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 75","np":6,"cix":2,"bm":0,"ix":75,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[2.379,0.013],[0,0],[0,0],[0.306,2.364],[0,0]],"o":[[0,0],[-0.325,2.361],[0,0],[0,0],[-2.384,-0.012],[0,0],[0,0]],"v":[[67.754,-5.227],[66.782,1.806],[62.051,5.909],[-0.055,5.591],[-62.161,5.273],[-66.854,1.122],[-67.754,-5.921]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.619607843137,0.419607873056,0.250980392157,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[99.411,284.49],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 76","np":4,"cix":2,"bm":0,"ix":76,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[-0.005,0.974],[0,0],[-0.974,-0.005],[0,0],[0,0],[0,0],[0.005,-0.968],[0,0],[0.969,0.005]],"o":[[0,0],[0,0],[-0.973,-0.005],[0,0],[0.005,-0.968],[0,0],[0,0],[0,0],[0.968,0.005],[0,0],[-0.005,0.973],[0,0]],"v":[[67.73,5.01],[-67.778,4.316],[-70.727,4.301],[-72.477,2.531],[-72.447,-3.279],[-70.679,-5.024],[-68.968,-5.016],[69.02,-4.31],[70.732,-4.3],[72.477,-2.537],[72.447,3.275],[70.684,5.025]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.733333333333,0.733333333333,0.737254901961,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[99.435,274.253],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 77","np":4,"cix":2,"bm":0,"ix":77,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.285,-0.637],[0,0],[1.377,-6.32],[-0.345,0.502],[-1.666,2.198],[-0.926,4.511]],"o":[[0,0],[-0.056,0.249],[0.361,-0.494],[1.606,-2.337],[0.673,-4.499],[-1.314,-0.485]],"v":[[-0.037,-10.512],[-1.826,0.682],[-4.181,11.171],[-3.121,9.678],[1.733,3.018],[4.181,-10.685]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.564705882353,0.486274539723,0.458823559331,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[287.711,42.267],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 78","np":4,"cix":2,"bm":0,"ix":78,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.361,-0.493],[0.434,-2.05],[-3.586,0.369],[-0.708,4.729],[1.607,-2.338]],"o":[[-0.374,1.718],[0,0],[0.196,-3.853],[-1.667,2.197],[-0.344,0.501]],"v":[[-2.35,1.249],[-3.564,6.902],[2.149,6.194],[3.565,-6.902],[-1.29,-0.242]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.564705882353,0.486274539723,0.458823559331,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[285.88,52.187],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 79","np":4,"cix":2,"bm":0,"ix":79,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.314,-0.485],[-1.656,4.412],[1.027,-0.418],[0,0]],"o":[[1.899,-9.252],[-2.897,0.527],[0,0],[1.286,-0.637]],"v":[[-0.777,10.982],[4.995,-11.156],[-1.671,-9.639],[-4.995,11.156]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.564705882353,0.486274539723,0.458823559331,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[292.669,20.599],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 80","np":4,"cix":2,"bm":0,"ix":80,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-4.764,2.451],[0,0],[0,0],[-3.116,-5.22]],"o":[[4.769,-2.451],[0,0],[0,0],[3.11,5.219]],"v":[[13.606,-61.939],[18.277,-93.518],[-22.786,-95.52],[-23.864,-64.676]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[3.688,2.855],[0.954,2.814],[2.647,34.716],[-5.315,25.113],[-3.585,0.37],[-2.096,-0.512],[-0.411,7.704],[-7.015,-0.418],[-6.783,-1.407],[-3.083,-0.016],[-1.268,6.849],[0,0],[-1.661,-0.487],[0,0],[0,0],[0.431,0.912],[1.079,-0.598],[0,0],[0,0],[1.023,-4.396],[-4.924,2.197],[-6.859,1.649],[1.44,-28.911],[3.051,-8.459],[0,0],[2.85,0.456],[1.327,2.504],[0,0],[-1.318,5.262],[9.359,-6.592],[-1.159,-10.095],[4.591,-3.34]],"o":[[-1.785,-1.376],[-2.915,-8.624],[-1.901,-24.945],[0,0],[-0.34,6.59],[4.633,1.126],[5.366,-0.317],[5.562,0.33],[-1.357,9.797],[1.695,0.008],[0,0],[10.206,2.377],[-0.159,17.213],[0,0],[-0.66,-0.445],[-1.464,-3.102],[-1.079,0.602],[0,0],[-5.002,-0.429],[-1.376,5.912],[3.166,-1.409],[1.005,16.035],[-1.51,30.233],[0,0],[-1.665,4.613],[-2.796,-0.45],[0,0],[-2.494,-4.716],[2.016,-8.061],[-9.359,6.587],[1.159,10.096],[-3.095,2.249]],"v":[[-40.029,121.317],[-44.291,115.069],[-46.241,-24.261],[-33.653,-122.422],[-27.94,-123.13],[-25.6,-111.365],[-20.618,-123.711],[-1.634,-123.754],[17.604,-120.862],[20.563,-107.093],[24.775,-119.281],[24.78,-119.281],[45.33,-113.908],[45.335,-71.871],[45.335,-71.866],[43.623,-73.855],[37.645,-75.973],[37.626,-72.174],[37.62,-72.121],[23.002,-66.228],[27.502,-51.811],[45.367,-53.904],[46.702,60.391],[40.65,116.887],[40.65,116.893],[34.006,122.88],[27.891,118.124],[27.891,118.119],[26.585,100.957],[-4.707,-14.411],[-25.913,99.02],[-28.452,121.877]],"c":true},"ix":2},"nm":"路径 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"合并路径 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.262745098039,0.396078461292,0.435294147566,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[315.968,181.511],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 81","np":6,"cix":2,"bm":0,"ix":81,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"头","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":30,"s":[-5.709]},{"t":59,"s":[0]}],"ix":10},"p":{"a":0,"k":[384.583,75.538,0],"ix":2},"a":{"a":0,"k":[52.326,57.813,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.405,1.993],[-1.1,2.371],[-0.433,1.889],[2.644,-8.202],[-0.934,-1.832]],"o":[[1.506,-2.136],[0.764,-1.646],[-3.103,-2.279],[-1.365,4.235],[2.044,-0.715]],"v":[[0.046,5.417],[4.024,-1.484],[6.261,-6.897],[-4.896,0.218],[-5.187,9.176]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.537254901961,0.827451040231,0.792156922583,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[43.191,12.375],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.403,1.03],[0.764,-1.646],[1.506,-2.136],[2.044,-0.716],[-2.593,0.967],[-0.026,5.085]],"o":[[-0.432,1.889],[-1.101,2.371],[-1.405,1.993],[1.31,2.57],[4.448,-1.661],[0.011,-2.123]],"v":[[4.558,-9.557],[2.32,-4.144],[-1.658,2.757],[-6.891,6.517],[-0.102,8.59],[6.881,-4.665]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.505882352941,0.670588235294,0.654901960784,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[44.895,15.035],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":4,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-18.753,-30.462],[17.812,11.76],[-1.035,-2.704],[-0.734,-2.485],[-0.824,-2.605],[-0.313,-1.545],[1.361,0.845],[2.521,1.101],[2.984,1.044],[2.678,0.499],[2.881,0.408],[3.28,0.278],[3.011,-0.239],[3.473,-0.584],[1.531,-0.481],[0.398,-0.141],[0,0]],"o":[[14.398,-3.833],[1.827,-10.199],[1.111,2.674],[1.062,2.775],[0.773,2.619],[0.478,1.509],[-1.193,-1.035],[-2.326,-1.445],[-2.894,-1.264],[-2.584,-0.905],[-2.86,-0.532],[-3.263,-0.461],[-3.021,-0.257],[-3.496,0.277],[-1.581,0.266],[-0.402,0.126],[-1.348,2.282],[0,0]],"v":[[-42.295,-3.03],[40.489,22.895],[21.565,-22.895],[24.756,-14.818],[27.775,-7.344],[29.838,0.577],[31.013,5.161],[27.209,2.314],[20.11,-1.493],[11.393,-5.265],[3.41,-6.95],[-5.174,-8.5],[-14.99,-9.365],[-23.969,-9.116],[-34.393,-8.241],[-39.136,-7.306],[-40.331,-6.887],[-42.316,-3.105]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.956862804936,0.749019607843,0.231372563979,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[56.115,44.388],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 3","np":4,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.581,0.266],[-3.496,0.277],[-3.021,-0.257],[-3.263,-0.462],[-2.859,-0.533],[-2.584,-0.905],[-2.894,-1.264],[-2.326,-1.445],[-1.193,-1.036],[0.478,1.509],[0.774,2.619],[1.062,2.776],[1.111,2.674],[1.601,0.766],[4.92,0.66],[2.142,-0.01],[4.356,-1.624],[-0.169,7.629],[0,0],[2.868,-4.853],[-0.402,0.126]],"o":[[3.472,-0.584],[3.012,-0.239],[3.279,0.279],[2.881,0.407],[2.678,0.498],[2.983,1.044],[2.52,1.101],[1.361,0.845],[-0.312,-1.546],[-0.825,-2.604],[-0.734,-2.485],[-1.034,-2.704],[-1.409,-0.93],[-3.762,-1.801],[-2.334,-0.314],[-1.275,5.289],[-4.718,1.762],[0,0],[-10.113,5.135],[0.398,-0.141],[1.531,-0.48]],"v":[[-29.733,4.019],[-19.31,3.145],[-10.33,2.895],[-0.515,3.761],[8.069,5.312],[16.053,6.995],[24.77,10.768],[31.868,14.575],[35.672,17.423],[34.498,12.838],[32.434,4.916],[29.415,-2.558],[26.225,-10.635],[21.724,-13.195],[8.733,-16.968],[2.019,-17.412],[-6.571,-5.386],[-16.589,-13.019],[-16.595,-13.019],[-35.672,5.373],[-34.477,4.955]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.882353001015,0.443137284821,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[51.455,32.128],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 4","np":4,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.878,1.26],[0,0],[-8.201,0.135],[0,0],[-7.018,4.452],[0,0],[-0.006,0.005],[3.401,6.394],[8.354,4.633],[3.537,-3.542],[-0.025,-0.032],[-1.928,-9.977],[1.043,6.463],[1.568,0.099],[0.057,-0.252],[-1.422,-1.165],[-0.09,-0.184],[-0.194,-0.486],[0.25,0.412],[-0.027,-0.18],[-0.079,-0.717],[0.826,-1.356],[0.438,-0.863],[0.085,-0.055],[0.175,0.013],[0.471,-0.027],[0.031,-0.015],[0.187,0.04],[0.421,0.126],[0.084,0.018],[0.095,0.091],[0.34,0.281],[1.994,-1.121],[0.169,-1.761],[-0.134,0.225],[0.341,-0.406],[0.093,-0.056],[1.13,-0.553],[0.038,-0.01],[0.062,-0.014],[0.302,-0.012],[2.861,0.607],[0.077,0.022],[0.105,0.058],[0.071,0.044],[0.172,0.196],[0.095,0.134],[0.19,0.287],[0.569,0.726],[1.759,-0.86],[1.334,-1.682],[0.14,0.008],[0.127,0.033],[0.226,0.075],[0.058,0.021],[-0.292,-0.272],[0.261,0.44],[-0.008,-0.083],[0.131,0.438],[0.089,0.46],[-0.004,0.106],[3.314,0.913],[1.177,-0.28],[-0.093,0.287],[-0.028,0.08],[-0.075,0.114],[-0.289,1.197],[2.608,0.553],[0,0],[0.157,0.432],[1.56,0.472],[0.16,-0.671],[0,0],[-0.616,-6.729],[0,0],[-8.59,-3.811],[0,0],[-2.675,-1.973],[-1.848,-0.569],[-1.498,-0.069],[-0.304,0.009],[-1.682,0.522],[-1.556,0.834],[-0.094,0.053],[-0.131,-0.15]],"o":[[2.109,-3.019],[0,0],[8.196,-0.141],[0,0],[7.018,-4.446],[0,0],[0.243,-0.176],[-3.496,-6.577],[-0.069,0.308],[0.024,0.032],[2.339,-1.364],[2.228,11.51],[0,0],[-0.104,0.233],[-0.444,1.949],[0.101,0.178],[0.24,0.466],[0.273,0.511],[0.027,0.18],[0.014,0.719],[0.139,1.254],[-0.5,0.823],[-0.086,0.054],[-0.174,-0.019],[-0.469,-0.035],[-0.219,0.013],[-0.066,-0.02],[-0.429,-0.093],[-0.165,-0.049],[-0.031,-0.044],[-0.317,-0.306],[-1.693,-1.397],[-1.527,0.858],[-0.268,0.41],[0.145,-0.233],[-0.062,0.037],[-1.117,0.595],[0.363,-0.199],[-0.293,0.049],[-0.301,0.028],[-2.855,0.121],[-0.181,-0.059],[-0.105,-0.058],[-0.184,-0.124],[-0.192,-0.176],[-0.051,-0.073],[-0.192,-0.286],[-0.52,-0.762],[-1.367,-1.742],[-1.946,0.95],[-0.218,-0.016],[-0.213,-0.048],[-0.232,-0.056],[-0.075,-0.027],[-0.032,-0.067],[-0.657,-0.565],[-0.056,-0.094],[-0.175,-0.431],[-0.134,-0.447],[0.036,0.062],[0.118,-2.996],[-1.203,-0.331],[0.07,-0.293],[0.043,-0.121],[0.055,-0.053],[0.668,-1.023],[0.582,-2.408],[0,0],[-0.118,-0.317],[-0.57,-1.569],[-0.261,0.504],[-1.924,8.062],[0,0],[0.622,6.73],[0,0],[8.59,3.81],[0,0],[1.211,0.899],[1.21,0.374],[0.313,0.001],[1.758,-0.047],[1.715,-0.532],[0.095,-0.051],[0.115,0.164],[1.815,-1.108]],"v":[[10.216,23.46],[12.226,17.557],[20.872,22.089],[28.762,11.367],[37.372,11.228],[42.646,-2.553],[42.657,-2.558],[44.647,-12.955],[26.87,-29.985],[20.742,-14.817],[20.812,-14.719],[33.943,-10.534],[19.506,-2.133],[16.933,-2.25],[16.674,-1.528],[18.307,3.457],[18.596,3.999],[19.262,5.437],[19.296,5.586],[19.377,6.126],[19.755,8.302],[18.613,12.999],[17.014,15.444],[16.756,15.607],[16.234,15.557],[14.826,15.53],[14.484,15.575],[14.12,15.486],[12.844,15.163],[12.162,14.965],[11.982,14.768],[10.987,13.896],[5.163,13.145],[2.368,17.357],[2.165,17.636],[1.87,17.897],[1.643,18.033],[-1.679,19.985],[-2.588,20.199],[-3.118,20.294],[-4.023,20.359],[-11.447,19.408],[-11.829,19.288],[-12.143,19.115],[-12.525,18.863],[-13.074,18.306],[-13.29,17.999],[-13.862,17.139],[-15.514,14.927],[-21.338,14.176],[-26.031,18.784],[-26.64,18.743],[-27.663,18.535],[-28.35,18.338],[-28.546,18.268],[-29.261,17.865],[-30.705,16.172],[-31.254,15.284],[-31.672,13.938],[-32.054,12.577],[-32.06,11.686],[-36.053,4.49],[-39.626,4.621],[-39.384,3.751],[-39.279,3.454],[-38.73,2.605],[-37.213,-0.694],[-40.569,-6.606],[-40.973,-6.691],[-41.341,-7.833],[-44.749,-11.211],[-45.39,-9.461],[-39.515,-0.821],[-45.765,5.959],[-35.105,13.37],[-29.417,23.801],[-17.751,22.784],[-13.871,26.969],[-9.288,29.29],[-5.228,29.984],[-4.298,29.978],[0.986,29.206],[5.603,26.798],[5.885,26.641],[6.255,27.111]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.447058853449,0.192156877705,0.180392156863,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[49.665,85.322],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 5","np":4,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.878,1.26],[0,0],[-8.201,0.135],[0,0],[-7.018,4.452],[0,0],[-0.006,0.005],[3.401,6.394],[8.354,4.633],[3.537,-3.542],[-0.025,-0.032],[-1.928,-9.977],[1.043,6.463],[1.568,0.099],[0.057,-0.252],[-1.422,-1.165],[-0.09,-0.184],[-0.194,-0.486],[0.25,0.412],[-0.027,-0.18],[-0.079,-0.717],[0.826,-1.356],[0.438,-0.863],[0.085,-0.055],[0.175,0.013],[0.471,-0.027],[0.031,-0.015],[0.187,0.04],[0.421,0.126],[0.084,0.018],[0.095,0.091],[0.34,0.281],[1.994,-1.121],[0.169,-1.761],[-0.134,0.225],[0.341,-0.406],[0.093,-0.056],[1.13,-0.553],[0.038,-0.01],[0.062,-0.014],[0.302,-0.012],[2.861,0.607],[0.077,0.022],[0.105,0.058],[0.071,0.044],[0.172,0.196],[0.095,0.134],[0.19,0.287],[0.569,0.726],[1.759,-0.86],[1.334,-1.682],[0.14,0.008],[0.127,0.033],[0.226,0.075],[0.058,0.021],[-0.292,-0.272],[0.261,0.44],[-0.008,-0.083],[0.131,0.438],[0.089,0.46],[-0.004,0.106],[3.314,0.913],[1.177,-0.28],[-0.093,0.287],[-0.028,0.08],[-0.075,0.114],[-0.289,1.197],[2.608,0.553],[0,0],[0.157,0.432],[1.56,0.472],[0.16,-0.671],[0,0],[-0.616,-6.729],[0,0],[-8.59,-3.811],[0,0],[-2.675,-1.973],[-1.848,-0.569],[-1.498,-0.069],[-0.304,0.009],[-1.682,0.522],[-1.556,0.834],[-0.094,0.053],[-0.131,-0.15]],"o":[[2.109,-3.019],[0,0],[8.196,-0.141],[0,0],[7.018,-4.446],[0,0],[0.243,-0.176],[-3.496,-6.577],[-0.069,0.308],[0.024,0.032],[2.339,-1.364],[2.228,11.51],[0,0],[-0.104,0.233],[-0.444,1.949],[0.101,0.178],[0.24,0.466],[0.273,0.511],[0.027,0.18],[0.014,0.719],[0.139,1.254],[-0.5,0.823],[-0.086,0.054],[-0.174,-0.019],[-0.469,-0.035],[-0.219,0.013],[-0.066,-0.02],[-0.429,-0.093],[-0.165,-0.049],[-0.031,-0.044],[-0.317,-0.306],[-1.693,-1.397],[-1.527,0.858],[-0.268,0.41],[0.145,-0.233],[-0.062,0.037],[-1.117,0.595],[0.363,-0.199],[-0.293,0.049],[-0.301,0.028],[-2.855,0.121],[-0.181,-0.059],[-0.105,-0.058],[-0.184,-0.124],[-0.192,-0.176],[-0.051,-0.073],[-0.192,-0.286],[-0.52,-0.762],[-1.367,-1.742],[-1.946,0.95],[-0.218,-0.016],[-0.213,-0.048],[-0.232,-0.056],[-0.075,-0.027],[-0.032,-0.067],[-0.657,-0.565],[-0.056,-0.094],[-0.175,-0.431],[-0.134,-0.447],[0.036,0.062],[0.118,-2.996],[-1.203,-0.331],[0.07,-0.293],[0.043,-0.121],[0.055,-0.053],[0.668,-1.023],[0.582,-2.408],[0,0],[-0.118,-0.317],[-0.57,-1.569],[-0.261,0.504],[-1.924,8.062],[0,0],[0.622,6.73],[0,0],[8.59,3.81],[0,0],[1.211,0.899],[1.21,0.374],[0.313,0.001],[1.758,-0.047],[1.715,-0.532],[0.095,-0.051],[0.115,0.164],[1.815,-1.108]],"v":[[9.849,23.459],[11.859,17.556],[20.505,22.088],[28.395,11.366],[37.005,11.227],[42.279,-2.554],[42.29,-2.559],[44.28,-12.956],[26.503,-29.986],[20.375,-14.818],[20.445,-14.72],[33.576,-10.535],[19.139,-2.134],[16.566,-2.251],[16.307,-1.529],[17.94,3.456],[18.229,3.998],[18.895,5.436],[18.929,5.585],[19.01,6.125],[19.388,8.301],[18.246,12.998],[16.647,15.443],[16.389,15.606],[15.867,15.556],[14.459,15.529],[14.117,15.574],[13.753,15.485],[12.477,15.162],[11.795,14.964],[11.615,14.767],[10.62,13.895],[4.796,13.144],[2.001,17.356],[1.798,17.635],[1.503,17.896],[1.276,18.032],[-2.046,19.984],[-2.955,20.198],[-3.485,20.293],[-4.39,20.358],[-11.814,19.407],[-12.196,19.287],[-12.51,19.114],[-12.892,18.862],[-13.441,18.305],[-13.657,17.998],[-14.229,17.138],[-15.881,14.926],[-21.705,14.175],[-26.398,18.783],[-27.007,18.742],[-28.03,18.534],[-28.717,18.337],[-28.913,18.267],[-29.628,17.864],[-31.072,16.171],[-31.621,15.283],[-32.039,13.937],[-32.421,12.576],[-32.427,11.685],[-36.42,4.489],[-39.993,4.62],[-39.751,3.75],[-39.646,3.453],[-39.097,2.604],[-37.58,-0.695],[-40.936,-6.607],[-41.34,-6.692],[-41.708,-7.834],[-45.116,-11.212],[-45.757,-9.462],[-39.882,-0.822],[-46.132,5.958],[-35.472,13.369],[-29.784,23.8],[-18.118,22.783],[-14.238,26.968],[-9.655,29.289],[-5.595,29.983],[-4.665,29.977],[0.619,29.205],[5.236,26.797],[5.518,26.64],[5.888,27.11]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.517647058824,0.286274509804,0.262745098039,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[50.032,85.323],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 6","np":4,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.166,-0.128],[-0.313,0.183],[0.024,0.033]],"o":[[0.047,-0.031],[-0.024,-0.032],[-0.161,0.162]],"v":[[-0.28,0.22],[0.28,-0.122],[0.21,-0.22]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.517647058824,0.286274509804,0.262745098039,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[70.196,70.725],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 7","np":4,"cix":2,"bm":0,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.57,-1.57],[-0.118,-0.316],[0,0],[0.582,-2.408],[0.668,-1.022],[0.055,-0.053],[0.043,-0.121],[0.07,-0.293],[-1.203,-0.331],[0.118,-2.996],[0.035,0.062],[-0.133,-0.446],[-0.175,-0.431],[-0.056,-0.094],[-0.657,-0.564],[-0.032,-0.067],[-0.075,-0.027],[-0.231,-0.056],[-0.213,-0.049],[-0.219,-0.015],[-1.946,0.951],[-1.367,-1.742],[-0.52,-0.761],[-0.192,-0.286],[-0.051,-0.072],[-0.193,-0.176],[-0.184,-0.125],[-0.104,-0.057],[-0.181,-0.059],[-2.855,0.12],[-0.301,0.028],[-0.293,0.05],[0.364,-0.198],[-1.118,0.594],[-0.062,0.037],[0.145,-0.232],[-0.268,0.409],[-1.527,0.859],[-1.693,-1.398],[-0.318,-0.306],[-0.031,-0.044],[-0.164,-0.049],[-0.429,-0.093],[-0.066,-0.02],[-0.219,0.012],[-0.469,-0.035],[-0.174,-0.019],[-0.086,0.054],[-0.5,0.822],[0.138,1.253],[0.014,0.72],[0.027,0.179],[0.273,0.512],[0.24,0.466],[0.102,0.177],[-0.444,1.949],[-0.104,0.233],[2.859,3.943],[5.185,-1.588],[0,0],[2.873,-5.553]],"o":[[0.157,0.431],[0,0],[2.608,0.552],[-0.289,1.197],[-0.075,0.114],[-0.028,0.079],[-0.093,0.287],[1.177,-0.28],[3.314,0.913],[-0.004,0.107],[0.089,0.46],[0.132,0.439],[-0.008,-0.084],[0.261,0.441],[-0.292,-0.271],[0.057,0.02],[0.226,0.075],[0.128,0.032],[0.139,0.007],[1.334,-1.682],[1.759,-0.859],[0.57,0.725],[0.189,0.288],[0.095,0.135],[0.172,0.196],[0.071,0.045],[0.104,0.057],[0.078,0.023],[2.86,0.606],[0.302,-0.012],[0.062,-0.014],[0.038,-0.009],[1.131,-0.552],[0.092,-0.056],[0.341,-0.405],[-0.134,0.226],[0.169,-1.761],[1.994,-1.121],[0.339,0.28],[0.095,0.091],[0.084,0.017],[0.422,0.125],[0.187,0.04],[0.031,-0.016],[0.471,-0.027],[0.175,0.012],[0.085,-0.055],[0.437,-0.864],[0.826,-1.357],[-0.079,-0.718],[-0.027,-0.18],[0.25,0.412],[-0.195,-0.485],[-0.09,-0.185],[-1.421,-1.165],[0.057,-0.252],[-4.934,-0.31],[-3.762,-5.201],[-5.19,1.587],[0,0],[1.559,0.472]],"v":[[-28.913,-9.691],[-28.545,-8.549],[-28.141,-8.463],[-24.785,-2.551],[-26.302,0.747],[-26.851,1.597],[-26.956,1.894],[-27.198,2.764],[-23.625,2.632],[-19.632,9.827],[-19.626,10.719],[-19.245,12.08],[-18.826,13.426],[-18.277,14.314],[-16.833,16.007],[-16.118,16.411],[-15.922,16.481],[-15.236,16.678],[-14.212,16.886],[-13.603,16.926],[-8.91,12.318],[-3.087,13.07],[-1.434,15.281],[-0.862,16.141],[-0.646,16.447],[-0.097,17.005],[0.285,17.258],[0.598,17.43],[0.981,17.551],[8.405,18.502],[9.31,18.437],[9.84,18.34],[10.748,18.127],[14.071,16.176],[14.298,16.038],[14.593,15.778],[14.796,15.499],[17.591,11.287],[23.415,12.038],[24.41,12.911],[24.59,13.107],[25.271,13.305],[26.548,13.628],[26.912,13.718],[27.254,13.673],[28.662,13.7],[29.184,13.749],[29.442,13.587],[31.041,11.141],[32.183,6.445],[31.805,4.268],[31.724,3.729],[31.69,3.579],[31.024,2.141],[30.734,1.6],[29.102,-3.385],[29.36,-4.107],[10.997,-9.479],[-12.546,-13.501],[-21.106,-14.669],[-32.321,-13.068]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.517647058824,0.286274509804,0.262745098039,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[37.237,87.18],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 8","np":4,"cix":2,"bm":0,"ix":8,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.096,-0.051],[1.715,-0.532],[1.758,-0.047],[0.312,0.001],[-1.902,0.411],[-0.798,0.265],[0,0],[-1.041,0.636],[0.115,0.164]],"o":[[-1.556,0.834],[-1.682,0.522],[-0.304,0.009],[1.569,0.071],[0.932,-0.2],[0,0],[1.436,-0.481],[-0.131,-0.15],[-0.093,0.053]],"v":[[5.089,-1.55],[0.472,0.858],[-4.812,1.63],[-5.741,1.636],[-0.542,1.167],[2.045,0.464],[2.045,0.459],[5.741,-1.237],[5.371,-1.707]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.517647058824,0.286274509804,0.262745098039,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[50.178,113.67],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 9","np":4,"cix":2,"bm":0,"ix":9,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.243,1.716],[0.167,-1.833],[-0.312,-0.899],[0.631,-1.016],[-1.111,0.246],[-0.478,1.261]],"o":[[0.404,-2.172],[-0.094,1.03],[0.542,1.565],[-0.968,1.561],[1.364,-0.303],[0.684,-1.802]],"v":[[2.481,-3.496],[-2.407,-1.712],[-0.988,0.665],[-2.756,3.328],[-0.011,5.422],[2.626,1.961]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.988235353956,0.635294117647,0.494117676978,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[76.088,76.397],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 10","np":4,"cix":2,"bm":0,"ix":10,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.719,-2.063],[0.063,-0.576],[0.19,0.035],[1.036,-0.081],[0.524,-1.794],[-1.281,-1.476],[-0.732,-0.269],[-1.05,-0.002],[2.198,0.002],[0.485,-0.092],[0.361,0.377],[-0.272,0.815],[-0.364,0.173],[-0.372,-0.044],[-0.912,-0.36],[-0.115,0.974],[-0.346,0.992]],"o":[[-0.18,0.517],[-0.171,-0.056],[-1.024,-0.189],[-2.002,0.157],[-0.519,1.772],[0.509,0.586],[1.027,0.376],[2.195,0.002],[-0.491,-0.001],[-0.561,0.106],[-0.645,-0.671],[0.133,-0.396],[0.367,-0.176],[0.996,0.118],[1.143,0.452],[0.124,-1.041],[0.723,-2.077]],"v":[[2.068,-4.965],[1.728,-3.307],[1.191,-3.449],[-2.027,-3.579],[-5.48,-0.072],[-4.799,5.311],[-2.865,6.652],[0.068,6.652],[0.068,3.241],[-1.404,3.336],[-2.06,3.242],[-2.143,0.645],[-1.574,-0.171],[0.162,-0.156],[2.774,0.855],[4.932,-0.788],[5.356,-4.057]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.988235353956,0.635294117647,0.494117676978,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[34.937,66.173],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 11","np":4,"cix":2,"bm":0,"ix":11,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-2.198],[1.251,0],[0,2.198],[-1.25,0]],"o":[[0,2.198],[-1.25,0],[0,-2.198],[1.251,0]],"v":[[2.264,0],[-0.001,3.979],[-2.264,0],[-0.001,-3.979]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.517647058824,0.286274509804,0.262745098039,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[25.884,63.304],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 12","np":4,"cix":2,"bm":0,"ix":12,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-2.198],[1.251,0],[0,2.198],[-1.25,0]],"o":[[0,2.198],[-1.25,0],[0,-2.198],[1.251,0]],"v":[[2.264,0],[-0.001,3.979],[-2.264,0],[-0.001,-3.979]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.517647058824,0.286274509804,0.262745098039,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[51.929,65.589],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 13","np":4,"cix":2,"bm":0,"ix":13,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[5.477,-0.745],[6.788,2.98],[-6.788,1.607],[-6.781,-2.98]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.517647058824,0.286274509804,0.262745098039,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[27.166,52.79],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 14","np":4,"cix":2,"bm":0,"ix":14,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[-5.852,-2.516],[-8.036,1.307],[7.128,2.516],[8.036,-2.516]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.517647058824,0.286274509804,0.262745098039,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[51.568,55.323],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 15","np":4,"cix":2,"bm":0,"ix":15,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-4.442,1.656],[-0.027,5.085],[3.839,-11.91]],"o":[[4.448,-1.661],[0.034,-6.818],[-3.28,10.175]],"v":[[0.34,9.248],[7.322,-4.006],[-6.159,-1.783]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0.016,-3.1],[0.467,-1.913],[4.356,-1.624],[-0.169,7.629],[-0.897,2.772],[-4.154,-1.21],[-0.005,-0.006],[-0.945,-0.43]],"o":[[-0.009,1.802],[-1.275,5.289],[-4.718,1.762],[0.037,-1.953],[2.963,-9.191],[0,0],[0.097,0.038],[2.178,1.303]],"v":[[9.74,-5.312],[9.021,0.339],[0.431,12.365],[-9.587,4.731],[-8.238,-2.343],[4.452,-12.916],[4.461,-12.911],[6.089,-12.204]],"c":true},"ix":2},"nm":"路径 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"合并路径 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.835294177485,0.56862745098,0.349019607843,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[44.453,14.377],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 16","np":6,"cix":2,"bm":0,"ix":16,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-5.424,-8.411],[4.92,0.66],[2.141,-0.011],[-0.009,1.802],[2.178,1.302]],"o":[[-3.763,-1.8],[-2.334,-0.313],[0.467,-1.914],[0.016,-3.1],[4.52,2.046]],"v":[[11.319,8.379],[-1.673,4.605],[-8.386,4.163],[-7.669,-1.49],[-11.319,-8.379]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.937254961799,0.678431372549,0.439215716194,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[61.861,10.553],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 17","np":4,"cix":2,"bm":0,"ix":17,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[8.355,4.633],[18.581,1.156],[-0.777,-0.547],[-10.444,4.1],[-0.782,0.206],[-18.753,-30.461],[-0.224,-0.394],[0.431,-0.062],[3.4,6.393]],"o":[[-10.694,-5.936],[-32.345,-2.005],[-0.767,-0.402],[0.561,-0.224],[14.398,-3.833],[0.235,0.384],[7.104,12.353],[0.243,-0.176],[-3.496,-6.578]],"v":[[24.209,-4.456],[-19.731,-15.535],[-34.249,-4.777],[-40.521,-17.793],[-38.506,-18.434],[44.278,7.49],[44.972,8.651],[39.995,22.971],[41.986,12.575]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.937254961799,0.678431372549,0.439215716194,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[52.326,59.792],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 18","np":4,"cix":2,"bm":0,"ix":18,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.573,0.265],[-1.294,0.337],[-2.738,0.12],[-5.184,-1.134],[-0.638,-0.194],[-0.34,-0.127],[0.342,0.151],[-1.411,-0.507],[-2.538,-0.878],[-1.246,-0.302],[-0.076,-0.024],[-0.207,-0.141],[-0.433,-0.224],[-1.009,-0.517],[-0.202,-0.102],[-0.036,-0.033],[-0.433,-0.321],[0.477,0.281],[-0.972,-0.143],[-0.04,0.18],[18.581,1.155],[-3.661,-3.126],[-0.238,0.125]],"o":[[0.912,-0.421],[2.597,-0.674],[5.515,-0.242],[0.652,0.142],[0.347,0.104],[0.545,0.222],[1.392,0.553],[2.528,0.908],[1.212,0.419],[0.113,0.036],[0.217,0.125],[0.412,0.26],[1.007,0.521],[0.204,0.097],[0.029,0.027],[0.416,0.344],[0.481,0.295],[0.68,0.755],[1.434,-3.961],[-10.694,-5.937],[-26.847,-1.665],[0.237,-0.129],[0.56,-0.292]],"v":[[-22.137,-0.381],[-18.826,-1.518],[-11.663,-2.462],[4.542,-1.335],[6.482,-0.846],[7.513,-0.501],[7.818,-0.394],[11.981,1.283],[19.605,3.887],[23.292,4.943],[23.569,5.033],[24.208,5.429],[25.445,6.165],[28.485,7.693],[29.093,7.994],[29.186,8.081],[30.459,9.079],[30.464,9.1],[33.037,10.423],[35.393,2.322],[-8.546,-8.757],[-24.55,0.837],[-23.837,0.455]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.949019667682,0.611764705882,0.439215716194,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[41.141,53.015],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 19","np":4,"cix":2,"bm":0,"ix":19,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.228,11.511],[0.399,-0.262],[-1.126,3.111],[0.68,0.756],[0.481,0.296],[0.415,0.343],[0.028,0.027],[0.204,0.097],[1.006,0.521],[0.411,0.26],[0.217,0.126],[0.113,0.037],[1.212,0.419],[2.527,0.908],[1.392,0.554],[0.544,0.221],[0.347,0.104],[0.651,0.143],[5.515,-0.241],[2.597,-0.675],[0.912,-0.421],[0.56,-0.292],[0.237,-0.129],[-0.132,-0.093],[-0.006,0],[0,0],[0,0],[-5.19,1.588],[-3.761,-5.201],[0,0]],"o":[[-2.186,-11.311],[1.668,-1.284],[-0.972,-0.144],[0.477,0.282],[-0.433,-0.321],[-0.036,-0.034],[-0.202,-0.103],[-1.009,-0.517],[-0.433,-0.225],[-0.208,-0.14],[-0.076,-0.024],[-1.247,-0.302],[-2.538,-0.877],[-1.411,-0.506],[0.341,0.151],[-0.34,-0.127],[-0.639,-0.194],[-5.184,-1.134],[-2.737,0.12],[-1.295,0.336],[-0.574,0.265],[-0.239,0.126],[0.75,0.64],[0.005,0.006],[0.01,0.005],[0,0],[0,0],[5.185,-1.588],[3.767,5.196],[1.043,6.463]],"v":[[32.625,4.805],[18.934,0.964],[23.194,-6.544],[20.622,-7.867],[20.617,-7.889],[19.344,-8.884],[19.251,-8.971],[18.643,-9.275],[15.603,-10.802],[14.366,-11.539],[13.728,-11.935],[13.451,-12.023],[9.763,-13.079],[2.139,-15.685],[-2.023,-17.362],[-2.328,-17.466],[-3.359,-17.814],[-5.299,-18.302],[-21.505,-19.428],[-28.668,-18.484],[-31.978,-17.348],[-33.678,-16.513],[-34.392,-16.13],[-32.906,-14.966],[-32.896,-14.961],[-32.879,-14.951],[-34.853,2.529],[-26.293,3.697],[-2.75,7.719],[18.188,13.206]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.807843197093,0.627450980392,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[50.983,69.982],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 20","np":4,"cix":2,"bm":0,"ix":20,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"金","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[152.76,297.047,0],"to":[0,1.833,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[152.76,308.047,0],"to":[0,0,0],"ti":[0,1.833,0]},{"t":59,"s":[152.76,297.047,0]}],"ix":2},"a":{"a":0,"k":[85.005,26.057,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.855,0.036],[2.401,-0.42],[0.1,-0.018],[0.356,-0.035],[0.704,-0.072],[1.617,-0.109],[1.717,0.073],[1.618,0.61],[3.532,0.244],[1.55,-0.141],[0.721,0.571],[3.078,1.055],[2.455,-2.611],[0.459,-1.464],[0.115,-0.295],[0.014,-0.035],[0.014,-0.026],[0.197,-0.116],[-0.031,0],[0.906,-0.225],[0.238,0.004],[2.248,-0.159],[1.435,0.88],[1.368,0.043],[1.136,-0.094],[2.434,-0.878],[1.915,-1.335],[0.113,-0.077],[0.308,0.266],[-0.091,-0.122],[0.334,0.422],[2.547,-1.806],[1.718,-1.868],[0.607,-1.021],[0.183,-0.391],[0.034,-0.059],[0.131,-0.093],[-1.702,-1.701],[-1.468,0.31],[-0.968,0],[0,0],[-3.149,0.022],[-2.968,-0.034],[-3.014,0.305],[-3.056,-0.002],[-2.94,0.266],[-3.13,0.037],[-6.058,0.506],[-5.714,1.809],[-0.799,2.969]],"o":[[-2.451,-0.023],[-0.201,0.036],[-0.356,0.044],[-0.704,0.069],[-1.612,0.165],[-1.714,0.116],[-1.799,-0.077],[-3.286,-1.24],[-1.547,-0.107],[-0.671,-0.624],[-2.567,-2.035],[-3.073,-1.054],[-1.078,1.146],[-0.095,0.303],[-0.021,0.052],[-0.01,0.019],[-0.201,0.107],[-0.082,0.049],[-0.823,0.358],[-0.24,-0.014],[-2.247,-0.035],[-1.156,-1.158],[-1.157,-0.711],[-1.58,-0.05],[-2.568,0.212],[-2.21,0.797],[-0.112,0.078],[-0.306,-0.27],[0.091,0.122],[-0.319,-0.433],[-2.105,-2.356],[-2.067,1.465],[-0.804,0.874],[-0.22,0.37],[-0.101,0.15],[-0.115,0.111],[-2.017,1.637],[1.232,1.232],[0.733,0.484],[0,0],[3.149,0],[2.969,-0.021],[3.038,0.035],[3.046,-0.309],[2.949,0.002],[3.115,-0.283],[6.078,-0.072],[5.994,-0.5],[2.645,-0.838],[1.164,-4.321]],"v":[[55.407,-4.426],[48.079,-3.413],[47.637,-3.335],[46.564,-3.229],[44.452,-3.018],[39.611,-2.579],[34.46,-2.48],[30.383,-3.18],[20.382,-5.613],[15.728,-5.538],[13.678,-7.37],[4.911,-11.721],[-4.057,-10.538],[-6.036,-6.516],[-6.345,-5.617],[-6.395,-5.488],[-6.432,-5.423],[-7.031,-5.094],[-7.503,-4.824],[-10.119,-3.965],[-10.837,-3.992],[-17.589,-3.796],[-21.182,-7.13],[-25.035,-8.352],[-28.304,-7.91],[-35.798,-6.512],[-41.857,-3.355],[-42.196,-3.124],[-43.117,-3.934],[-42.844,-3.566],[-43.826,-4.848],[-51.802,-5.632],[-57.605,-0.643],[-59.771,2.182],[-60.416,3.327],[-60.615,3.635],[-60.98,3.943],[-60.98,10.74],[-56.747,11.997],[-54.171,12.768],[-35.393,12.768],[-25.946,12.736],[-17.061,13.115],[-8.029,12.32],[1.135,12.148],[9.982,11.988],[19.307,11.439],[37.654,11.456],[55.219,7.633],[61.833,2.518]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.760784373564,0.341176470588,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[73.384,38.715],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-1.058,1.765],[-1.534,0.159],[-0.024,1.604],[-2.9,0.981],[-0.88,2.562],[-0.767,0.658],[-1.015,0.614],[-0.997,0.388],[-2.204,-0.383],[-2.499,2.424],[-1.557,2.499],[-1.932,1.168],[-1.504,-0.702],[-4.326,2.044],[-0.367,0.095],[-1.339,-0.249],[-1.537,-1.278],[-1.552,-0.772],[-2.701,-0.089],[-1.583,-0.886],[-3.222,-1.254],[-5.728,-5.798],[-1.18,-1.9],[-1.692,-0.601],[-0.922,-0.64],[-0.813,-1.043],[-2.613,-0.428],[-1.426,-1.159],[-1.55,-1.057],[-1.191,-1.695]],"o":[[0,0],[0.157,-2.361],[0.771,-1.298],[0.422,-1.467],[2.938,0.015],[0.579,-2.789],[0.333,-0.983],[0.914,-0.792],[0.864,-0.528],[1.628,-0.637],[3.178,0.56],[2.303,-2.233],[1.264,-2.022],[1.325,0.953],[4.965,2.329],[0.459,-0.213],[1.573,-0.412],[1.634,0.304],[1.297,1.072],[2.34,1.158],[1.646,0.051],[2.441,1.363],[6.315,2.459],[1.67,1.692],[1.019,1.631],[0.924,0.332],[1.014,0.704],[1.801,2.296],[1.769,0.289],[1.291,1.05],[1.587,1.084],[0,0]],"v":[[-84.41,20.224],[-84.408,19.863],[-83.697,15.406],[-79.013,11.771],[-78.113,7.293],[-68.982,7.512],[-65.809,-0.543],[-64.256,-4.361],[-60.512,-5.203],[-58.508,-7.727],[-50.398,-4.785],[-41.857,-7.017],[-37.604,-14.884],[-32.064,-18.407],[-28.061,-15.207],[-11.064,-19.258],[-9.952,-20.64],[-2.946,-20.841],[3.229,-17.333],[6.32,-14.487],[15.776,-13.793],[22.178,-13.48],[28.879,-7.29],[49.91,-4.567],[52.089,1.863],[56.674,4.707],[61.327,6.006],[62.531,8.471],[69.805,10.973],[75.602,12.73],[79.038,16.401],[84.755,21.09]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.882353001015,0.443137284821,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[85.005,21.34],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":4,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"手","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":30,"s":[-3.643]},{"t":60,"s":[0]}],"ix":10},"p":{"a":0,"k":[308.79,103.691,0],"ix":2},"a":{"a":0,"k":[93.8,102.785,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.539,5.884],[0.305,-0.436],[1.218,-1.236],[2.864,-2.424],[1.259,-1.266],[0.001,-0.001],[0,0],[0,0],[-0.011,0.01],[-0.198,0.189]],"o":[[-0.298,0.441],[-1.133,1.619],[-2.633,2.671],[-1.363,1.155],[-0.001,0.001],[2.357,2.91],[0,0],[0.011,-0.01],[0.201,-0.185],[1.883,-2.965]],"v":[[7.725,-10.894],[6.827,-9.574],[3.779,-5.811],[-4.344,1.829],[-8.261,5.456],[-8.264,5.458],[-3.641,10.894],[5.616,5.97],[5.65,5.941],[6.235,5.366]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.949019667682,0.611764705882,0.439215716194,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[67.64,132.827],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.363,1.154],[-2.632,2.67],[-1.134,1.62],[-0.298,0.44],[0.25,1.311],[6.508,-3.991],[-0.439,-2.89],[-2.438,-3.01],[-0.001,0.001]],"o":[[2.863,-2.424],[1.218,-1.236],[0.305,-0.436],[-0.16,-1.739],[-1.14,-5.962],[-6.513,3.99],[0.223,1.47],[0,-0.001],[1.259,-1.266]],"v":[[-0.08,9.858],[8.041,2.218],[11.09,-1.546],[11.989,-2.865],[11.364,-7.525],[-5.476,-3.261],[-9.195,5.585],[-4.001,13.487],[-3.999,13.484]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.807843197093,0.627450980392,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[63.377,124.799],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":4,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0]],"o":[[0,0]],"v":[[57.477,134.387]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.549019607843,0.345098039216,0.192156877705,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 3","np":4,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[28.466,-27.329],[28.613,-34.739],[-28.613,31.674],[-25.055,34.739]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.619607843137,0.419607873056,0.250980392157,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[28.863,169.126],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 4","np":4,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.011,-0.01],[0,0],[-0.091,0.144],[0.202,-0.185]],"o":[[0,0],[0.099,-0.122],[-0.197,0.189],[-0.011,0.01]],"v":[[-0.309,0.302],[0.033,0.12],[0.309,-0.302],[-0.275,0.273]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.807843197093,0.627450980392,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[73.565,138.495],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 5","np":4,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[61.17,-68.792],[58.344,-71.225],[59.003,-69.328],[10.885,-12.887],[7.01,-10.232],[-7.501,0.294],[-7.648,7.704],[-61.17,69.772],[-59.482,71.225]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.549019607843,0.345098039216,0.192156877705,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[64.977,134.093],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 6","np":4,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-14.867,23.621],[33.252,-32.82],[32.593,-34.717],[30.173,-36.802],[-33.252,36.802],[-18.742,26.277]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.619607843137,0.419607873056,0.250980392157,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[90.728,97.585],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 7","np":4,"cix":2,"bm":0,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[8.214,-0.814],[4.643,6.175],[0,0],[-0.03,-0.672],[-0.996,-4.295],[-0.897,-2.915],[-4.862,-0.211],[-1.984,0.464],[-0.951,0.584],[-3.185,4.087],[-2.103,2.594],[-0.766,1.03],[-0.601,1.252],[-2.069,-0.834],[-0.841,3.042]],"o":[[-6.326,7.363],[-6.624,0.654],[0,0],[0.26,0.62],[0.202,4.505],[0.688,2.967],[3.903,5.239],[1.999,0.087],[0.959,-0.663],[4.348,-2.673],[2.051,-2.63],[0.715,-0.881],[0.823,-1.108],[1.063,-2.21],[0.81,-3.43],[0,0]],"v":[[21.752,-22.152],[-5.423,-0.345],[-23.805,-13.413],[-28.808,-10.686],[-28.361,-8.726],[-27.022,3.886],[-24.594,12.704],[-11.313,22.065],[-5.32,21.452],[-2.455,19.564],[9.391,9.861],[15.497,1.957],[17.86,-1.174],[20.252,-4.551],[26.306,-6.334],[28.808,-16.126]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.564705882353,0.486274539723,0.458823559331,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[102.532,159.705],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 8","np":4,"cix":2,"bm":0,"ix":8,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.063,-2.211],[0.824,-1.108],[0.715,-0.881],[2.05,-2.63],[4.347,-2.672],[0.96,-0.663],[-0.209,0.232],[0.052,-0.199],[0,0],[-0.284,1.204]],"o":[[-0.602,1.251],[-0.765,1.029],[-2.104,2.593],[-3.185,4.087],[-0.951,0.585],[13.105,-3.064],[-0.009,0.038],[0,0],[0.272,-1.224],[-2.068,-0.835]],"v":[[9.76,-11.693],[7.367,-8.316],[5.005,-5.184],[-1.101,2.719],[-12.947,12.421],[-15.813,14.311],[9.474,-2.291],[9.378,-1.924],[14.979,-9.83],[15.813,-13.476]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.537254901961,0.431372578939,0.400000029919,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[113.024,166.847],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 9","np":4,"cix":2,"bm":0,"ix":9,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-4.521,-6.069],[0.688,2.967],[0.203,4.505],[0.26,0.62],[0,0]],"o":[[-0.898,-2.915],[-0.996,-4.294],[-0.03,-0.672],[0,0],[2.447,5.954]],"v":[[5.332,11.695],[2.903,2.877],[1.564,-9.735],[1.118,-11.695],[-5.332,-8.179]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.537254901961,0.431372578939,0.400000029919,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[72.607,160.714],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 10","np":4,"cix":2,"bm":0,"ix":10,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.119,-4.151],[0,0],[0,0],[0,0]],"o":[[0,0],[-2.095,-5.107],[0,0],[0,0]],"v":[[7.364,0.717],[-4.089,6.96],[-7.364,-1.855],[2.235,-6.96]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.666666666667,0.552941176471,0.517647058824,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[71.363,145.575],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 11","np":4,"cix":2,"bm":0,"ix":11,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.1,-1.005],[0,0],[0,0],[0,0],[0,0],[0,0],[-1.14,-0.982]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[1.16,0.935],[1.14,0.982]],"v":[[9.146,-3.744],[-2.343,9.597],[-3.122,8.928],[-8.367,4.408],[-9.146,3.734],[2.343,-9.597],[5.791,-6.722]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.556862745098,0.552941176471,0.576470588235,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[129.267,56.374],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 12","np":4,"cix":2,"bm":0,"ix":12,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[14.406,12.412],[20.783,-0.118],[-37.753,-32.533]],"o":[[-2.956,-20.573],[-14.407,-12.411],[0,0],[37.759,32.537]],"v":[[54.675,55.699],[13.117,-12.277],[-60.254,-43.33],[22.495,-23.166]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.556862745098,0.552941176471,0.576470588235,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[127.095,55.949],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 13","np":4,"cix":2,"bm":0,"ix":13,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.16,0.935],[0,0],[-14.406,-12.411],[-2.956,-20.573],[28.404,25.974],[1.14,0.982]],"o":[[-29.876,-24.253],[20.782,-0.117],[14.407,12.412],[0,0],[-1.101,-1.005],[-1.141,-0.982]],"v":[[7.306,-15.298],[-57.465,-49.456],[15.905,-18.402],[57.465,49.574],[14.108,-9.443],[10.754,-12.421]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.733333333333,0.733333333333,0.737254901961,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[124.306,62.075],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 14","np":4,"cix":2,"bm":0,"ix":14,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"LOGO","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":30,"s":[4]},{"t":60,"s":[0]}],"ix":10},"p":{"a":0,"k":[223.603,244.258,0],"ix":2},"a":{"a":0,"k":[211.463,211.463,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0]],"o":[[0,0]],"v":[[621.86,262.205]],"c":false},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.156862999411,0.098038998772,0.498039006252,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"形状 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[56.819,-0.029],[26.735,-0.026],[5.033,-18.497],[0.029,-0.11],[0,0],[0,0],[0,0],[-4.777,17.512],[-4.129,15.37],[-3.415,14.046],[-1.999,0.521],[0,0],[6.885,-25.77],[0,0],[-4.67,16.795],[-2.857,10.523],[-2.765,10.287],[-3.415,14.046],[-2.438,0.388],[-0.604,0.003],[-0.094,-0.001],[-11.847,-0.039],[-4.185,16.074],[-0.022,0.082],[0,0]],"o":[[-26.734,0.001],[-19.169,0.018],[-0.029,0.111],[0,0],[0,0],[-12.074,45.19],[18.137,0.745],[5.369,-19.683],[3.752,-13.961],[0.649,-2.67],[0,0],[-6.918,25.892],[-5.131,19.207],[17.275,2.34],[6.196,-22.287],[2.79,-10.281],[3.751,-13.961],[0.715,-2.938],[0.487,-0.078],[0.091,-0.001],[8.364,0.095],[16.61,0.055],[0.021,-0.083],[0.307,-1.173],[0,0]],"v":[[4.152,-98.944],[-76.052,-98.924],[-117.266,-67.712],[-117.355,-67.381],[-94.05,-67.381],[-48.186,-67.381],[-84.291,67.758],[-45.134,39.112],[-28.865,-20.814],[-18.066,-62.817],[-14.458,-67.381],[11.54,-67.381],[-9.143,10.032],[-32.759,96.633],[5.536,71.41],[22.516,10.032],[30.862,-20.814],[41.66,-62.817],[45.917,-67.5],[47.543,-67.626],[47.804,-67.636],[80.883,-67.44],[116.188,-94.684],[116.253,-94.932],[117.355,-98.957]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[193.649,245.716],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":4,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-2.918,15.504],[23.453,3.495],[1.082,0.046],[0,0],[0,0],[0,0],[-3.225,-2.881],[5.806,-8.063],[8.826,0.024],[11.212,0.025],[5.425,-18.47],[0.077,-0.282],[0,0],[-15.763,-0.263],[1.859,-9.289],[10.894,0.001],[11.26,0.02],[5.687,-18.015],[0.096,-0.379],[0,0],[-18.583,-0.146],[-13.774,22.359],[6.809,15.458],[0.699,1.441]],"o":[[4.412,-23.441],[-1.181,-0.176],[0,0],[0,0],[0,0],[4.324,-0.014],[5.84,5.217],[-4.937,6.858],[-8.544,-0.023],[-19.251,-0.042],[-0.088,0.3],[0,0],[15.768,0.001],[9.37,0.157],[-2.144,10.708],[-8.588,-0.001],[-18.892,-0.034],[-0.164,0.52],[0,0],[18.586,-0.003],[26.93,0.212],[8.243,-13.38],[-0.8,-1.817],[11.215,-10.998]],"v":[[71.551,-38.071],[39.676,-83.174],[36.374,-83.472],[-7.227,-83.472],[-7.227,-52.011],[23.72,-52.11],[35.539,-47.816],[35.965,-26.829],[15.574,-15.816],[-16.29,-15.892],[-58.094,15.093],[-58.342,15.966],[-38.39,15.966],[8.911,16.042],[21.472,32.431],[-2.102,51.803],[-34.136,51.765],[-75.57,81.888],[-75.963,83.242],[-70.424,83.242],[-14.669,83.26],[45.971,48.751],[51.065,5.337],[48.641,0.318]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.992156922583,0.827451040231,0.20000001496,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[283.934,230.228],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":4,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[5.619,-17.852],[0,0],[0,0]],"o":[[0,0],[-18.714,0.084],[0,0],[0,0],[0,0]],"v":[[25.706,-31.837],[25.706,-31.837],[-15.141,-1.729],[-25.707,31.837],[5.481,31.837]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[180.816,104.905],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 3","np":4,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[4.945,-17.695],[0,0]],"o":[[0,0],[-18.373,0.082],[0,0],[0,0]],"v":[[19.886,-15.021],[19.519,-15.019],[-19.886,15.021],[11.302,15.021]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[236.794,121.72],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 4","np":4,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-116.65],[116.65,0],[0,116.65],[-116.65,0]],"o":[[0,116.65],[-116.65,0],[0,-116.65],[116.65,0]],"v":[[211.213,0],[0,211.213],[-211.213,0],[0,-211.213]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[211.463,211.463],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 5","np":4,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"影子","sr":1,"ks":{"o":{"a":0,"k":40,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,464.625,0],"ix":2},"a":{"a":0,"k":[245.633,14.883,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-8.22],[135.659,0],[0,8.22],[-135.659,0]],"o":[[0,8.22],[-135.659,0],[0,-8.22],[135.659,0]],"v":[[245.633,0],[0,14.883],[-245.633,0],[0,-14.883]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.227450995352,0.498039245605,0.992156922583,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[245.633,14.883],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0}],"markers":[]}')},"284c":function(e,t,n){"use strict";n("641d")},"2d1c":function(e,t,n){e.exports=n.p+"img/logos.c818fa49.svg"},"2dbf":function(e,t,n){e.exports=n.p+"img/closure.c42ddd6f.svg"},3:function(e,t){},"33d3":function(e,t,n){},3614:function(e,t,n){},3729:function(e,t,n){e.exports=n.p+"img/Fst.36e59140.svg"},"38a2":function(e,t,n){"use strict";n("33d3")},"39ec":function(e,t,n){e.exports=n.p+"img/1.f449f80c.svg"},"3bf2":function(e,t,n){e.exports=n.p+"img/spacepi.67c80c44.svg"},4:function(e,t){},4042:function(e,t,n){"use strict";n("c798")},4251:function(e,t,n){"use strict";n.r(t);var a={address:"0x4aaad68be1a2ac9886b72b9dae474f3edd2132d9",currency:{spacePi:"SpacePi",btcPi:"BTCPi",usdt:"USD",usd:"USD"},public:{connect:"连接钱包",disconnect:"断开连接",balance:"余额",min:"最小",max:"最大",buy:"兑换",get:"获取",authorize:"授权",receive:"领取",copy:"复制",is_receive:"已领取",my:"我的",tooltip:"您的每笔交易（添加、删除、提款）都会将收益直接转入您的钱包，并重新开始计算收益。",cancel:"取消",confirm:"确认"},alert:{connect:{success:"连接成功",error:"连接失败"},presale:{min0:"余额不能为0",min:"余额不能少于",max:"本次预售上限",buySuccess:"参与预售成功",buyError:"参与预售失败",receiveSuccess:"领取成功",receiveError:"领取失败",authorizeSuccess:"授权成功",authorizeAdd:"正在授权中...",authorizeError:"授权失败",balanceError:"余额不足",balanceError1:"本次预售最多只能",withdrawerror:"领取失败，请确认网络是否正常"},home:{copySuccess:"复制成功"},earn:{lodingAdd:"正在交易中...",harvestSuccess:"收获成功",harvestError:"收获失败",StakingSuccess:"质押成功",StakingError:"质押失败",LpwithdrawnSuccess:"取出成功",LpwithdrawnError:"取出失败",LpAddSuccess:"添加成功",LpAddError:"添加失败"}},top:{home:"首页",presale:"Presale",earn:"农场"},home:{title:"BTCPi 是一个基于",bitcoinTitle:"Bitcoin",bitcoinOrpiNetwork:"&",piNetworkTitle:"Pi Network",endTitle:"的全球实验",text:"BTCPi 是什么？",getCar:{title:"BTCPi 为未来赋能",individuals:{title:"个人",bnt:"支付工具"},businesses:{title:"企业",bnt:"商品流通"},developers:{title:"开发者",bnt:"应用开发"}},getIntroduce:{title:"BTCPi 经济模型",text:"BTCPi 的诞生是为了致敬 BTC 与 Pi Network——BTCPi 总量2100万, 其中525万在BSC链发行。200万 BTCPi 通过DeFi挖矿释放, 总挖矿时长为8年, 两年减半一次。",list:["快速点对点交易","全球支付","低手续费"],bnt:"启动 BTCPi 挖矿"},bnt:[{title:"购买 BTCPi",url:"https://pancakeswap.finance/swap?inputCurrency=BNB&outputCurrency=0x4aaad68be1a2ac9886b72b9dae474f3edd2132d9"},{title:"SpacePi",url:"https://space-pi.com"},{title:"安全审计",url:"https://app.staysafu.org/scan/free?a=0x4aaad68be1a2ac9886b72b9dae474f3edd2132d9"},{title:"BTCPi 趋势",url:"https://dexscreener.com/bsc/0x5d41418a006587038c4740c75c1d688cbaa6427e"}],partners:{title:"BTCPi合作伙伴",text:"BTCPi 是一个基于 Bitcoin & Pi Network 的全球实验"}},presale:{presaleCountdown:"Presale 倒计时",presaleEnd:"BTCPi 预售结束！",yourExchangeAmount:"参与BTCPi的 Presale",myPresale:"我的预售",buyExplain:"BTCPi 将会在预售结束后手动领取",exchangeRatio:"兑换比例",presaleRule:{title:"Presale规则",text:["1、预售BTCPi每个地址的最大购买限额为 250亿 SpacePi & 25 USDT，预售后将加入PancakeSwap流动资金池。","2、预售结束后，您可以手动领取预售的BTCPi。","3、预售BTCPi将在PancakeSwap上线48小时内手动解锁。"]}},earn:{farmsTitle:"农场",farmsText:"质押挖矿",currentBlockOutput:"每区块产出",currentBlockOutputTips:"每个区块产出数量, 每日大约产出1500 BTCPi",halvingCountdown:"减半倒计时",halvingCountdownTips:"减半倒计时为根据当前区块高度预估的减半时间, 因为每个区块的时间可能略有不同, 具体的减半时间需要以减半品块高度为准",apr:"APR",earn:"挖取",earned:"已挖取",harvest:"收获",staked:"质押",stake:"质押",stakeLp:"质押 LP",details:"详细",hide:"隐藏",totalLiquidity:"总质押量",seeTokenInfo:"获取",viewTutorial:"查看合约",viewContract:"代币信息",unstakeLPTokens:"质押",unstake:"未质押",unstake1:"已质押",earnUrl1:["https://pancakeswap.finance/swap?inputCurrency=BNB&outputCurrency=0x69b14e8D3CEBfDD8196Bfe530954A0C226E5008E","https://bscscan.com/address/0x69b14e8D3CEBfDD8196Bfe530954A0C226E5008E#code","https://bscscan.com/token/0x69b14e8D3CEBfDD8196Bfe530954A0C226E5008E"],earnUrl2:["https://pancakeswap.finance/add/0x69b14e8D3CEBfDD8196Bfe530954A0C226E5008E/0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d","https://bscscan.com/address/0xc736D81C0D96e21FAFDf30083FD812a3DE41A203#code","https://bscscan.com/token/0xc736D81C0D96e21FAFDf30083FD812a3DE41A203"],earnUrl3:["https://pancakeswap.finance/add/0x4aAAD68BE1A2Ac9886B72b9DaE474F3eDd2132D9/0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d","https://bscscan.com/address/0x5d41418a006587038c4740c75c1d688cbaa6427e#code","https://bscscan.com/token/0x5d41418a006587038c4740c75c1d688cbaa6427e"],earnUrl4:["https://pancakeswap.finance/add/0x4aAAD68BE1A2Ac9886B72b9DaE474F3eDd2132D9/0x69b14e8D3CEBfDD8196Bfe530954A0C226E5008E","https://bscscan.com/address/0xbca91e8842408f00577ee80db8dcfa24d7c1e627#code","https://bscscan.com/token/0xbca91e8842408f00577ee80db8dcfa24d7c1e627"],earnUrl5:["https://fstswap.finance/#/add/v2/0xC9882dEF23bc42D53895b8361D0b1EDC7570Bc6A/0x69b14e8D3CEBfDD8196Bfe530954A0C226E5008E","https://bscscan.com/address/0x295fcf5d8c8de480324f59cd29c93a8072741867#code","https://bscscan.com/token/0x295fcf5d8c8de480324f59cd29c93a8072741867"]},footer:{title:"SpacePi 子项目-BTCPi",text:"BTCPi是一个基于Bitcoin & Pi Network 的全球实验",bnt:"SpacePi 官网",copyright:"Copyright © 2022 BTCPI. All rights reserved",serve:"We use cookies for better service.",acce:"Accept"}};t["default"]=a},"462d":function(e,t,n){e.exports=n.p+"img/success.db678f9a.svg"},"4b2c":function(e,t,n){e.exports=n.p+"img/disconnect.bff5b31d.svg"},"4f6a":function(e,t,n){e.exports=n.p+"img/get-r-m.a17f0b24.svg"},5:function(e,t){},"520d":function(e,t,n){"use strict";n("b6dd")},"553b":function(e,t,n){e.exports=n.p+"img/copy.528726a1.svg"},"56d7":function(e,t,n){"use strict";n.r(t);n("e260"),n("e6cf"),n("cca6"),n("a79d");var a=n("2b0e"),r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("v-app",{staticClass:"v-app",style:{overflowY:e.overflowY?"hidden":"scroll"}},[n("alert"),n("bctPiBar"),n("v-main",{staticClass:"v-main-p",staticStyle:{"padding-bottom":"50px"}},[n("router-view")],1),n("btcPiFooter")],1)},i=[],s=n("f3f3"),o=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("v-app-bar",{staticClass:"bctPiBar",attrs:{app:"",height:e.height,color:"#FFFFFF",elevation:"1"}},[a("div",{staticClass:"logo"},[a("v-img",{attrs:{src:n("136c"),contain:""},on:{click:function(t){return e.$router.push("/")}}})],1),a("v-spacer"),a("div",{staticClass:"menu-choose"},[a("v-tabs",{attrs:{"hide-slider":"",color:"#3772FF","center-active":""}},[a("div",{staticClass:"menu-tabs"},[a("div",{staticClass:"a menu-title",style:{color:"/"==e.$route.path?"#3772FF":"#474D5B"},on:{click:function(t){return e.$router.push("/")}}},[a("span",[e._v(e._s(e.$t("top").home))]),a("div",{staticClass:"round",style:{display:"/"==e.$route.path?"":"none"}})]),e._l(e.menu,(function(t,n){return a("div",{key:n,staticClass:"a menu-title",staticStyle:{color:"#474D5B"},on:{click:function(n){return e.openUrl(t.link)}}},[a("span",[e._v(e._s(t[e.$i18n.locale]))])])}))],2)])],1),a("v-spacer"),a("div",{staticClass:"function",style:{gridGap:e.mw?"8px":""}},[a("div",{staticClass:"lang",style:{position:"relative",height:e.height,display:"flex",alignItems:"center",justifyContent:"center"}},[a("v-img",{staticClass:"language",attrs:{src:n("1974")},on:{click:function(){e.langStatus?e.langStatus=!1:e.langStatus=!0}}}),e.langStatus?a("div",{staticClass:"list",style:{top:e.height}},e._l(e.langData,(function(t,n){return a("div",{key:n,staticClass:"list-i",on:{click:function(n){return e.langClisk(t.key)}}},[e._v(" "+e._s(t.name)+" ")])})),0):e._e()],1),""===e.walletAddress?a("v-btn",{staticClass:"connect-Wallet",attrs:{elevation:"0",color:"#3772FF"},on:{click:e.connect}},[a("v-img",{staticClass:"wallet",style:{display:e.mw?"none":""},attrs:{src:n("bc38")}}),a("span",[e._v(e._s(e.$t("public").connect))])],1):e._e(),""!==e.walletAddress?a("div",{staticClass:"disconnect-subject",staticStyle:{position:"relative"}},[a("v-btn",{staticClass:"connect-Wallet",attrs:{elevation:"0",color:"#3772FF"}},[a("v-img",{staticClass:"wallet",attrs:{src:n("bc38")}}),a("span",{style:{display:e.mw?"none":""}},[e._v(e._s(e.plusXing(e.walletAddress,2)))]),a("v-img",{staticClass:"downArrow",attrs:{src:n("9a9d")}})],1),a("div",{staticClass:"disconnect-s",style:{left:e.mw?"-25px":""}},[a("v-btn",{staticClass:"disconnect",attrs:{elevation:"0",color:"#3772FF",outlined:""},on:{click:e.disconnect}},[a("span",[e._v(e._s(e.$t("public").disconnect))]),a("v-img",{staticClass:"disconnect-icon",attrs:{src:n("4b2c")}})],1)],1)],1):e._e(),a("v-img",{staticClass:"more",attrs:{src:n("9bc7")},on:{click:function(){e.moreStatus?e.moreStatus=!1:e.moreStatus=!0}}}),e.moreStatus?a("div",{staticClass:"moreList",style:{top:e.height}},[a("div",{staticClass:"subject"},[a("div",{staticClass:"btcPi-width a"},[a("div",{on:{click:function(){e.$router.push("/"),e.moreStatus=!1}}},[e._v(" "+e._s(e.$t("top").home)+" ")]),e._l(e.menu,(function(t,n){return a("div",{key:n,on:{click:function(n){return e.openUrl(t.link)}}},[a("span",[e._v(e._s(t[e.$i18n.locale]))])])}))],2)])]):e._e()],1)],1)},c=[],d=n("c964"),l=(n("96cf"),n("ac1f"),n("466d"),n("bc3a")),u=n.n(l),b=n("2f62"),f={name:"App",data:function(){return{height:"70px",langStatus:!1,mLangStatus:!1,langData:[{key:"en",name:"English"},{key:"zhHans",name:"Chinese (中文)"}],moreStatus:!1,mw:!1,menu:[]}},computed:Object(s["a"])({},Object(b["d"])(["walletAddress","urls"])),methods:Object(s["a"])(Object(s["a"])({},Object(b["c"])(["editAddress","updateunlock_block"])),{},{isMobile:function(){var e=navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);return e},connect:function(){var e=this;ethereum.request({method:"eth_requestAccounts"}).then(function(){var t=Object(d["a"])(regeneratorRuntime.mark((function t(n){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.editAddress(n[0]),e.$store.commit("editAddress",n[0]);case 2:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()).then((function(){e.$store.commit("updatealert",{status:!0,text:e.$t("alert").connect.success,type:"success"}),setTimeout((function(){e.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)})).catch((function(){e.$store.commit("updatealert",{status:!0,text:e.$t("alert").connect.error,type:"warning"}),setTimeout((function(){e.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)}))},disconnect:function(){console.log("断开连接"),sessionStorage.removeItem("walletAddress"),this.$store.commit("editAddress","")},langClisk:function(e){this.langStatus=!1,this.$i18n.locale=e},openUrl:function(e){window.open(e,"_blank")},plusXing:function(e,t){return e.substring(0,t)+"..."+e.substring(e.length-t)},getBtcpiMenu:function(){var e=this;u.a.get("/json/getBtcpiMenu.json",{}).then((function(t){e.menu=t.data})).catch((function(e){}))}}),mounted:function(){var e=this;this.getBtcpiMenu();var t=document.documentElement.clientWidth;this.height=t<600?"60px":"70px",this.mw=t<300,this.$nextTick((function(){window.onresize=function(){return function(){setTimeout((function(){var t=document.documentElement.clientWidth;e.height=t<600?"60px":"70px",e.mw=t<300,e.langStatus=!1,e.moreStatus=!1}),100)}()},document.addEventListener("click",(function(t){"v-responsive__content"!==t.target.className&&(e.langStatus=!1,e.mLangStatus=!1),"v-responsive__sizer"!==t.target.className&&(e.moreStatus=!1),"lang"==t.target.className&&(e.moreStatus=!0)})),window.addEventListener("scroll",(function(t){"list"!==t.target.className&&(e.langStatus=!1)}),!0)}))}},p=f,m=(n("2250"),n("2877")),y=n("6544"),h=n.n(y),v=n("40dc"),k=n("8336"),x=n("adda"),g=n("2fa4"),w=n("fe57"),_=Object(m["a"])(p,o,c,!1,null,"6b337bbd",null),C=_.exports;h()(_,{VAppBar:v["a"],VBtn:k["a"],VImg:x["a"],VSpacer:g["a"],VTabs:w["a"]});var T=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("v-footer",{staticClass:"footer",attrs:{app:"",absolute:!1}},[a("div",{staticClass:"BtcPi-footer"},[a("div",{staticClass:"btcPi-width subject"},[a("v-img",{staticClass:"logo",attrs:{src:n("2d1c")},on:{click:function(t){return e.$router.push("/")}}}),a("div",{staticClass:"title"},[e._v(e._s(e.$t("footer").title))]),a("div",{staticClass:"text"},[e._v(e._s(e.$t("footer").text))]),a("v-btn",{staticClass:"join",attrs:{href:"https://space-pi.com/#/",target:"_blank",elevation:"0",color:"#FFFFFF",outlined:""}},[e._v(e._s(e.$t("footer").bnt))])],1)]),a("v-divider",{staticStyle:{display:"flex",width:"100%",background:"rgba(48, 49, 64, 0.9)"}}),a("div",{staticClass:"BtcPi-copyright"},[a("div",{staticClass:"btcPi-width subject"},[a("div",{staticClass:"left"},[e._v(" "+e._s(e.$t("footer").copyright)+" ")])])])],1)},S=[],A={name:"App",data:function(){return{}}},E=A,B=(n("284c"),n("ce7e")),P=n("553a"),D=Object(m["a"])(E,T,S,!1,null,"1169dd5a",null),R=D.exports;h()(D,{VBtn:k["a"],VDivider:B["a"],VFooter:P["a"],VImg:x["a"]});var I=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"alert"},[e.alert.status?a("div",{staticClass:"v-alert"},["success"===e.alert.type?[a("div",{staticClass:"alert-top",staticStyle:{background:"#31D0AA"}},[a("v-img",{staticClass:"alert-logo",attrs:{src:n("462d")}})],1),a("div",{staticClass:"alert-subject"},[a("div",{staticClass:"alert-title",staticStyle:{color:"#31D0AA"}},[e._v("SUCCESS")]),a("div",{staticClass:"alert-text",staticStyle:{color:"#31D0AA"}},[e._v(e._s(e.alert.text))])])]:e._e(),"error"===e.alert.type?[a("div",{staticClass:"alert-top",staticStyle:{background:"#ED4B9E"}},[a("v-img",{staticClass:"alert-logo",attrs:{src:n("63c2")}})],1),a("div",{staticClass:"alert-subject"},[a("div",{staticClass:"alert-title",staticStyle:{color:"#ED4B9E"}},[e._v("ERROR")]),a("div",{staticClass:"alert-text",staticStyle:{color:"#ED4B9E"}},[e._v(e._s(e.alert.text))])])]:e._e(),"warning"===e.alert.type?[a("div",{staticClass:"alert-top",staticStyle:{background:"#FF7841"}},[a("v-img",{staticClass:"alert-logo",attrs:{src:n("59fa")}})],1),a("div",{staticClass:"alert-subject"},[a("div",{staticClass:"alert-title",staticStyle:{color:"#FF7841"}},[e._v("WARNING")]),a("div",{staticClass:"alert-text",staticStyle:{color:"#FF7841"}},[e._v(e._s(e.alert.text))])])]:e._e(),"info"===e.alert.type?[a("div",{staticClass:"alert-top",staticStyle:{background:"#379BFF"}},[a("v-img",{staticClass:"alert-logo",attrs:{src:n("c0e9")}})],1),a("div",{staticClass:"alert-subject"},[a("div",{staticClass:"alert-title",staticStyle:{color:"#379BFF"}},[e._v("INFO")]),a("div",{staticClass:"alert-text",staticStyle:{color:"#379BFF"}},[e._v(e._s(e.alert.text))])])]:e._e()],2):e._e()])},M=[],L={data:function(){return{}},props:{},computed:Object(s["a"])({},Object(b["d"])(["alert"])),watch:{},components:{},created:function(){},mounted:function(){},methods:{}},V=L,O=(n("c2ee"),Object(m["a"])(V,I,M,!1,null,"24dad446",null)),G=O.exports;h()(O,{VImg:x["a"]});var $={name:"App",components:{bctPiBar:C,btcPiFooter:R,alert:G},data:function(){return{}},computed:Object(s["a"])({},Object(b["d"])(["overflowY"])),created:function(){window.addEventListener("scroll",this.pageScroll,!1)},methods:{}},F=$,q=(n("a86f"),n("7496")),z=n("f6c4"),j=Object(m["a"])(F,r,i,!1,null,"d40a4b58",null),U=j.exports;h()(j,{VApp:q["a"],VMain:z["a"]});var N=n("8c4f"),W=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"home"},[a("div",{staticClass:"home-top-subject"},[a("div",{staticClass:"top-start btcPi-width"},[a("div",{staticClass:"top-title"},[e._v(" "+e._s(e.$t("home").title)+" "),a("span",{staticClass:"top-title-s"},[e._v(e._s(e.$t("home").bitcoinTitle))]),e._v(" "+e._s(e.$t("home").bitcoinOrpiNetwork)+" "),a("span",{staticClass:"top-title-s"},[e._v(e._s(e.$t("home").piNetworkTitle))]),e._v(" "+e._s(e.$t("home").endTitle)+" ")]),a("div",{staticClass:"top-bnt-s"},[a("v-btn",{staticClass:"top-bnt",staticStyle:{display:"none"},attrs:{to:"/earn",elevation:"0",color:"#3772FF"}},[e._v(e._s(e.$t("top").earn))]),e._l(e.btcpiBuntton,(function(t,n){return a("v-menu",{key:n,attrs:{transition:"slide-y-transition","open-on-hover":"","offset-y":"",bottom:""},scopedSlots:e._u([{key:"activator",fn:function(n){var r=n.on,i=n.attrs;return[a("v-btn",e._g(e._b({staticClass:"top-bnt",attrs:{elevation:"0",color:"#3772FF"},on:{click:function(n){1!=t.staus&&e.openUrl(t.link)}}},"v-btn",i,!1),r),[e._v(e._s(t[e.$i18n.locale]))])]}}],null,!0)},[0!=t.staus?a("v-list",{staticClass:"btc-list"},e._l(e.btcpiBunttonList,(function(n,r){return a("div",{key:r},[n.b_id==t.id?a("v-list-item",{on:{click:function(t){return e.openUrl(n.link)}}},[a("v-list-item-title",{staticStyle:{"text-align":"center"}},[e._v(" "+e._s(n[e.$i18n.locale])+" ")])],1):e._e()],1)})),0):e._e()],1)}))],2),a("div",{staticClass:"address-subject"},[a("div",{staticClass:"address"},[e._v(" "+e._s(e.plusXing(e.$t("address"),e.addmu))+" ")]),a("div",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:e.$t("address"),expression:"$t('address')",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:e.onCopy,expression:"onCopy",arg:"success"}],staticClass:"copy",staticStyle:{cursor:"pointer"}},[a("div",{staticClass:"copy-s",staticStyle:{background:"rgba(55, 114, 255, 0.05)"}},[a("div",{staticClass:"copy-icon"},[a("v-img",{attrs:{src:n("553b")}})],1),a("span",[e._v(" "+e._s(e.$t("public").copy))])])]),a("div",{directives:[{name:"clipboard",rawName:"v-clipboard:copy",value:e.$t("address"),expression:"$t('address')",arg:"copy"},{name:"clipboard",rawName:"v-clipboard:success",value:e.onCopy,expression:"onCopy",arg:"success"}],staticClass:"copy-mo"},[a("div",{staticClass:"copy-icon"},[a("v-img",{attrs:{src:n("553b")}})],1)])]),a("div",{staticClass:"top-text",staticStyle:{display:"none"}},[e._v(e._s(e.$t("home").text))])])]),a("div",{staticClass:"home-top-end"},[a("getAnimation",{staticClass:"home-top-svg"}),a("div",{staticClass:"home-top-end-subject"},[a("div",{staticClass:"subject btcPi-width"},[a("div",{staticClass:"subject-title"},[e._v(e._s(e.$t("home").getCar.title))]),a("div",{staticClass:"car-subject"},[a("div",{staticClass:"car-subject-s"},[a("div",{staticClass:"car"},[a("div",[a("v-img",{staticClass:"car-logo",attrs:{src:n("16e6")}})],1),a("div",{staticClass:"car-title"},[e._v(" "+e._s(e.$t("home").getCar.individuals.title)+" ")]),a("div",{staticClass:"car-learn"},[e._v(" "+e._s(e.$t("home").getCar.individuals.bnt)+" ")])]),a("div",{staticClass:"car"},[a("div",[a("v-img",{staticClass:"car-logo",attrs:{src:n("d70e")}})],1),a("div",{staticClass:"car-title"},[e._v(" "+e._s(e.$t("home").getCar.businesses.title)+" ")]),a("div",{staticClass:"car-learn"},[e._v(" "+e._s(e.$t("home").getCar.businesses.bnt)+" ")])])]),a("div",{staticClass:"car"},[a("div",[a("v-img",{staticClass:"car-logo",attrs:{src:n("d6a2")}})],1),a("div",{staticClass:"car-title"},[e._v(" "+e._s(e.$t("home").getCar.developers.title)+" ")]),a("div",{staticClass:"car-learn"},[e._v(" "+e._s(e.$t("home").getCar.developers.bnt)+" ")])])])])])],1),a("div",{staticClass:"get"},[a("div",{staticClass:"subject btcPi-width"},[a("div",{staticClass:"get-title"},[e._v(e._s(e.$t("home").getIntroduce.title))]),a("div",{staticClass:"get-subject"},[a("div",{staticClass:"mo"},[a("div",{staticClass:"get-right "},[a("div",{staticClass:"get-img"},[a("v-img",{staticClass:"get-img",attrs:{src:n("4f6a")}})],1)])]),a("div",{staticClass:"get-left"},[a("div",{staticClass:"get-text"},[e._v(" "+e._s(e.$t("home").getIntroduce.text)+" ")]),a("div",{staticClass:"get-list"},[a("div",{staticClass:"get-list-subject"},[a("v-img",{staticClass:"get-list-icon",attrs:{src:n("39ec")}}),a("div",[e._v(e._s(e.$t("home").getIntroduce.list[0]))])],1),a("div",{staticClass:"get-list-subject"},[a("v-img",{staticClass:"get-list-icon",attrs:{src:n("ef1c")}}),a("div",[e._v(e._s(e.$t("home").getIntroduce.list[1]))])],1),a("div",{staticClass:"get-list-subject"},[a("v-img",{staticClass:"get-list-icon",attrs:{src:n("89df")}}),a("div",[e._v(e._s(e.$t("home").getIntroduce.list[2]))])],1)])]),a("div",{staticClass:"pc"},[a("div",{staticClass:"get-right"},[a("div",{staticClass:"get-img"},[a("v-img",{staticClass:"get-img",attrs:{src:n("bac9")}})],1)])])]),a("v-btn",{staticClass:"git-bnt",attrs:{elevation:"0",color:""},on:{click:function(t){return e.$router.push("/mine")}}},[e._v(e._s(e.$t("home").getIntroduce.bnt))])],1)]),a("div",{staticClass:"partners"},[a("div",{staticClass:"subject btcPi-width"},[a("div",{staticClass:"partners-subject"},[a("div",{staticClass:"partners-title"},[e._v(e._s(e.$t("home").partners.title))]),a("div",{staticClass:"partners-text"},[e._v(e._s(e.$t("home").partners.text))])]),a("div",{staticClass:"partners-car-subject"},[e._l(e.partners,(function(t,n){return a("div",{key:n,staticClass:"partners-car-i pc",on:{click:function(n){return e.openUrl(t.link)}}},[a("v-img",{attrs:{src:t.picture,width:"100%",height:"fit-content"}})],1)})),e._l(e.partnersMo,(function(t,n){return a("div",{key:n,staticClass:"partners-car-i mo",on:{click:function(n){return e.openUrl(t.link)}}},[a("v-img",{attrs:{src:t.picture,width:"100%",height:"fit-content"}})],1)}))],2)])])])},H=[],X=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"animation"}})},Y=[],J=n("94f1"),Z=n.n(J),Q=n("7b3b"),K={name:"getAnimation",components:{},data:function(){return{defaultOptions:{animationData:Q},animationSpeed:1,anim:{}}},mounted:function(){this.svgFun()},methods:{svgFun:function(){var e={container:document.getElementById("animation"),renderer:"svg",loop:!0,autoplay:!0,animationData:Q};Z.a.loadAnimation(e)}}},ee=K,te=Object(m["a"])(ee,X,Y,!1,null,null,null),ne=te.exports,ae={name:"Home",data:function(){return{addmu:0,btcpiBuntton:[],btcpiBunttonList:[],partners:[],partnersMo:[],partnersNumber:15}},components:{getAnimation:ne},computed:Object(s["a"])({},Object(b["d"])(["urls"])),mounted:function(){var e=this;this.getBtcpiBuntton(),this.getBtcpiBunttonList(),this.getPartners(),this.getPartnersMo();var t=document.documentElement.clientWidth;t=document.documentElement.clientWidth;t>1200&&(this.addmu=0),t<1200&&(this.addmu=15),t<950&&(this.addmu=15),t<800&&(this.addmu=14),t<600&&(this.addmu=10),this.$nextTick((function(){window.onresize=function(){return function(){setTimeout((function(){var t=document.documentElement.clientWidth;t>1200&&(e.addmu=0),t<1200&&(e.addmu=15),t<950&&(e.addmu=15),t<800&&(e.addmu=14),t<600&&(e.addmu=10)}),100)}()}}))},methods:{plusXing:function(e,t){return 0==t?e:e.substring(0,t)+"...."+e.substring(e.length-t)},onCopy:function(e){var t=this;this.$store.commit("updatealert",{status:!0,text:this.$t("alert").home.copySuccess,type:"success"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)},openUrl:function(e){window.open(e,"_blank")},getBtcpiBuntton:function(){var e=this;u.a.get("/json/getBtcpiBuntton.json",{}).then((function(t){e.btcpiBuntton=t.data})).catch((function(e){}))},getBtcpiBunttonList:function(){var e=this;u.a.get("/json/getBtcpiBunttonList.json",{}).then((function(t){e.btcpiBunttonList=t.data})).catch((function(e){}))},getPartners:function(){var e=this;u.a.get("/json/getPartners.json",{}).then((function(t){e.partners=t.data})).catch((function(e){}))},getPartnersMo:function(){var e=this;u.a.get("/json/getPartnersMo.json",{}).then((function(t){e.partnersMo=t.data})).catch((function(e){}))}}},re=ae,ie=(n("8405"),n("8860")),se=n("da13"),oe=n("5d23"),ce=n("e449"),de=Object(m["a"])(re,W,H,!1,null,"06d549c4",null),le=de.exports;h()(de,{VBtn:k["a"],VImg:x["a"],VList:ie["a"],VListItem:se["a"],VListItemTitle:oe["b"],VMenu:ce["a"]});var ue=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"presale"},[a("div",{staticClass:"presale-subject"},[a("presaleAnimation",{staticClass:"presaleAnimation"}),a("div",{staticClass:"btcPi-width subject"},[0==e.receiveTimeStatus?a("div",{staticClass:"presale-title"},[e._v(" "+e._s(e.$t("top").presale)+" ")]):e._e(),1==e.receiveTimeStatus?a("div",{staticClass:"presale-title"},[e._v(" "+e._s(e.$t("presale").presaleEnd)+" ")]):e._e(),0==e.receiveTimeStatus?a("div",[a("div",{staticClass:"presale-text"},[e._v(e._s(e.$t("presale").presaleCountdown))]),a("countdown",{attrs:{endTime:Number(e.receiveTime+"000")}})],1):e._e()])],1),a("div",{staticClass:"presale-purchase"},[a("div",{staticClass:"btcPi-width subject"},[a("div",{staticClass:"car"},[a("div",{staticClass:"car-top p-l-r"},[a("div",{staticClass:"left"},[a("div",{staticClass:"car-title"},[e._v(" "+e._s(e.$t("presale").yourExchangeAmount)+" ")]),a("div",{staticClass:"car-progress"},[a("div",{staticClass:"car-strong",style:{width:e.spacePiProgress+"%",background:"linear-gradient(90deg, #8349A8 0%, #439CFC 100%)"}},[e._v(" "+e._s(e.spacePiProgress)+"% ")])])]),a("div",{staticClass:"right"},[a("v-img",{staticClass:"space-pi-logo",attrs:{src:n("1315")}})],1)]),!1===e.receiveTimeStatus?a("div",{staticClass:"car-balance p-l-r"},[a("div",{staticClass:"balance-title"},[e._v(" "+e._s(e.$t("public").balance)+"："+e._s(e.semicolon(e.balance[0]))+" ")]),a("div",[a("div",{staticClass:"balance-input"},[a("div",{staticClass:"left"},[a("input",{directives:[{name:"model",rawName:"v-model",value:e.buyinputspacepi,expression:"buyinputspacepi"}],staticClass:"balance-input-s",attrs:{placeholder:"0.000",maxlength:18,min:e.pool[0][5],max:e.pool[0][4]},domProps:{value:e.buyinputspacepi},on:{keyup:e.getSpacePiInput,input:function(t){t.target.composing||(e.buyinputspacepi=t.target.value)}}})]),a("div",{staticClass:"right"},[a("div",{staticClass:"balance-input-title"},[e._v(" "+e._s(e.$t("currency").spacePi)+" ")]),a("v-btn",{staticClass:"input-max",attrs:{elevation:"0",color:"#8248A6"},on:{click:function(t){return e.getBalanceMax(0)}}},[e._v(e._s(e.$t("public").max))])],1)])])]):e._e(),!0===e.receiveTimeStatus?a("div",{staticClass:"my-presales-end p-l-r"},[a("div",{staticClass:"my-presales-end-subject"},[a("div",{staticClass:"my-presales-title"},[e._v(e._s(e.$t("presale").myPresale))]),a("div",{staticClass:"my-presales-car"},[a("div",{staticClass:"car-title",staticStyle:{"font-weight":"bold"}},[e._v(e._s(e.semicolon(e.presalenum[0])))]),a("div",{staticClass:"car-text"},[e._v(e._s(e.$t("currency").spacePi))])]),a("div",{staticClass:"my-presales-car"},[a("div",{staticClass:"car-title",staticStyle:{"font-weight":"bold"}},[e._v(e._s(e.semicolon(e.presalenumtoken[0])))]),a("div",{staticClass:"car-text"},[e._v(e._s(e.$t("currency").btcPi))])])])]):e._e(),a("div",{staticClass:"car-buy p-l-r"},[""===e.walletAddress?a("v-btn",{staticClass:"connect",staticStyle:{background:"linear-gradient(180deg, #8549A9 0%, #603F8B 100%)"},attrs:{elevation:"0",color:""},on:{click:e.connect}},[e._v(" "+e._s(e.$t("public").connect)+" ")]):e._e(),a("div",{staticClass:"buy-subject"},[""!==e.walletAddress&&!0===e.receiveTimeStatus?a("v-btn",{staticClass:"connect",style:{background:0===e.receivestatus?"linear-gradient(180deg, #8A9AC2 0%, #636E88 100%)":"linear-gradient(180deg, #46A4FC 0%, #5C44FD 100%)"},attrs:{elevation:"0",color:"",disabled:0===e.receivestatus},on:{click:function(t){return e.withdraw(0)}}},[e._v(e._s(0===e.presalenumtoken[0]?e.$t("public").is_receive:e.$t("public").receive))]):e._e(),""!==e.walletAddress&&"0"!==e.allowance[0]&&!1===e.receiveTimeStatus?a("v-btn",{staticClass:"connect",style:{background:e.receiveTimeStatus?" linear-gradient(180deg, #8A9AC2 0%, #636E88 100%)":"linear-gradient(180deg, #8549A9 0%, #603F8B 100%)"},attrs:{elevation:"0",color:"",disabled:!!e.receiveTimeStatus},on:{click:function(t){return e.buy(0)}}},[e._v(e._s(e.$t("public").buy)+" "+e._s(e.$t("currency").btcPi))]):e._e()],1)],1),!1===e.receiveTimeStatus?a("div",{staticClass:"my-presales p-l-r"},[a("div",{staticClass:"my"},[a("div",{staticClass:"left"},[e._v(e._s(e.$t("presale").myPresale))]),a("div",{staticClass:"right"},[a("div",{staticStyle:{"font-weight":"bold"}},[e._v(e._s(e.semicolon(e.presalenum[0])))]),a("div",[e._v(e._s(e.$t("currency").spacePi))])])]),a("div",{staticClass:"my"},[a("div",{staticClass:"left"},[e._v(e._s(e.$t("public").my)+e._s(e.$t("currency").btcPi))]),a("div",{staticClass:"right"},[a("div",{staticStyle:{"font-weight":"bold"}},[e._v(e._s(e.semicolon(e.presalenumtoken[0])))]),a("div",[e._v(e._s(e.$t("currency").btcPi))])])])]):e._e(),a("v-divider",{staticStyle:{background:"#8a9ac2",height:"1px",opacity:"0.2"}}),a("div",{staticClass:"exchange-explain p-l-r"},[a("div",{staticClass:"exchange-car"},[a("span",{staticClass:"left",staticStyle:{color:"#8148a6"}},[e._v(e._s(e.$t("public").min)+":")]),a("span",{staticClass:"right"},[e._v(e._s(e.semicolon(e.pool[0][5]))+" "+e._s(e.$t("currency").spacePi))])]),a("div",{staticClass:"exchange-car"},[a("span",{staticClass:"left",staticStyle:{color:"#8148a6"}},[e._v(e._s(e.$t("public").max)+":")]),a("span",{staticClass:"right"},[e._v(e._s(e.semicolon(e.pool[0][4]))+" "+e._s(e.$t("currency").spacePi))])]),a("div",{staticClass:"exchange-car"},[a("span",{staticClass:"left",staticStyle:{color:"#8148a6"}},[e._v(e._s(e.$t("presale").exchangeRatio)+":")]),a("span",{staticClass:"right"},[e._v("1 "+e._s(e.$t("currency").spacePi)+"="+e._s(e.pool[0][3])+" "+e._s(e.$t("currency").btcPi))])])]),a("div",{staticClass:"buy-explain p-l-r"},[e._v(" "+e._s(e.$t("presale").buyExplain)+" ")])],1),a("div",{staticClass:"car-mobile"},[a("div",{staticClass:"car-subject"},[a("v-img",{staticClass:"space-pi-logo",attrs:{src:n("1315")}}),a("div",{staticClass:"car-title"},[e._v(e._s(e.$t("presale").yourExchangeAmount))]),a("div",{staticClass:"car-progress"},[a("div",{staticClass:"car-strong",style:{width:e.spacePiProgress+"%",background:"linear-gradient(90deg, #8349A8 0%, #439CFC 100%)"}},[e._v(" "+e._s(e.spacePiProgress)+"% ")])]),a("div",{staticClass:"car-input"},[!1===e.receiveTimeStatus?a("div",{staticClass:"balance-input"},[a("div",{staticClass:"left"},[a("input",{directives:[{name:"model",rawName:"v-model",value:e.buyinputspacepi,expression:"buyinputspacepi"}],staticClass:"balance-input-s",attrs:{placeholder:"0.000",maxlength:18,min:e.pool[0][5],max:e.pool[0][4]},domProps:{value:e.buyinputspacepi},on:{keyup:e.getSpacePiInput,input:function(t){t.target.composing||(e.buyinputspacepi=t.target.value)}}})]),a("div",{staticClass:"right"},[a("div",{staticClass:"balance-input-title",staticStyle:{color:"#8349a8"}},[e._v(" "+e._s(e.$t("currency").spacePi)+" ")]),a("v-btn",{staticClass:"input-max",attrs:{elevation:"0",color:"#8248A6",outlined:""},on:{click:function(t){return e.getBalanceMax(0)}}},[e._v(e._s(e.$t("public").max))])],1)]):e._e(),!0===e.receiveTimeStatus?a("div",{staticClass:"car-subject"},[a("div",{staticClass:"car-title"},[e._v(e._s(e.$t("presale").myPresale))]),a("div",{staticClass:"car-my-presales"},[a("div",{staticClass:"my-presales-title"},[e._v(e._s(e.semicolon(e.presalenum[0])))]),a("div",{staticClass:"my-presales-text"},[e._v(e._s(e.$t("currency").spacePi))])]),a("div",{staticClass:"car-my-presales"},[a("div",{staticClass:"my-presales-title"},[e._v(e._s(e.semicolon(e.presalenumtoken[0])))]),a("div",{staticClass:"my-presales-text"},[e._v(e._s(e.$t("currency").btcPi))])])]):e._e(),a("div",{staticClass:"buy-explain"},[e._v(" "+e._s(e.$t("presale").buyExplain)+" ")])]),!1===e.receiveTimeStatus?a("div",{staticClass:"balance-title",staticStyle:{color:"#8349a8"}},[e._v(" "+e._s(e.$t("public").balance)+"："+e._s(e.semicolon(e.balance[0]))+" ")]):e._e(),a("div",{staticClass:"car-buy"},[""===e.walletAddress?a("v-btn",{staticClass:"connect",staticStyle:{background:"linear-gradient(180deg, #8549A9 0%, #603F8B 100%)"},attrs:{elevation:"0",color:""},on:{click:e.connect}},[e._v(e._s(e.$t("public").connect))]):e._e(),""!==e.walletAddress&&!0===e.receiveTimeStatus?a("v-btn",{staticClass:"connect",style:{background:0===e.receivestatus?"linear-gradient(180deg, #8A9AC2 0%, #636E88 100%)":"linear-gradient(180deg, #46A4FC 0%, #5C44FD 100%)"},attrs:{elevation:"0",color:"",disabled:0===e.receivestatus},on:{click:function(t){return e.withdraw(0)}}},[e._v(e._s(0===e.presalenumtoken[0]?e.$t("public").is_receive:e.$t("public").receive))]):e._e(),""!==e.walletAddress&&"0"!==e.allowance[0]&&!1===e.receiveTimeStatus?a("v-btn",{staticClass:"connect",style:{background:e.receiveTimeStatus?" linear-gradient(180deg, #8A9AC2 0%, #636E88 100%)":"linear-gradient(180deg, #8549A9 0%, #603F8B 100%)"},attrs:{elevation:"0",color:"",disabled:!!e.receiveTimeStatus},on:{click:function(t){return e.buy(0)}}},[e._v(e._s(e.$t("public").buy)+" "+e._s(e.$t("currency").btcPi))]):e._e()],1)],1),a("div",{staticClass:"my-presales"},[!1===e.receiveTimeStatus?a("div",{staticClass:"my-presales-title"},[e._v(e._s(e.$t("presale").myPresale))]):e._e(),!1===e.receiveTimeStatus?a("div",{staticClass:"my-presales-car"},[a("div",{staticClass:"my-a"},[a("div",{staticClass:"my-presales-s"},[e._v(e._s(e.semicolon(e.presalenum[0])))]),a("div",{staticClass:"my-presales-text"},[e._v(e._s(e.$t("currency").spacePi))])]),a("div",{staticClass:"my-a"},[a("div",{staticClass:"my-presales-s"},[e._v(e._s(e.semicolon(e.presalenumtoken[0])))]),a("div",{staticClass:"my-presales-text"},[e._v(e._s(e.$t("currency").btcPi))])])]):e._e(),a("div",{staticClass:"exchange-explain"},[a("div",{staticClass:"exchange-car"},[a("span",{staticClass:"left",staticStyle:{color:"#8148a6"}},[e._v(e._s(e.$t("public").min)+":")]),a("span",{staticClass:"right"},[e._v(e._s(e.semicolon(e.pool[0][5]))+" "+e._s(e.$t("currency").spacePi))])]),a("div",{staticClass:"exchange-car"},[a("span",{staticClass:"left",staticStyle:{color:"#8148a6"}},[e._v(e._s(e.$t("public").max)+":")]),a("span",{staticClass:"right"},[e._v(e._s(e.semicolon(e.pool[0][4]))+" "+e._s(e.$t("currency").spacePi))])]),a("div",{staticClass:"exchange-car"},[a("span",{staticClass:"left",staticStyle:{color:"#8148a6"}},[e._v(e._s(e.$t("presale").exchangeRatio)+":")]),a("span",{staticClass:"right"},[e._v("1 "+e._s(e.$t("currency").spacePi)+"="+e._s(e.pool[0][3])+" "+e._s(e.$t("currency").btcPi))])])])])]),a("div",{staticClass:"car"},[a("div",{staticClass:"car-top p-l-r"},[a("div",{staticClass:"left"},[a("div",{staticClass:"car-title"},[e._v(" "+e._s(e.$t("presale").yourExchangeAmount)+" ")]),a("div",{staticClass:"car-progress"},[a("div",{staticClass:"car-strong",style:{width:e.usdProgress+"%",background:"linear-gradient(90deg, #26A17B 0%, #439CFC 100%)"}},[e._v(" "+e._s(e.usdProgress)+"% ")])])]),a("div",{staticClass:"right"},[a("v-img",{staticClass:"space-pi-logo",attrs:{src:n("f6c8")}})],1)]),!1===e.receiveTimeStatus?a("div",{staticClass:"car-balance p-l-r"},[a("div",{staticClass:"balance-title"},[e._v(" "+e._s(e.$t("public").balance)+"："+e._s(e.balance[1])+" ")]),a("div",[a("div",{staticClass:"balance-input"},[a("div",{staticClass:"left"},[a("input",{directives:[{name:"model",rawName:"v-model",value:e.buyinputusdt,expression:"buyinputusdt"}],staticClass:"balance-input-s",attrs:{placeholder:"0.000",maxlength:18,min:e.pool[1][5],max:e.pool[1][4]},domProps:{value:e.buyinputusdt},on:{keyup:e.getUsdtInput,input:function(t){t.target.composing||(e.buyinputusdt=t.target.value)}}})]),a("div",{staticClass:"right"},[a("div",{staticClass:"balance-input-title"},[e._v(" "+e._s(e.$t("currency").usdt)+" ")]),a("v-btn",{staticClass:"input-max",attrs:{elevation:"0",color:"#26A17B"},on:{click:function(t){return e.getBalanceMax(1)}}},[e._v(e._s(e.$t("public").max))])],1)])])]):e._e(),!0===e.receiveTimeStatus?a("div",{staticClass:"my-presales-end p-l-r"},[a("div",{staticClass:"my-presales-end-subject"},[a("div",{staticClass:"my-presales-title"},[e._v(e._s(e.$t("presale").myPresale))]),a("div",{staticClass:"my-presales-car"},[a("div",{staticClass:"car-title",staticStyle:{"font-weight":"bold"}},[e._v(e._s(e.semicolon(e.presalenum[1])))]),a("div",{staticClass:"car-text"},[e._v(e._s(e.$t("currency").usdt))])]),a("div",{staticClass:"my-presales-car"},[a("div",{staticClass:"car-title",staticStyle:{"font-weight":"bold"}},[e._v(e._s(e.semicolon(e.presalenumtoken[1])))]),a("div",{staticClass:"car-text"},[e._v(e._s(e.$t("currency").btcPi))])])])]):e._e(),a("div",{staticClass:"car-buy p-l-r"},[""===e.walletAddress?a("v-btn",{staticClass:"connect",staticStyle:{background:"linear-gradient(180deg, #83D356 0%, #26A17B 100%)"},attrs:{elevation:"0",color:""},on:{click:e.connect}},[e._v(e._s(e.$t("public").connect))]):e._e(),a("div",{staticClass:"buy-subject"},[""!==e.walletAddress&&!0===e.receiveTimeStatus?a("v-btn",{staticClass:"connect",style:{background:0===e.receivestatus?"linear-gradient(180deg, #8A9AC2 0%, #636E88 100%)":"linear-gradient(180deg, #46A4FC 0%, #5C44FD 100%)"},attrs:{elevation:"0",color:"",disabled:0===e.receivestatus},on:{click:function(t){return e.withdraw(1)}}},[e._v(e._s(0===e.presalenumtoken[1]?e.$t("public").is_receive:e.$t("public").receive))]):e._e(),""!==e.walletAddress&&"0"!==e.allowance[1]&&!1===e.receiveTimeStatus?a("v-btn",{staticClass:"connect",style:{background:e.receiveTimeStatus?" linear-gradient(180deg, #8A9AC2 0%, #636E88 100%)":" linear-gradient(180deg, #83D356 0%, #26A17B 100%)"},attrs:{elevation:"0",color:"",disabled:!!e.receiveTimeStatus},on:{click:function(t){return e.buy(1)}}},[e._v(e._s(e.$t("public").buy)+" "+e._s(e.$t("currency").btcPi))]):e._e()],1)],1),!1===e.receiveTimeStatus?a("div",{staticClass:"my-presales p-l-r"},[a("div",{staticClass:"my"},[a("div",{staticClass:"left"},[e._v(e._s(e.$t("presale").myPresale))]),a("div",{staticClass:"right"},[a("div",{staticStyle:{"font-weight":"bold"}},[e._v(e._s(e.presalenum[1]))]),a("div",[e._v(e._s(e.$t("currency").usdt))])])]),a("div",{staticClass:"my"},[a("div",{staticClass:"left"},[e._v(e._s(e.$t("public").my)+e._s(e.$t("currency").btcPi))]),a("div",{staticClass:"right"},[a("div",{staticStyle:{"font-weight":"bold"}},[e._v(e._s(e.semicolon(e.presalenumtoken[1])))]),a("div",[e._v(e._s(e.$t("currency").btcPi))])])])]):e._e(),a("v-divider",{staticStyle:{background:"#8a9ac2",height:"1px",opacity:"0.2"}}),a("div",{staticClass:"exchange-explain p-l-r"},[a("div",{staticClass:"exchange-car"},[a("span",{staticClass:"left",staticStyle:{color:"#26a17b"}},[e._v(e._s(e.$t("public").min)+":")]),a("span",{staticClass:"right"},[e._v(e._s(e.pool[1][5])+" "+e._s(e.$t("currency").usdt))])]),a("div",{staticClass:"exchange-car"},[a("span",{staticClass:"left",staticStyle:{color:"#26a17b"}},[e._v(e._s(e.$t("public").max)+":")]),a("span",{staticClass:"right"},[e._v(e._s(e.pool[1][4])+" "+e._s(e.$t("currency").usdt))])]),a("div",{staticClass:"exchange-car"},[a("span",{staticClass:"left",staticStyle:{color:"#26a17b"}},[e._v(e._s(e.$t("presale").exchangeRatio)+":")]),a("span",{staticClass:"right"},[e._v("1 "+e._s(e.$t("currency").usdt)+"="+e._s(e.pool[1][3])+" "+e._s(e.$t("currency").btcPi))])])]),a("div",{staticClass:"buy-explain p-l-r"},[e._v(" "+e._s(e.$t("presale").buyExplain)+" ")])],1),a("div",{staticClass:"car-mobile"},[a("div",{staticClass:"car-subject"},[a("v-img",{staticClass:"space-pi-logo",attrs:{src:n("f6c8")}}),a("div",{staticClass:"car-title"},[e._v(e._s(e.$t("presale").yourExchangeAmount))]),a("div",{staticClass:"car-progress"},[a("div",{staticClass:"car-strong",style:{width:e.usdProgress+"%",background:"linear-gradient(90deg, #26A17B 0%, #439CFC 100%)"}},[e._v(" "+e._s(e.usdProgress)+"% ")])]),a("div",{staticClass:"car-input"},[!1===e.receiveTimeStatus?a("div",{staticClass:"balance-input"},[a("div",{staticClass:"left"},[a("input",{directives:[{name:"model",rawName:"v-model",value:e.buyinputusdt,expression:"buyinputusdt"}],staticClass:"balance-input-s",attrs:{placeholder:"0.000",maxlength:18,min:e.pool[0][5],max:e.pool[0][4]},domProps:{value:e.buyinputusdt},on:{keyup:e.getUsdtInput,input:function(t){t.target.composing||(e.buyinputusdt=t.target.value)}}})]),a("div",{staticClass:"right"},[a("div",{staticClass:"balance-input-title",staticStyle:{color:"#26a17b"}},[e._v(" "+e._s(e.$t("currency").usdt)+" ")]),a("v-btn",{staticClass:"input-max",attrs:{elevation:"0",color:"#26A17B",outlined:""},on:{click:function(t){return e.getBalanceMax(1)}}},[e._v(e._s(e.$t("public").max))])],1)]):e._e(),!0===e.receiveTimeStatus?a("div",{staticClass:"car-subject"},[a("div",{staticClass:"car-title"},[e._v(e._s(e.$t("presale").myPresale))]),a("div",{staticClass:"car-my-presales"},[a("div",{staticClass:"my-presales-title"},[e._v(e._s(e.semicolon(e.presalenum[1])))]),a("div",{staticClass:"my-presales-text"},[e._v(e._s(e.$t("currency").usdt))])]),a("div",{staticClass:"car-my-presales"},[a("div",{staticClass:"my-presales-title"},[e._v(e._s(e.semicolon(e.presalenumtoken[1])))]),a("div",{staticClass:"my-presales-text"},[e._v(e._s(e.$t("currency").btcPi))])])]):e._e(),a("div",{staticClass:"buy-explain"},[e._v(" "+e._s(e.$t("presale").buyExplain)+" ")])]),!1===e.receiveTimeStatus?a("div",{staticClass:"balance-title",staticStyle:{color:"#26a17b"}},[e._v(" "+e._s(e.$t("public").balance)+"："+e._s(e.balance[1])+" ")]):e._e(),a("div",{staticClass:"car-buy"},[""===e.walletAddress?a("v-btn",{staticClass:"connect",staticStyle:{background:"linear-gradient(180deg, #83D356 0%, #26A17B 100%)"},attrs:{elevation:"0",color:""},on:{click:e.connect}},[e._v(e._s(e.$t("public").connect))]):e._e(),""!==e.walletAddress&&!0===e.receiveTimeStatus?a("v-btn",{staticClass:"connect",style:{background:0===e.receivestatus?"linear-gradient(180deg, #8A9AC2 0%, #636E88 100%)":"linear-gradient(180deg, #46A4FC 0%, #5C44FD 100%)"},attrs:{elevation:"0",color:"",disabled:0===e.receivestatus},on:{click:function(t){return e.withdraw(1)}}},[e._v(e._s(0===e.presalenumtoken[1]?e.$t("public").is_receive:e.$t("public").receive))]):e._e(),""!==e.walletAddress&&"0"!==e.allowance[1]&&!1===e.receiveTimeStatus?a("v-btn",{staticClass:"connect",style:{background:e.receiveTimeStatus?" linear-gradient(180deg, #8A9AC2 0%, #636E88 100%)":" linear-gradient(180deg, #83D356 0%, #26A17B 100%)"},attrs:{elevation:"0",color:"",disabled:!!e.receiveTimeStatus},on:{click:function(t){return e.buy(1)}}},[e._v(e._s(e.$t("public").buy)+" "+e._s(e.$t("currency").btcPi))]):e._e()],1)],1),a("div",{staticClass:"my-presales"},[!1===e.receiveTimeStatus?a("div",{staticClass:"my-presales-title"},[e._v(e._s(e.$t("presale").myPresale))]):e._e(),!1===e.receiveTimeStatus?a("div",{staticClass:"my-presales-car"},[a("div",{staticClass:"my-a"},[a("div",{staticClass:"my-presales-s"},[e._v(e._s(e.presalenum[1]))]),a("div",{staticClass:"my-presales-text"},[e._v(e._s(e.$t("currency").usdt))])]),a("div",{staticClass:"my-a"},[a("div",{staticClass:"my-presales-s"},[e._v(e._s(e.semicolon(e.presalenumtoken[1])))]),a("div",{staticClass:"my-presales-text"},[e._v(e._s(e.$t("currency").btcPi))])]),""!==e.walletAddress&&1==e.endTimeStatus&&1==e.receiveTimeStatus?a("v-btn",{staticClass:"receive",style:{background:0===e.receivestatus?"#000000":""},attrs:{disabled:0===e.receivestatus},on:{click:function(t){return e.withdraw(1)}}},[e._v(e._s(0===e.presalenumtoken[1]?e.$t("public").is_receive:e.$t("public").receive)+" ")]):e._e()],1):e._e(),a("div",{staticClass:"exchange-explain"},[a("div",{staticClass:"exchange-car"},[a("span",{staticClass:"left",staticStyle:{color:"#26a17b"}},[e._v(e._s(e.$t("public").min)+":")]),a("span",{staticClass:"right"},[e._v(e._s(e.pool[1][5])+" "+e._s(e.$t("currency").usdt))])]),a("div",{staticClass:"exchange-car"},[a("span",{staticClass:"left",staticStyle:{color:"#26a17b"}},[e._v(e._s(e.$t("public").max)+":")]),a("span",{staticClass:"right"},[e._v(e._s(e.pool[1][4])+" "+e._s(e.$t("currency").usdt))])]),a("div",{staticClass:"exchange-car"},[a("span",{staticClass:"left",staticStyle:{color:"#26a17b"}},[e._v(e._s(e.$t("presale").exchangeRatio)+":")]),a("span",{staticClass:"right"},[e._v("1 "+e._s(e.$t("currency").usdt)+"="+e._s(e.pool[1][3])+" "+e._s(e.$t("currency").btcPi))])])])])])])]),a("div",{staticClass:"presale-end",staticStyle:{display:"none"}},[a("div",{staticClass:"btcPi-width"},[a("div",{staticClass:"subject"},[a("div",{staticClass:"p-l-r subject-top"},[a("div",{staticClass:"logo-s"},[a("v-img",{staticClass:"logo",attrs:{src:n("1315")}}),a("v-img",{staticClass:"logo",attrs:{src:n("f6c8")}})],1),e._m(0)]),a("div",{staticClass:"p-l-r"},[a("div",{staticClass:"subject-car"},[a("div",{staticClass:"l"},[e._v("GET")]),a("div",{staticClass:"c"},[e._v(e._s(e.presalenum))]),a("div",{staticClass:"r"},[e._v("BTCPI")])]),a("div",{staticClass:"subject-connect"},[""===e.walletAddress?a("v-btn",{staticClass:"connect-Wallet",staticStyle:{background:"linear-gradient(180deg, #3772ff 0%, #5a4bfd 100%)"},attrs:{elevation:"0"},on:{click:e.connect}},[e._v("Connect Wallet")]):e._e(),""!==e.walletAddress?a("v-btn",{staticClass:"connect-Wallet",staticStyle:{background:"linear-gradient(180deg, #3772ff 0%, #5a4bfd 100%)"},attrs:{elevation:"0"},on:{click:e.disconnect}},[e._v("断开钱包")]):e._e(),a("v-btn",{staticClass:"connect-Wallet",attrs:{elevation:"0",color:"#3772FF",outlined:""},on:{click:e.Receive}},[e._v("Receive")])],1)]),a("v-divider",{staticClass:"top-line",staticStyle:{background:"rgba(48, 49, 64, 0.9)",opacity:"0.2"}}),a("div",{staticClass:"p-l-r"},[a("div",{staticClass:"subject-s"},[a("div",{staticClass:"subject-s-a"},[a("div",{staticClass:"subject-s-car"},[a("div",{staticClass:"subject-title",staticStyle:{color:"#663d8b"}},[e._v(" SPACEPI ")]),a("div",{staticClass:"subject-text",staticStyle:{color:"#663d8b"}},[e._v(" "+e._s(e.presalenum[0])+" ")])]),a("div",{staticClass:"subject-illustrate"},[a("div",{staticClass:"l"},[e._v("Exchange ratio：")]),a("div",{staticClass:"r"},[e._v("1 SPACEPI="+e._s(e.pool[0][3])+" BTCPI")])])]),a("div",{staticClass:"subject-line"},[a("v-divider",{staticStyle:{background:"rgba(48, 49, 64, 0.9)",opacity:"0.2"},attrs:{vertical:""}})],1),a("div",{staticClass:"subject-s-a"},[a("div",{staticClass:"subject-s-car"},[a("div",{staticClass:"subject-title",staticStyle:{color:"#26a17b"}},[e._v("USDT")]),a("div",{staticClass:"subject-text",staticStyle:{color:"#26a17b"}},[e._v(" "+e._s(e.presalenum[1])+" ")])]),a("div",{staticClass:"subject-illustrate"},[a("div",{staticClass:"l"},[e._v("Exchange ratio：")]),a("div",{staticClass:"r"},[e._v("1 USDT="+e._s(e.pool[1][3])+" BTCPI")])])])])])],1)])]),a("div",{staticClass:"Presale-rule"},[a("div",{staticClass:"btcPi-width subject"},[a("div",{staticClass:"Presale-title"},[e._v(e._s(e.$t("presale").presaleRule.title))]),a("div",{staticClass:"Presale-text"},e._l(e.$t("presale").presaleRule.text,(function(t,n){return a("div",{key:n},[e._v(" "+e._s(t)+" ")])})),0)])])])},be=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("div",{staticClass:"subject-title"},[e._v("Your exchange amount")]),n("div",{staticClass:"subject-text"},[e._v("Your exchange amount")])])}],fe=(n("a9e3"),n("d3b7"),n("25f0"),n("b680"),n("1276"),n("5319"),n("b65f"),n("d81d"),n("a15b"),n("99e5")),pe=new fe(window.ethereum),me=(pe.eth.getAccounts(),{PresaleAbi:n("c92b"),SpacePiAbi:n("90d7"),USDTAbi:n("175e"),BtcPiAbi:n("7f67"),spaceStationAbi:n("5835"),MineStakeAbi:n("70b1")});function ye(e){var t=e.abi,n=e.address;void 0===window.ethereum&&pe.setProvider(new pe.providers.HttpProvider("https://nodes.pancakeswap.com/"));var a=new pe.eth.Contract(t,n);return{contractObject:a,address:n}}function he(e){void 0===window.ethereum&&pe.setProvider(new pe.providers.HttpProvider("https://nodes.pancakeswap.com/"));var t=new pe.eth.Contract(me.BtcPiAbi.abi,e);return t}var ve=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("span",{staticClass:"countdown",attrs:{endTime:e.endTime,endText:e.endText}},[e._t("default",(function(){return[n("div",{staticClass:"countdown-car"},[e._v(e._s(e.day))]),n("div",{staticClass:"countdown-fillet"},[e._v(":")]),n("div",{staticClass:"countdown-car"},[e._v(e._s(e.hour))]),n("div",{staticClass:"countdown-fillet"},[e._v(":")]),n("div",{staticClass:"countdown-car"},[e._v(e._s(e.min))]),n("div",{staticClass:"countdown-fillet"},[e._v(":")]),n("div",{staticClass:"countdown-car"},[e._v(e._s(e.sec))])]}))],2)},ke=[],xe=n("d0ff"),ge=(n("99af"),{name:"countdown",data:function(){return{content:"",day:"?",hour:"?",min:"?",sec:"?"}},props:{endTime:{type:Number,default:""},endText:{type:String,default:"?:?:?:?"}},mounted:function(){this.countdowm(this.endTime/1e3)},methods:{countdowm:function(e){var t=this,n=setInterval((function(){var a=new Date,r=new Date(1e3*e),i=r.getTime()-a.getTime();if(i>0){var s=Math.floor(i/864e5),o=Math.floor(i/36e5%24),c=Math.floor(i/6e4%60),d=Math.floor(i/1e3%60);o=o<10?"0"+o:o,c=c<10?"0"+c:c,d=d<10?"0"+d:d;var l="";s>0&&(l="".concat(s," : ").concat(o," : ").concat(c," : ").concat(d)),s<=0&&o>0&&(l="".concat(o," : ").concat(c," : ").concat(d)),s<=0&&o<=0&&(l="".concat(c," : ").concat(d)),t.day="".concat(s),t.hour="".concat(o),t.min="".concat(c),t.sec="".concat(d),t.content=l}else clearInterval(n),t.content=t.endText,t._callback()}),1e3)},_callback:function(){this.callback&&this.callback instanceof Function&&this.callback.apply(this,Object(xe["a"])(this))}}}),we=ge,_e=(n("91de"),Object(m["a"])(we,ve,ke,!1,null,"6e0b32ae",null)),Ce=_e.exports,Te=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"animation"}})},Se=[],Ae=n("5b53"),Ee={name:"presaleAnimation",components:{},data:function(){return{defaultOptions:{animationData:Ae},animationSpeed:1,anim:{}}},mounted:function(){this.svgFun()},methods:{svgFun:function(){var e={container:document.getElementById("animation"),renderer:"svg",loop:!0,autoplay:!0,animationData:Ae};Z.a.loadAnimation(e)}}},Be=Ee,Pe=Object(m["a"])(Be,Te,Se,!1,null,null,null),De=Pe.exports,Re=ye(me.PresaleAbi),Ie=Re.contractObject,Me=ye(me.USDTAbi),Le=Me.contractObject,Ve=ye(me.SpacePiAbi),Oe=Ve.contractObject,Ge={name:"Presale",components:{countdown:Ce,presaleAnimation:De},data:function(){return{spacePiProgress:0,usdProgress:0,buyinputspacepi:0,buyinputusdt:0,receiveTime:""}},computed:Object(s["a"])(Object(s["a"])({},Object(b["d"])(["walletAddress","blockHeight","unlock_block","unlock_block_time","balance","presalenum","presalenumtoken","allowance","pool","receivestatus"])),{},{endTimeStatus:function(){return this.receivestatus},receiveTimeStatus:function(){var e=this,t=(new Date).getTime();return u.a.get("/json/getTimestamp.json").then((function(t){e.receiveTime=t.data.data})),this.receiveTime<Math.round(t/1e3)}}),watch:{walletAddress:{handler:function(e,t){""!==e?(this.getBalance(),this.getallowance(),this.getPresaleInfo()):(this.$store.commit("updatebalance",[0,0]),this.$store.commit("updatepresalenum",["0","0"]),this.getPresaleInfo())},immediate:!0}},mounted:function(){var e=this;this.getBlockHeight(),this.updataeBlockTime(),this.getPresaleInfo();(new Date).getTime();u.a.post("https://admin.btc-pi.com/api/getTimestamp").then((function(t){e.receiveTime=t.data.data}))},methods:Object(s["a"])(Object(s["a"])(Object(s["a"])({},Object(b["b"])([])),Object(b["c"])(["editAddress","updateunlock_block","updateblockHeight","updateallowance","updatepresalenum","updatebalance","updatepresalenumtoken","updatealert"])),{},{connect:function(){var e=this;ethereum.request({method:"eth_requestAccounts"}).then(function(){var t=Object(d["a"])(regeneratorRuntime.mark((function t(n){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.editAddress(n[0]),e.$store.commit("editAddress",n[0]);case 2:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()).then((function(){e.$store.commit("updatealert",{status:!0,text:e.$t("alert").connect.success,type:"success"}),setTimeout((function(){e.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)})).catch((function(){e.$store.commit("updatealert",{status:!0,text:e.$t("alert").connect.error,type:"warning"}),setTimeout((function(){e.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)})),this.getBalance()},getBlockHeight:function(){var e=this;pe.eth.getBlockNumber().then((function(t){e.updateblockHeight(t)}))},disconnect:function(){sessionStorage.removeItem("walletAddress"),this.$store.commit("editAddress","")},getBalanceMax:function(e){this.walletAddress||this.connect();var t=this.balance[e],n=this.pool[e][4],a=0;a=t>n||t>n-this.presalenum[e]?n-this.presalenum[e]:t,0==e?this.buyinputspacepi=Math.floor(a):this.buyinputusdt=a},Receive:function(){return Object(d["a"])(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,Ie.methods.withdraw().call();case 2:e.sent;case 3:case"end":return e.stop()}}),e)})))()},updataeBlockTime:function(){var e=this;return Object(d["a"])(regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,Ie.methods.unlockedBlock().call();case 2:n=t.sent,e.updateunlock_block(n);case 4:case"end":return t.stop()}}),t)})))()},getallowance:function(){var e=this;return Object(d["a"])(regeneratorRuntime.mark((function t(){var n,a;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,Oe.methods.allowance(e.walletAddress,me.PresaleAbi.address).call();case 2:return n=t.sent,t.next=5,Le.methods.allowance(e.walletAddress,me.PresaleAbi.address).call();case 5:a=t.sent,e.updateallowance([pe.utils.fromWei(n),pe.utils.fromWei(a)]);case 7:case"end":return t.stop()}}),t)})))()},UserApprove:function(e){var t=this;return Object(d["a"])(regeneratorRuntime.mark((function n(){return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(0!=e){n.next=6;break}return n.next=3,Oe.methods.approve(me.PresaleAbi.address,"25000000001000000000").send({from:t.walletAddress}).then((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.authorizeSuccess,type:"success"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)})).catch((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.authorizeError,type:"error"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)}));case 3:n.sent,n.next=9;break;case 6:return n.next=8,Le.methods.approve(me.PresaleAbi.address,pe.utils.toWei("50")).send({from:t.walletAddress}).then((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.authorizeSuccess,type:"success"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)})).catch((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.authorizeError,type:"warning"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)}));case 8:n.sent;case 9:t.getallowance();case 10:case"end":return n.stop()}}),n)})))()},buy:function(e){var t=this;return Object(d["a"])(regeneratorRuntime.mark((function n(){var a,r,i,s,o;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(0!=e){n.next=33;break}if(!(t.buyinputspacepi<=0)){n.next=6;break}t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.min0,type:"warning"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500),n.next=31;break;case 6:if(!(t.buyinputspacepi>t.balance[e])){n.next=10;break}return t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.balanceError,type:"warning"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500),n.abrupt("return",!1);case 10:if(!(Number(t.buyinputspacepi)<Number(t.pool[e][5]))){n.next=15;break}t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.min+t.pool[e][5],type:"warning"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500),n.next=31;break;case 15:if(!(Number(t.buyinputspacepi)>Number(t.pool[e][4]))){n.next=20;break}t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.max+t.pool[e][4],type:"warning"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500),n.next=31;break;case 20:if(t.balance[e],a=t.pool[e][4],r=Number(a)-t.presalenum[e],!(Number(t.buyinputspacepi)>r)){n.next=27;break}return t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.balanceError1+(Number(a)-t.presalenum[e]),type:"warning"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500),n.abrupt("return",!1);case 27:return i=t.buyinputspacepi*Math.pow(10,9),n.next=30,Ie.methods.reversed(e,i.toString()).send({from:t.walletAddress}).then((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.buySuccess,type:"success"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)})).catch((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.buyError,type:"error"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)}));case 30:n.sent;case 31:n.next=62;break;case 33:if(!(t.buyinputusdt<0)){n.next=38;break}t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.min0,type:"warning"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500),n.next=62;break;case 38:if(!(t.buyinputusdt>t.balance[e])){n.next=42;break}return t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.balanceError,type:"warning"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500),n.abrupt("return",!1);case 42:if(!(t.buyinputusdt<t.pool[e][5])){n.next=47;break}t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.min+t.pool[e][5],type:"warning"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500),n.next=62;break;case 47:if(!(Number(t.buyinputusdt)>Number(t.pool[1][4]))){n.next=52;break}t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.max+t.pool[e][4],type:"warning"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500),n.next=62;break;case 52:if(t.balance[e],s=t.pool[e][4],o=Number(s)-t.presalenum[e],!(Number(t.buyinputusdt)>o)){n.next=59;break}return t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.balanceError1+o,type:"warning"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500),n.abrupt("return",!1);case 59:return n.next=61,Ie.methods.reversed(e,pe.utils.toWei(t.buyinputusdt.toString())).send({from:t.walletAddress}).then((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.buySuccess,type:"success"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)})).catch((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.buyError,type:"error"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)}));case 61:n.sent;case 62:t.getBalance();case 63:case"end":return n.stop()}}),n)})))()},getPresaleInfo:function(){var e=this;return Object(d["a"])(regeneratorRuntime.mark((function t(){var n,a,r,i;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,Ie.methods.currencies().call();case 2:n=t.sent,a=[],r=0;case 5:if(!(r<Number(n))){t.next=14;break}return t.next=8,Ie.methods.supportedCurrency(r).call();case 8:i=t.sent,0==r?(i[2]=pe.utils.fromWei(i[2]),i[3]=i[3]/Math.pow(10,9),i[4]=i[4]/Math.pow(10,9),i["sold"]=i["sold"]/Math.pow(10,9)):(i[2]=pe.utils.fromWei(i[2]),i[3]=pe.utils.fromWei(i[3]),i[4]=pe.utils.fromWei(i[4]),i["sold"]=pe.utils.fromWei(i["sold"])),a[r]=[r,i[0],i[1],i[2],i[3],i[4],i["sold"]/i["amount"]*100];case 11:r++,t.next=5;break;case 14:e.$store.commit("updatepool",a),e.spacePiProgress=Number(110.52).toFixed(2),e.usdProgress=Number(a[1][6]).toFixed(2);case 17:case"end":return t.stop()}}),t)})))()},getSpacePiInput:function(e){if(isNaN(e.target.value)&&(this.buyinputspacepi=0),-1!=(e.target.value+"").indexOf(".")){var t=e.target.value.split(".",3);this.buyinputspacepi=t[0]}else if(0==e.target.value.substr(1,1))0==e.target.value.substr(0,1)&&(this.buyinputspacepi=0);else{var n=e.target.value;this.buyinputspacepi=n.replace(/^[0]+/,"")}},getUsdtInput:function(e){if(isNaN(e.target.value)&&(this.buyinputusdt=0),-1!=(e.target.value+"").indexOf(".")){var t=e.target.value.split(".",3);this.buyinputusdt=t[0]+"."+t[1].substr(0,4)}else if(0==e.target.value.substr(1,1))0==e.target.value.substr(0,1)&&(this.buyinputusdt=0);else{var n=e.target.value;this.buyinputusdt=n.replace(/^[0]+/,"")}},getBalance:function(){var e=this;return Object(d["a"])(regeneratorRuntime.mark((function t(){var n,a,r,i,s,o,c,d,l,u,b;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,Oe.methods.balanceOf(e.walletAddress).call();case 2:return n=t.sent,t.next=5,Le.methods.balanceOf(e.walletAddress).call();case 5:return a=t.sent,r=pe.utils.fromWei(a),i="",-1!=r.indexOf(".")?(s=r.split(".",3),i=s[0]+"."+s[1].substr(0,4)):i=r,e.updatebalance([n/Math.pow(10,9),Number(i)]),t.next=12,Ie.methods.currencies().call();case 12:o=t.sent,c=[],d=[],l=0;case 16:if(!(l<o)){t.next=29;break}return t.next=19,Ie.methods.supportedCurrency(l).call();case 19:return u=t.sent,t.next=22,Ie.methods.userInfo(e.walletAddress,u["token"]).call();case 22:b=t.sent,0==l?(b["cost"]=b["cost"]/Math.pow(10,9),b["locked"]=Number(pe.utils.fromWei(b["locked"]))):(b["cost"]=pe.utils.fromWei(b["cost"]),b["locked"]=Number(pe.utils.fromWei(b["locked"]))),c[l]=b["cost"],d[l]=b["locked"];case 26:l++,t.next=16;break;case 29:e.updatepresalenum(c),e.updatepresalenumtoken(d);case 31:case"end":return t.stop()}}),t)})))()},withdraw:function(e){var t=this;return Object(d["a"])(regeneratorRuntime.mark((function n(){return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(console.log(t.presalenumtoken[e],"预售额度"),"0"!==t.presalenumtoken[e]&&0!==t.presalenumtoken[e]){n.next=5;break}return t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.withdrawerror,type:"error"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500),n.abrupt("return");case 5:return n.next=7,Ie.methods.withdraw(e).send({from:t.walletAddress}).then((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.receiveSuccess,type:"success"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500),t.getBalance()})).catch((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.receiveError,type:"error"}),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)}));case 7:n.sent;case 8:case"end":return n.stop()}}),n)})))()},semicolon:function(e){if(!e)return 0;var t=Math.trunc(e),n=t.toString().replace(/(\d)(?=(?:\d{3})+$)/g,"$1,"),a="",r=e.toString().split(".");return 2===r.length?(a=r[1].toString(),n+"."+a):n+a}})},$e=Ge,Fe=(n("520d"),Object(m["a"])($e,ue,be,!1,null,"6ed2535c",null)),qe=Fe.exports;h()(Fe,{VBtn:k["a"],VDivider:B["a"],VImg:x["a"]});var ze=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"earn"},[e.tab[0]?n("farms"):e._e()],1)},je=[],Ue=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("stakeLpTokens",{attrs:{status:e.stakeLpTokensStatus,pool:e.LPtoken,url:e.earnUrl}}),a("unstakeLpTokens",{attrs:{status:e.unstakeLpTokensStatus,pool:e.LPtoken,type:e.LPtype,url:e.earnUrl}}),a("div",{staticClass:"farms"},[a("div",{staticClass:"btcPi-width1500 subject"},[a("div",{staticClass:"farms-title-subject"},[a("div",{staticClass:"farms-l"},[a("span",{staticClass:"farms-title"},[e._v(e._s(e.$t("earn").farmsTitle))]),a("span",{staticClass:"farms-text"},[e._v(e._s(e.$t("earn").farmsText))])]),a("div",{staticClass:"farms-line"}),a("div",{staticClass:"farms-r"},[a("div",{staticClass:"farms-block"},[a("div",{staticClass:"block-title"},[a("span",[e._v(e._s(e.$t("earn").currentBlockOutput))]),a("div",{staticClass:"btc-tooltip"},[a("div",{staticClass:"tooltip-icon"},[a("v-img",{attrs:{src:n("6cbb")}})],1),a("div",{staticClass:"btc-tooltip-text"},[e._v(e._s(e.$t("earn").currentBlockOutputTips))])])]),a("div",{staticClass:"block-text"},[e._v(e._s(e.semicolon(e.publicInfo.perBlock,6)))])]),a("div",{staticClass:"Countdown"},[a("div",{staticClass:"Countdown-l"},[a("span",[e._v(e._s(e.$t("earn").halvingCountdown))]),a("div",{staticClass:"btc-tooltip"},[a("div",{staticClass:"tooltip-icon"},[a("v-img",{attrs:{src:n("6cbb")}})],1),a("div",{staticClass:"btc-tooltip-text"},[e._v(e._s(e.$t("earn").halvingCountdownTips))])])]),a("div",{staticClass:"Countdown-r"},[a("countdown",{attrs:{endTime:e.endtime}})],1)])]),a("div",{staticClass:"farms-picture"},[a("farmsAnimation")],1)]),a("div",{staticClass:"function",staticStyle:{display:"none"}},[a("div",{staticClass:"function-l"},[a("div",{staticClass:"function-tab"},[a("div",{class:e.functionTab[0]?"checked":"",on:{click:function(t){return e.tabClick(0)}}},[e._v("Live")]),a("div",{class:e.functionTab[1]?"checked":"",on:{click:function(t){return e.tabClick(1)}}},[e._v("Finished")])]),a("div",{staticClass:"form-h"},[a("div",{staticClass:"form-title"},[e._v("Staked only")]),a("v-switch",{attrs:{inset:""}})],1)]),a("div",{staticClass:"function-r"},[a("div",{staticClass:"form-subject"},[a("div",{staticClass:"form-h"},[a("div",{staticClass:"form-title-subject"},[a("div",{staticClass:"form-title"},[e._v("SORT BY")]),a("v-select",{staticClass:"form-select",attrs:{items:e.select,label:"Hot",solo:"","background-color":"#F4F5F9",flat:"",filled:"",dense:""}})],1),a("div",{staticClass:"form-input"},[e._m(0),a("div",{staticClass:"form-r"},[a("v-img",{staticClass:"input-icon",attrs:{src:n("bd3f")}})],1)])])])])]),a("v-divider",{staticStyle:{background:"#8A9AC2",height:"1px",opacity:"0.2"}}),a("div",{staticClass:"farms-car-subject"},[a("div",{staticClass:"subject single"},[a("div",{staticClass:"farms-car-top",staticStyle:{background:"linear-gradient(313deg, #3777FD 0%, #F775B3 48%, #46A4FC 100%)"}},[a("div",{staticClass:"farms-l"},[a("div",{staticClass:"farms-icon"},[a("v-img",{attrs:{src:n("3bf2")}})],1),a("div",{staticClass:"single-logo"},[a("v-img",{attrs:{src:n("c979")}})],1)]),a("div",{staticClass:"farms-r"},[a("div",{staticClass:"farms-car-title"},[e._v(e._s(e.tokenlist[0]["Pair"]))]),a("div",{staticClass:"farms-car-core"},[a("div",{staticClass:"identification"},[a("div",{staticClass:"identification-icon"},[a("v-img",{attrs:{src:n("c7a2")}})],1)]),a("div",{staticClass:"multiple"},[e._v(e._s(e.tokenlist[0]["point"])+"X")])])])]),a("div",{staticClass:"farms-single-car"},[a("div",{staticClass:"farms-apr-subject"},[a("div",{staticClass:"farms-apr"},[a("div",{staticClass:"farms-apr-l"},[e._v(e._s(e.$t("earn").apr)+":")]),a("div",{staticClass:"farms-apr-r"},[a("div",{staticClass:"farms-apr-text"},[e._v(" "+e._s(e.piar[0].APR)+"% ")])])]),a("div",{staticClass:"farms-apr"},[a("div",{staticClass:"farms-apr-l"},[e._v(e._s(e.$t("earn").earn)+":")]),a("div",{staticClass:"farms-apr-r"},[a("div",{staticClass:"farms-apr-text"},[e._v(e._s(e.$t("currency").btcPi))])])])]),a("div",{staticClass:"farms-harvest"},[a("div",{staticClass:"farms-harvest-subject"},[a("div",{staticClass:"farms-harvest-l"},[a("div",{staticClass:"harvest-title"},[e._v(e._s(e.$t("currency").btcPi))]),a("div",{staticClass:"harvest-text"},[e._v(e._s(e.$t("earn").earned))])]),a("div",{staticClass:"btc-tooltip"},[a("v-img",{staticClass:"tooltip-icon",attrs:{src:n("6cbb")}}),a("div",{staticClass:"btc-tooltip-text"},[e._v(e._s(e.$t("public").tooltip))])],1)]),a("div",{staticClass:"farms-harvest-car"},[a("div",{staticClass:"farms-harvest-car-l",style:{color:0!==e.tokenlist[0].Earnings?"#3772FF":""}},[e._v(e._s(e.tokenlist[0]["Earnings"]))]),a("div",{staticClass:"farms-harvest-car-r"},[0===e.tokenlist[0].Earnings?a("v-btn",{staticClass:"farms-harvest-bnt",attrs:{elevation:"0",color:"#8A9AC2"}},[e._v(e._s(e.$t("earn").harvest))]):e._e(),0!==e.tokenlist[0].Earnings?a("v-btn",{staticClass:"farms-harvest-bnt",staticStyle:{background:"linear-gradient(180deg, #3B6CFE 0%, #5C42FD 100%)"},attrs:{elevation:"0"},on:{click:function(t){return e.Harvest(0)}}},[e._v(e._s(e.$t("earn").harvest))]):e._e()],1)])])]),a("div",{staticClass:"farms-contract"},[a("div",{staticClass:"farms-contract-subject"},[a("div",{staticClass:"farms-contract-title"},[e._v(e._s(e.tokenlist[0]["Pair"]))]),a("div",{staticClass:"farms-contract-text"},[e._v(e._s(e.$t("earn").staked))])]),a("div",{staticClass:"farms-contract-bnt-subject"},[""===e.walletAddress?a("v-btn",{staticClass:"farms-contract-bnt",attrs:{elevation:"0"},on:{click:e.connect}},[e._v(e._s(e.$t("public").connect))]):e._e(),""!==e.walletAddress&&0===e.tokenlist[0].Allowance?a("v-btn",{staticClass:"farms-contract-bnt",attrs:{elevation:"0"},on:{click:function(t){return e.UserApprove(0)}}},[e._v(e._s(e.$t("public").authorize))]):e._e(),""!==e.walletAddress&&0!==e.tokenlist[0].Allowance&&"0"===e.tokenlist[0].Lpnum?a("div",{staticClass:"farms-lp"},[a("div",{staticClass:"farms-lp-car",on:{click:function(t){return e.lPBnt(0)}}},[e._v(e._s(e.semicolon(e.tokenlist[0]["Lpnum"],2)))]),a("v-btn",{staticClass:"farms-lp-bnt",attrs:{elevation:"0"},on:{click:function(t){return e.lPBnt(0)}}},[e._v(e._s(e.$t("earn").stake))])],1):e._e(),""!==e.walletAddress&&0!==e.tokenlist[0].Allowance&&"0"!==e.tokenlist[0].Lpnum?a("div",{staticClass:"farms-price"},[a("div",{staticClass:"farms-price-l"},[a("div",{staticClass:"farms-price-title"},[e._v(e._s(e.semicolon(e.tokenlist[0]["Lpnum"],2)))]),a("div",{staticClass:"farms-price-text"},[e._v("~"+e._s(e.semicolon(e.piar[0].Liquidity,4))+" "+e._s(e.$t("currency").usdt))])]),a("div",{staticClass:"farms-price-r"},[a("div",{staticClass:"farms-price-bnt del",attrs:{elevation:"0"},on:{click:function(t){return e.unstakeLpTokens(0,0)}}},[e._v("-")]),a("div",{staticClass:"farms-price-bnt add",attrs:{elevation:"0"},on:{click:function(t){return e.unstakeLpTokens(0,1)}}},[e._v("+")])])]):e._e()],1)]),a("v-divider",{staticStyle:{background:"#8A9AC2",height:"1px",opacity:"0.5"}}),a("div",{staticClass:"farms-subject"},[!1===e.getIndexClick[4]?a("div",{staticClass:"farms-details",on:{click:function(t){return e.detailsClickStatus(4)}}},[a("span",{staticClass:"farms-details-title"},[e._v(e._s(e.$t("earn").details))]),a("v-img",{staticClass:"details-icon",attrs:{src:n("a5d6")}})],1):e._e(),!0===e.getIndexClick[4]?a("div",{staticClass:"farms-details",on:{click:function(t){return e.detailsClickStatus(4)}}},[a("span",{staticClass:"farms-details-title"},[e._v(e._s(e.$t("earn").hide))]),a("v-img",{staticClass:"details-icon",attrs:{src:n("9e1b")}})],1):e._e(),!0===e.getIndexClick[4]?a("div",{staticClass:"farms-end"},[a("div",{staticClass:"farms-end-subject"},[a("div",{staticClass:"farms-end-l"},[e._v(e._s(e.$t("earn").totalLiquidity)+":")]),a("div",{staticClass:"farms-end-r"},[e._v("$"+e._s(e.semicolon(e.piar[0].Liquidityall,4)))])]),a("div",{staticClass:"farms-end-link"},[a("div",{staticClass:"farms-end-flex",on:{click:function(t){e.openUrl(e.$t("earn").earnUrl1[0])}}},[a("span",[e._v(e._s(e.$t("earn").seeTokenInfo)+" "+e._s(e.tokenlist[0]["Pair"]))]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)]),a("div",{staticClass:"farms-end-flex",on:{click:function(t){e.openUrl(e.$t("earn").earnUrl1[1])}}},[a("span",[e._v(e._s(e.$t("earn").viewTutorial))]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)]),a("div",{staticClass:"farms-end-flex",on:{click:function(t){e.openUrl(e.$t("earn").earnUrl1[2])}}},[a("span",[e._v(e._s(e.$t("earn").viewContract))]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)])])]):e._e()])],1),a("div",{staticClass:"subject single"},[a("div",{staticClass:"farms-car-top",staticStyle:{background:"linear-gradient(313deg, #66C2DE 0%, #F19ADF 48%, #48BED8 100%)"}},[a("div",{staticClass:"farms-l"},[a("div",{staticClass:"farms-icon"},[a("v-img",{attrs:{src:n("689d")}})],1),a("div",{staticClass:"spacepi-logo"},[a("v-img",{attrs:{src:n("3bf2")}})],1)]),a("div",{staticClass:"farms-r"},[a("div",{staticClass:"farms-car-title"},[e._v(e._s(e.tokenlist[1]["Pair"]))]),a("div",{staticClass:"farms-car-core"},[a("div",{staticClass:"identification"},[a("div",{staticClass:"identification-icon"},[a("v-img",{attrs:{src:n("e40a")}})],1)]),a("div",{staticClass:"multiple"},[e._v(e._s(e.tokenlist[1]["point"])+"X")])])])]),a("div",{staticClass:"farms-single-car"},[a("div",{staticClass:"farms-apr-subject"},[a("div",{staticClass:"farms-apr"},[a("div",{staticClass:"farms-apr-l"},[e._v(e._s(e.$t("earn").apr)+":")]),a("div",{staticClass:"farms-apr-r"},[a("div",{staticClass:"farms-apr-text"},[e._v(" "+e._s(e.piar[1].APR)+"% ")])])]),a("div",{staticClass:"farms-apr"},[a("div",{staticClass:"farms-apr-l"},[e._v(e._s(e.$t("earn").earn)+":")]),a("div",{staticClass:"farms-apr-r"},[a("div",{staticClass:"farms-apr-text"},[e._v(e._s(e.$t("currency").btcPi))])])])]),a("div",{staticClass:"farms-harvest"},[a("div",{staticClass:"farms-harvest-subject"},[a("div",{staticClass:"farms-harvest-l"},[a("div",{staticClass:"harvest-title"},[e._v(e._s(e.$t("currency").btcPi))]),a("div",{staticClass:"harvest-text"},[e._v(e._s(e.$t("earn").earned))])]),a("div",{staticClass:"btc-tooltip"},[a("v-img",{staticClass:"tooltip-icon",attrs:{src:n("6cbb")}}),a("div",{staticClass:"btc-tooltip-text"},[e._v(e._s(e.$t("public").tooltip))])],1)]),a("div",{staticClass:"farms-harvest-car"},[a("div",{staticClass:"farms-harvest-car-l",style:{color:0!==e.tokenlist[1].Earnings?"#3772FF":""}},[e._v(e._s(e.tokenlist[1]["Earnings"]))]),a("div",{staticClass:"farms-harvest-car-r"},[0===e.tokenlist[1].Earnings?a("v-btn",{staticClass:"farms-harvest-bnt",attrs:{elevation:"0",color:"#8A9AC2"}},[e._v(e._s(e.$t("earn").harvest))]):e._e(),0!==e.tokenlist[1].Earnings?a("v-btn",{staticClass:"farms-harvest-bnt",staticStyle:{background:"linear-gradient(180deg, #3B6CFE 0%, #5C42FD 100%)"},attrs:{elevation:"0"},on:{click:function(t){return e.Harvest(1)}}},[e._v(e._s(e.$t("earn").harvest))]):e._e()],1)])])]),a("div",{staticClass:"farms-contract"},[a("div",{staticClass:"farms-contract-subject"},[a("div",{staticClass:"farms-contract-title"},[e._v(e._s(e.tokenlist[0]["Pair"])+" LP")]),a("div",{staticClass:"farms-contract-text"},[e._v(e._s(e.$t("earn").staked))])]),a("div",{staticClass:"farms-contract-bnt-subject"},[""===e.walletAddress?a("v-btn",{staticClass:"farms-contract-bnt",attrs:{elevation:"0"},on:{click:e.connect}},[e._v(e._s(e.$t("public").connect))]):e._e(),""!==e.walletAddress&&0===e.tokenlist[1].Allowance?a("v-btn",{staticClass:"farms-contract-bnt",attrs:{elevation:"0"},on:{click:function(t){return e.UserApprove(1)}}},[e._v(e._s(e.$t("public").authorize))]):e._e(),""!==e.walletAddress&&0!==e.tokenlist[1].Allowance&&"0"===e.tokenlist[1].Lpnum?a("div",{staticClass:"farms-lp"},[a("div",{staticClass:"farms-lp-car",on:{click:function(t){return e.lPBnt(1)}}},[e._v(e._s(e.semicolon(e.tokenlist[1]["Lpnum"],4)))]),a("v-btn",{staticClass:"farms-lp-bnt",attrs:{elevation:"0"},on:{click:function(t){return e.lPBnt(1)}}},[e._v(e._s(e.$t("earn").stakeLp))])],1):e._e(),""!==e.walletAddress&&0!==e.tokenlist[1].Allowance&&"0"!==e.tokenlist[1].Lpnum?a("div",{staticClass:"farms-price"},[a("div",{staticClass:"farms-price-l"},[a("div",{staticClass:"farms-price-title"},[e._v(e._s(e.semicolon(e.tokenlist[1]["Lpnum"],4)))]),a("div",{staticClass:"farms-price-text"},[e._v("~"+e._s(e.semicolon(e.piar[1].Liquidity,4))+" "+e._s(e.$t("currency").usdt))])]),a("div",{staticClass:"farms-price-r"},[a("div",{staticClass:"farms-price-bnt del",attrs:{elevation:"0"},on:{click:function(t){return e.unstakeLpTokens(1,0)}}},[e._v("-")]),a("div",{staticClass:"farms-price-bnt add",attrs:{elevation:"0"},on:{click:function(t){return e.unstakeLpTokens(1,1)}}},[e._v("+")])])]):e._e()],1)]),a("v-divider",{staticStyle:{background:"#8A9AC2",height:"1px",opacity:"0.5"}}),a("div",{staticClass:"farms-subject"},[!1===e.getIndexClick[0]?a("div",{staticClass:"farms-details",on:{click:function(t){return e.detailsClickStatus(0)}}},[a("span",{staticClass:"farms-details-title"},[e._v(e._s(e.$t("earn").details))]),a("v-img",{staticClass:"details-icon",attrs:{src:n("a5d6")}})],1):e._e(),!0===e.getIndexClick[0]?a("div",{staticClass:"farms-details",on:{click:function(t){return e.detailsClickStatus(0)}}},[a("span",{staticClass:"farms-details-title"},[e._v(e._s(e.$t("earn").hide))]),a("v-img",{staticClass:"details-icon",attrs:{src:n("9e1b")}})],1):e._e(),!0===e.getIndexClick[0]?a("div",{staticClass:"farms-end"},[a("div",{staticClass:"farms-end-subject"},[a("div",{staticClass:"farms-end-l"},[e._v(e._s(e.$t("earn").totalLiquidity)+":")]),a("div",{staticClass:"farms-end-r"},[e._v("$"+e._s(e.semicolon(e.piar[1].Liquidityall,4)))])]),a("div",{staticClass:"farms-end-link"},[a("div",{staticClass:"farms-end-flex",on:{click:function(t){e.openUrl(e.$t("earn").earnUrl2[0])}}},[a("span",[e._v(e._s(e.$t("earn").seeTokenInfo)+" "+e._s(e.tokenlist[1]["Pair"])+" LP")]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)]),a("div",{staticClass:"farms-end-flex",on:{click:function(t){e.openUrl(e.$t("earn").earnUrl2[1])}}},[a("span",[e._v(e._s(e.$t("earn").viewTutorial))]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)]),a("div",{staticClass:"farms-end-flex",on:{click:function(t){e.openUrl(e.$t("earn").earnUrl2[2])}}},[a("span",[e._v(e._s(e.$t("earn").viewContract))]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)])])]):e._e()])],1),a("div",{staticClass:"subject single"},[a("div",{staticClass:"farms-car-top",staticStyle:{background:"linear-gradient(313deg, #66C2DE 0%, #F19ADF 48%, #48BED8 100%)"}},[a("div",{staticClass:"farms-l"},[a("div",{staticClass:"farms-icon"},[a("v-img",{attrs:{src:n("689d")}})],1),a("div",{staticClass:"spacepi-logo"},[a("v-img",{attrs:{src:n("c979")}})],1)]),a("div",{staticClass:"farms-r"},[a("div",{staticClass:"farms-car-title"},[e._v(e._s(e.tokenlist[2]["Pair"]))]),a("div",{staticClass:"farms-car-core"},[a("div",{staticClass:"identification"},[a("div",{staticClass:"identification-icon"},[a("v-img",{attrs:{src:n("e40a")}})],1)]),a("div",{staticClass:"multiple"},[e._v(e._s(e.tokenlist[2]["point"])+"X")])])])]),a("div",{staticClass:"farms-single-car"},[a("div",{staticClass:"farms-apr-subject"},[a("div",{staticClass:"farms-apr"},[a("div",{staticClass:"farms-apr-l"},[e._v(e._s(e.$t("earn").apr)+":")]),a("div",{staticClass:"farms-apr-r"},[a("div",{staticClass:"farms-apr-text"},[e._v(" "+e._s(e.piar[2].APR)+"% ")])])]),a("div",{staticClass:"farms-apr"},[a("div",{staticClass:"farms-apr-l"},[e._v(e._s(e.$t("earn").earn)+":")]),a("div",{staticClass:"farms-apr-r"},[a("div",{staticClass:"farms-apr-text"},[e._v(e._s(e.$t("currency").btcPi))])])])]),a("div",{staticClass:"farms-harvest"},[a("div",{staticClass:"farms-harvest-subject"},[a("div",{staticClass:"farms-harvest-l"},[a("div",{staticClass:"harvest-title"},[e._v(e._s(e.$t("currency").btcPi))]),a("div",{staticClass:"harvest-text"},[e._v(e._s(e.$t("earn").earned))])]),a("div",{staticClass:"btc-tooltip"},[a("v-img",{staticClass:"tooltip-icon",attrs:{src:n("6cbb")}}),a("div",{staticClass:"btc-tooltip-text"},[e._v(e._s(e.$t("public").tooltip))])],1)]),a("div",{staticClass:"farms-harvest-car"},[a("div",{staticClass:"farms-harvest-car-l",style:{color:0!==e.tokenlist[2].Earnings?"#3772FF":""}},[e._v(e._s(e.tokenlist[2]["Earnings"]))]),a("div",{staticClass:"farms-harvest-car-r"},[0===e.tokenlist[2].Earnings?a("v-btn",{staticClass:"farms-harvest-bnt",attrs:{elevation:"0",color:"#8A9AC2"}},[e._v(e._s(e.$t("earn").harvest))]):e._e(),0!==e.tokenlist[2].Earnings?a("v-btn",{staticClass:"farms-harvest-bnt",staticStyle:{background:"linear-gradient(180deg, #3B6CFE 0%, #5C42FD 100%)"},attrs:{elevation:"0"},on:{click:function(t){return e.Harvest(2)}}},[e._v(e._s(e.$t("earn").harvest))]):e._e()],1)])])]),a("div",{staticClass:"farms-contract"},[a("div",{staticClass:"farms-contract-subject"},[a("div",{staticClass:"farms-contract-title"},[e._v(e._s(e.tokenlist[2]["Pair"])+" LP")]),a("div",{staticClass:"farms-contract-text"},[e._v(e._s(e.$t("earn").staked))])]),a("div",{staticClass:"farms-contract-bnt-subject"},[""===e.walletAddress?a("v-btn",{staticClass:"farms-contract-bnt",attrs:{elevation:"0"},on:{click:e.connect}},[e._v(e._s(e.$t("public").connect))]):e._e(),""!==e.walletAddress&&0===e.tokenlist[2].Allowance?a("v-btn",{staticClass:"farms-contract-bnt",attrs:{elevation:"0"},on:{click:function(t){return e.UserApprove(2)}}},[e._v(e._s(e.$t("public").authorize))]):e._e(),""!==e.walletAddress&&0!==e.tokenlist[2].Allowance&&"0"===e.tokenlist[2].Lpnum?a("div",{staticClass:"farms-lp"},[a("div",{staticClass:"farms-lp-car",on:{click:function(t){return e.lPBnt(2)}}},[e._v(e._s(e.semicolon(e.tokenlist[2]["Lpnum"],4)))]),a("v-btn",{staticClass:"farms-lp-bnt",attrs:{elevation:"0"},on:{click:function(t){return e.lPBnt(2)}}},[e._v(e._s(e.$t("earn").stakeLp))])],1):e._e(),""!==e.walletAddress&&0!==e.tokenlist[2].Allowance&&"0"!==e.tokenlist[2].Lpnum?a("div",{staticClass:"farms-price"},[a("div",{staticClass:"farms-price-l"},[a("div",{staticClass:"farms-price-title"},[e._v(e._s(e.semicolon(e.tokenlist[2]["Lpnum"],4)))]),a("div",{staticClass:"farms-price-text"},[e._v("~"+e._s(e.semicolon(e.piar[2].Liquidity,4))+" "+e._s(e.$t("currency").usdt))])]),a("div",{staticClass:"farms-price-r"},[a("div",{staticClass:"farms-price-bnt del",attrs:{elevation:"0"},on:{click:function(t){return e.unstakeLpTokens(2,0)}}},[e._v("-")]),a("div",{staticClass:"farms-price-bnt add",attrs:{elevation:"0"},on:{click:function(t){return e.unstakeLpTokens(2,1)}}},[e._v("+")])])]):e._e()],1)]),a("v-divider",{staticStyle:{background:"#8A9AC2",height:"1px",opacity:"0.5"}}),a("div",{staticClass:"farms-subject"},[!1===e.getIndexClick[2]?a("div",{staticClass:"farms-details",on:{click:function(t){return e.detailsClickStatus(2)}}},[a("span",{staticClass:"farms-details-title"},[e._v(e._s(e.$t("earn").details))]),a("v-img",{staticClass:"details-icon",attrs:{src:n("a5d6")}})],1):e._e(),!0===e.getIndexClick[2]?a("div",{staticClass:"farms-details",on:{click:function(t){return e.detailsClickStatus(2)}}},[a("span",{staticClass:"farms-details-title"},[e._v(e._s(e.$t("earn").hide))]),a("v-img",{staticClass:"details-icon",attrs:{src:n("9e1b")}})],1):e._e(),!0===e.getIndexClick[2]?a("div",{staticClass:"farms-end"},[a("div",{staticClass:"farms-end-subject"},[a("div",{staticClass:"farms-end-l"},[e._v(e._s(e.$t("earn").totalLiquidity)+":")]),a("div",{staticClass:"farms-end-r"},[e._v("$"+e._s(e.semicolon(e.piar[2].Liquidityall,4)))])]),a("div",{staticClass:"farms-end-link"},[a("div",{staticClass:"farms-end-flex",on:{click:function(t){e.openUrl(e.$t("earn").earnUrl3[0])}}},[a("span",[e._v(e._s(e.$t("earn").seeTokenInfo)+" "+e._s(e.tokenlist[2]["Pair"])+" LP")]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)]),a("div",{staticClass:"farms-end-flex",on:{click:function(t){e.openUrl(e.$t("earn").earnUrl3[1])}}},[a("span",[e._v(e._s(e.$t("earn").viewTutorial))]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)]),a("div",{staticClass:"farms-end-flex",on:{click:function(t){e.openUrl(e.$t("earn").earnUrl3[2])}}},[a("span",[e._v(e._s(e.$t("earn").viewContract))]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)])])]):e._e()])],1),a("div",{staticClass:"subject single"},[a("div",{staticClass:"farms-car-top",staticStyle:{background:"linear-gradient(313deg, #66C2DE 0%, #F19ADF 48%, #48BED8 100%)"}},[a("div",{staticClass:"farms-l"},[a("div",{staticClass:"farms-icon"},[a("v-img",{attrs:{src:n("3bf2")}})],1),a("div",{staticClass:"spacepi-logo"},[a("v-img",{attrs:{src:n("c979")}})],1)]),a("div",{staticClass:"farms-r"},[a("div",{staticClass:"farms-car-title"},[e._v(e._s(e.tokenlist[3]["Pair"]))]),a("div",{staticClass:"farms-car-core"},[a("div",{staticClass:"identification"},[a("div",{staticClass:"identification-icon"},[a("v-img",{attrs:{src:n("e40a")}})],1)]),a("div",{staticClass:"multiple"},[e._v(e._s(e.tokenlist[3]["point"])+"X")])])])]),a("div",{staticClass:"farms-single-car"},[a("div",{staticClass:"farms-apr-subject"},[a("div",{staticClass:"farms-apr"},[a("div",{staticClass:"farms-apr-l"},[e._v(e._s(e.$t("earn").apr)+":")]),a("div",{staticClass:"farms-apr-r"},[a("div",{staticClass:"farms-apr-text"},[e._v(" "+e._s(e.piar[3].APR)+"% ")])])]),a("div",{staticClass:"farms-apr"},[a("div",{staticClass:"farms-apr-l"},[e._v(e._s(e.$t("earn").earn)+":")]),a("div",{staticClass:"farms-apr-r"},[a("div",{staticClass:"farms-apr-text"},[e._v(e._s(e.$t("currency").btcPi))])])])]),a("div",{staticClass:"farms-harvest"},[a("div",{staticClass:"farms-harvest-subject"},[a("div",{staticClass:"farms-harvest-l"},[a("div",{staticClass:"harvest-title"},[e._v(e._s(e.$t("currency").btcPi))]),a("div",{staticClass:"harvest-text"},[e._v(e._s(e.$t("earn").earned))])]),a("div",{staticClass:"btc-tooltip"},[a("v-img",{staticClass:"tooltip-icon",attrs:{src:n("6cbb")}}),a("div",{staticClass:"btc-tooltip-text"},[e._v(e._s(e.$t("public").tooltip))])],1)]),a("div",{staticClass:"farms-harvest-car"},[a("div",{staticClass:"farms-harvest-car-l",style:{color:0!==e.tokenlist[3].Earnings?"#3772FF":""}},[e._v(e._s(e.tokenlist[3]["Earnings"]))]),a("div",{staticClass:"farms-harvest-car-r"},[0===e.tokenlist[3].Earnings?a("v-btn",{staticClass:"farms-harvest-bnt",attrs:{elevation:"0",color:"#8A9AC2"}},[e._v(e._s(e.$t("earn").harvest))]):e._e(),0!==e.tokenlist[3].Earnings?a("v-btn",{staticClass:"farms-harvest-bnt",staticStyle:{background:"linear-gradient(180deg, #3B6CFE 0%, #5C42FD 100%)"},attrs:{elevation:"0"},on:{click:function(t){return e.Harvest(3)}}},[e._v(e._s(e.$t("earn").harvest))]):e._e()],1)])])]),a("div",{staticClass:"farms-contract"},[a("div",{staticClass:"farms-contract-subject"},[a("div",{staticClass:"farms-contract-title"},[e._v(e._s(e.tokenlist[3]["Pair"])+" LP")]),a("div",{staticClass:"farms-contract-text"},[e._v(e._s(e.$t("earn").staked))])]),a("div",{staticClass:"farms-contract-bnt-subject"},[""===e.walletAddress?a("v-btn",{staticClass:"farms-contract-bnt",attrs:{elevation:"0"},on:{click:e.connect}},[e._v(e._s(e.$t("public").connect))]):e._e(),""!==e.walletAddress&&0===e.tokenlist[3].Allowance?a("v-btn",{staticClass:"farms-contract-bnt",attrs:{elevation:"0"},on:{click:function(t){return e.UserApprove(3)}}},[e._v(e._s(e.$t("public").authorize))]):e._e(),""!==e.walletAddress&&0!==e.tokenlist[3].Allowance&&"0"===e.tokenlist[3].Lpnum?a("div",{staticClass:"farms-lp"},[a("div",{staticClass:"farms-lp-car",on:{click:function(t){return e.lPBnt(3)}}},[e._v(e._s(e.semicolon(e.tokenlist[3]["Lpnum"],4)))]),a("v-btn",{staticClass:"farms-lp-bnt",attrs:{elevation:"0"},on:{click:function(t){return e.lPBnt(3)}}},[e._v(e._s(e.$t("earn").stakeLp))])],1):e._e(),""!==e.walletAddress&&0!==e.tokenlist[3].Allowance&&"0"!==e.tokenlist[3].Lpnum?a("div",{staticClass:"farms-price"},[a("div",{staticClass:"farms-price-l"},[a("div",{staticClass:"farms-price-title"},[e._v(e._s(e.semicolon(e.tokenlist[3]["Lpnum"],4)))]),a("div",{staticClass:"farms-price-text"},[e._v("~"+e._s(e.semicolon(e.piar[3].Liquidity,4))+" "+e._s(e.$t("currency").usdt))])]),a("div",{staticClass:"farms-price-r"},[a("div",{staticClass:"farms-price-bnt del",attrs:{elevation:"0"},on:{click:function(t){return e.unstakeLpTokens(3,0)}}},[e._v("-")]),a("div",{staticClass:"farms-price-bnt add",attrs:{elevation:"0"},on:{click:function(t){return e.unstakeLpTokens(3,1)}}},[e._v("+")])])]):e._e()],1)]),a("v-divider",{staticStyle:{background:"#8A9AC2",height:"1px",opacity:"0.5"}}),a("div",{staticClass:"farms-subject"},[!1===e.getIndexClick[3]?a("div",{staticClass:"farms-details",on:{click:function(t){return e.detailsClickStatus(3)}}},[a("span",{staticClass:"farms-details-title"},[e._v(e._s(e.$t("earn").details))]),a("v-img",{staticClass:"details-icon",attrs:{src:n("a5d6")}})],1):e._e(),!0===e.getIndexClick[3]?a("div",{staticClass:"farms-details",on:{click:function(t){return e.detailsClickStatus(3)}}},[a("span",{staticClass:"farms-details-title"},[e._v(e._s(e.$t("earn").hide))]),a("v-img",{staticClass:"details-icon",attrs:{src:n("9e1b")}})],1):e._e(),!0===e.getIndexClick[3]?a("div",{staticClass:"farms-end"},[a("div",{staticClass:"farms-end-subject"},[a("div",{staticClass:"farms-end-l"},[e._v(e._s(e.$t("earn").totalLiquidity)+":")]),a("div",{staticClass:"farms-end-r"},[e._v("$"+e._s(e.semicolon(e.piar[3].Liquidityall,4)))])]),a("div",{staticClass:"farms-end-link"},[a("div",{staticClass:"farms-end-flex",on:{click:function(t){e.openUrl(e.$t("earn").earnUrl4[0])}}},[a("span",[e._v(e._s(e.$t("earn").seeTokenInfo)+" "+e._s(e.tokenlist[3]["Pair"])+" LP")]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)]),a("div",{staticClass:"farms-end-flex",on:{click:function(t){e.openUrl(e.$t("earn").earnUrl4[1])}}},[a("span",[e._v(e._s(e.$t("earn").viewTutorial))]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)]),a("div",{staticClass:"farms-end-flex",on:{click:function(t){e.openUrl(e.$t("earn").earnUrl4[2])}}},[a("span",[e._v(e._s(e.$t("earn").viewContract))]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)])])]):e._e()])],1),e._l(e.tokens,(function(t,r){return a("div",{key:r,staticClass:"subject single"},[a("div",{staticClass:"farms-car-top",staticStyle:{background:"linear-gradient(313deg, #7266DE 0%, #9ACBF1 48%, #7348D8 100%)"}},[a("div",{staticClass:"farms-l"},[a("div",{staticClass:"farms-icon"},[a("v-img",{staticStyle:{width:"100%",height:"100%","border-radius":"100%",border:"2px solid #FFFF"},attrs:{src:t.LOGO_URL}})],1),a("div",{staticClass:"single-logo"},[a("v-img",{attrs:{src:n("c979")}})],1)]),a("div",{staticClass:"farms-r"},[a("div",{staticClass:"farms-car-title"},[e._v(e._s(t["symbol"]))]),a("div",{staticClass:"farms-car-core"},[a("div",{staticClass:"identification"},[a("div",{staticClass:"identification-icon"},[a("v-img",{attrs:{src:n("c7a2")}})],1)]),a("div",{staticClass:"multiple"},[e._v(e._s(t["point"])+"X")])])])]),a("div",{staticClass:"farms-single-car"},[a("div",{staticClass:"farms-apr-subject"},[a("div",{staticClass:"farms-apr"},[a("div",{staticClass:"farms-apr-l"},[e._v(e._s(e.$t("earn").apr)+":")]),a("div",{staticClass:"farms-apr-r"},[a("div",{staticClass:"farms-apr-text"},[e._v(" "+e._s(t["Apy"])+"% ")])])]),a("div",{staticClass:"farms-apr"},[a("div",{staticClass:"farms-apr-l"},[e._v(e._s(e.$t("earn").earn)+":")]),a("div",{staticClass:"farms-apr-r"},[a("div",{staticClass:"farms-apr-text"},[e._v(e._s(e.$t("currency").btcPi))])])])]),a("div",{staticClass:"farms-harvest"},[a("div",{staticClass:"farms-harvest-subject"},[a("div",{staticClass:"farms-harvest-l"},[a("div",{staticClass:"harvest-title"},[e._v(e._s(e.$t("currency").btcPi))]),a("div",{staticClass:"harvest-text"},[e._v(e._s(e.$t("earn").earned))])]),a("div",{staticClass:"btc-tooltip"},[a("v-img",{staticClass:"tooltip-icon",attrs:{src:n("6cbb")}}),a("div",{staticClass:"btc-tooltip-text"},[e._v(e._s(e.$t("public").tooltip))])],1)]),a("div",{staticClass:"farms-harvest-car"},[a("div",{staticClass:"farms-harvest-car-l",style:{color:0!==t.Earnings?"#3772FF":""}},[e._v(e._s(t["Earnings"]))]),a("div",{staticClass:"farms-harvest-car-r"},[0===t.Earnings?a("v-btn",{staticClass:"farms-harvest-bnt",attrs:{elevation:"0",color:"#8A9AC2"}},[e._v(e._s(e.$t("earn").harvest))]):e._e(),0!==t.Earnings?a("v-btn",{staticClass:"farms-harvest-bnt",staticStyle:{background:"linear-gradient(180deg, #3B6CFE 0%, #5C42FD 100%)"},attrs:{elevation:"0"},on:{click:function(t){return e.itemHarvest(r)}}},[e._v(e._s(e.$t("earn").harvest))]):e._e()],1)])])]),a("div",{staticClass:"farms-contract"},[a("div",{staticClass:"farms-contract-subject"},[a("div",{staticClass:"farms-contract-title"},[e._v(e._s(t["symbol"]))]),a("div",{staticClass:"farms-contract-text"},[e._v(e._s(e.$t("earn").staked))])]),a("div",{staticClass:"farms-contract-bnt-subject"},[""===e.walletAddress?a("v-btn",{staticClass:"farms-contract-bnt",attrs:{elevation:"0"},on:{click:e.connect}},[e._v(e._s(e.$t("public").connect))]):e._e(),""!==e.walletAddress&&0===t.Allowance?a("v-btn",{staticClass:"farms-contract-bnt",attrs:{elevation:"0"},on:{click:function(t){return e.itemUserApprove(r)}}},[e._v(e._s(e.$t("public").authorize))]):e._e(),""!==e.walletAddress&&0!==t.Allowance&&"0"===t.Lpnum?a("div",{staticClass:"farms-lp"},[a("div",{staticClass:"farms-lp-car",on:{click:function(t){return e.itemlPBnt(r)}}},[e._v(e._s(e.semicolon(t["Lpnum"],8)))]),a("v-btn",{staticClass:"farms-lp-bnt",attrs:{elevation:"0"},on:{click:function(t){return e.itemlPBnt(r)}}},[e._v(e._s(e.$t("earn").stake))])],1):e._e(),""!==e.walletAddress&&0!==t.Allowance&&"0"!==t.Lpnum?a("div",{staticClass:"farms-price"},[a("div",{staticClass:"farms-price-l"},[a("div",{staticClass:"farms-price-title"},[e._v(e._s(e.semicolon(t["Lpnum"],8)))]),a("div",{staticClass:"farms-price-text"},[e._v("~"+e._s(e.semicolon(t.VLpnum,4))+" "+e._s(e.$t("currency").usdt))])]),a("div",{staticClass:"farms-price-r"},[a("div",{staticClass:"farms-price-bnt del",attrs:{elevation:"0"},on:{click:function(t){return e.itemunstakeLpTokens(r,0)}}},[e._v("-")]),a("div",{staticClass:"farms-price-bnt add",attrs:{elevation:"0"},on:{click:function(t){return e.itemunstakeLpTokens(r,1)}}},[e._v("+")])])]):e._e()],1)]),a("v-divider",{staticStyle:{background:"#8A9AC2",height:"1px",opacity:"0.5"}}),a("div",{staticClass:"farms-subject"},[!1===e.getIndexClick1[r]?a("div",{staticClass:"farms-details",on:{click:function(t){return e.detailsClickStatus1(r)}}},[a("span",{staticClass:"farms-details-title"},[e._v(e._s(e.$t("earn").details))]),a("v-img",{staticClass:"details-icon",attrs:{src:n("a5d6")}})],1):e._e(),!0===e.getIndexClick1[r]?a("div",{staticClass:"farms-details",on:{click:function(t){return e.detailsClickStatus1(r)}}},[a("span",{staticClass:"farms-details-title"},[e._v(e._s(e.$t("earn").hide))]),a("v-img",{staticClass:"details-icon",attrs:{src:n("9e1b")}})],1):e._e(),!0===e.getIndexClick1[r]?a("div",{staticClass:"farms-end"},[a("div",{staticClass:"farms-end-subject"},[a("div",{staticClass:"farms-end-l"},[e._v(e._s(e.$t("earn").totalLiquidity)+":")]),a("div",{staticClass:"farms-end-r"},[e._v("$"+e._s(e.semicolon(t.VLiquidityall,4)))])]),a("div",{staticClass:"farms-end-link"},[a("div",{staticClass:"farms-end-flex",on:{click:function(n){return e.openUrl("https://pancakeswap.finance/swap?inputCurrency=BNB&outputCurrency="+t.Token)}}},[a("span",[e._v(e._s(e.$t("earn").seeTokenInfo)+" "+e._s(t["symbol"]))]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)]),a("div",{staticClass:"farms-end-flex",on:{click:function(n){return e.openUrl("https://bscscan.com/address/"+t.Token+"#code")}}},[a("span",[e._v(e._s(e.$t("earn").viewTutorial))]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)]),a("div",{staticClass:"farms-end-flex",on:{click:function(n){return e.openUrl("https://bscscan.com/token/"+t.Token)}}},[a("span",[e._v(e._s(e.$t("earn").viewContract))]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)])])]):e._e()])],1)})),a("div",{staticClass:"subject single"},[a("div",{staticClass:"farms-car-top",staticStyle:{background:"linear-gradient(313deg, #F0C03D 0%, #FF8A4D 48%, #F0B81D 100%)"}},[a("div",{staticClass:"farms-l"},[a("div",{staticClass:"farms-icon"},[a("v-img",{attrs:{src:n("3bf2")}})],1),a("div",{staticClass:"spacepi-logo"},[a("v-img",{attrs:{src:n("3729")}})],1)]),a("div",{staticClass:"farms-r"},[a("div",{staticClass:"farms-car-title"},[e._v(e._s(e.tokenlist[4]["Pair"]))]),a("div",{staticClass:"farms-car-core"},[a("div",{staticClass:"identification"},[a("div",{staticClass:"identification-icon"},[a("v-img",{attrs:{src:n("13d4")}})],1)]),a("div",{staticClass:"multiple"},[e._v(e._s(e.tokenlist[4]["point"])+"X")])])])]),a("div",{staticClass:"farms-single-car"},[a("div",{staticClass:"farms-apr-subject"},[a("div",{staticClass:"farms-apr"},[a("div",{staticClass:"farms-apr-l"},[e._v(e._s(e.$t("earn").apr)+":")]),a("div",{staticClass:"farms-apr-r"},[a("div",{staticClass:"farms-apr-text"},[e._v(" "+e._s(e.piar[4].APR)+"% ")])])]),a("div",{staticClass:"farms-apr"},[a("div",{staticClass:"farms-apr-l"},[e._v(e._s(e.$t("earn").earn)+":")]),a("div",{staticClass:"farms-apr-r"},[a("div",{staticClass:"farms-apr-text"},[e._v(e._s(e.$t("currency").btcPi))])])])]),a("div",{staticClass:"farms-harvest"},[a("div",{staticClass:"farms-harvest-subject"},[a("div",{staticClass:"farms-harvest-l"},[a("div",{staticClass:"harvest-title"},[e._v(e._s(e.$t("currency").btcPi))]),a("div",{staticClass:"harvest-text"},[e._v(e._s(e.$t("earn").earned))])]),a("div",{staticClass:"btc-tooltip"},[a("v-img",{staticClass:"tooltip-icon",attrs:{src:n("6cbb")}}),a("div",{staticClass:"btc-tooltip-text"},[e._v(e._s(e.$t("public").tooltip))])],1)]),a("div",{staticClass:"farms-harvest-car"},[a("div",{staticClass:"farms-harvest-car-l",style:{color:0!==e.tokenlist[4].Earnings?"#3772FF":""}},[e._v(e._s(e.tokenlist[4]["Earnings"]))]),a("div",{staticClass:"farms-harvest-car-r"},[0===e.tokenlist[4].Earnings?a("v-btn",{staticClass:"farms-harvest-bnt",attrs:{elevation:"0",color:"#8A9AC2"}},[e._v(e._s(e.$t("earn").harvest))]):e._e(),0!==e.tokenlist[4].Earnings?a("v-btn",{staticClass:"farms-harvest-bnt",staticStyle:{background:"linear-gradient(180deg, #3B6CFE 0%, #5C42FD 100%)"},attrs:{elevation:"0"},on:{click:function(t){return e.Harvest(4)}}},[e._v(e._s(e.$t("earn").harvest))]):e._e()],1)])])]),a("div",{staticClass:"farms-contract"},[a("div",{staticClass:"farms-contract-subject"},[a("div",{staticClass:"farms-contract-title"},[e._v(e._s(e.tokenlist[4]["Pair"])+" LP")]),a("div",{staticClass:"farms-contract-text"},[e._v(e._s(e.$t("earn").staked))])]),a("div",{staticClass:"farms-contract-bnt-subject"},[""===e.walletAddress?a("v-btn",{staticClass:"farms-contract-bnt",attrs:{elevation:"0"},on:{click:e.connect}},[e._v(e._s(e.$t("public").connect))]):e._e(),""!==e.walletAddress&&0===e.tokenlist[4].Allowance?a("v-btn",{staticClass:"farms-contract-bnt",attrs:{elevation:"0"},on:{click:function(t){return e.UserApprove(4)}}},[e._v(e._s(e.$t("public").authorize))]):e._e(),""!==e.walletAddress&&0!==e.tokenlist[4].Allowance&&"0"===e.tokenlist[4].Lpnum?a("div",{staticClass:"farms-lp"},[a("div",{staticClass:"farms-lp-car",on:{click:function(t){return e.lPBnt(4)}}},[e._v(e._s(e.semicolon(e.tokenlist[4]["Lpnum"],4)))]),a("v-btn",{staticClass:"farms-lp-bnt",attrs:{elevation:"0"},on:{click:function(t){return e.lPBnt(4)}}},[e._v(e._s(e.$t("earn").stakeLp))])],1):e._e(),""!==e.walletAddress&&0!==e.tokenlist[4].Allowance&&"0"!==e.tokenlist[4].Lpnum?a("div",{staticClass:"farms-price"},[a("div",{staticClass:"farms-price-l"},[a("div",{staticClass:"farms-price-title"},[e._v(e._s(e.semicolon(e.tokenlist[4]["Lpnum"],12)))]),a("div",{staticClass:"farms-price-text"},[e._v("~"+e._s(e.semicolon(e.piar[4].Liquidity,4))+" "+e._s(e.$t("currency").usdt))])]),a("div",{staticClass:"farms-price-r"},[a("div",{staticClass:"farms-price-bnt del",attrs:{elevation:"0"},on:{click:function(t){return e.unstakeLpTokens(4,0)}}},[e._v("-")]),a("div",{staticClass:"farms-price-bnt add",attrs:{elevation:"0"},on:{click:function(t){return e.unstakeLpTokens(4,1)}}},[e._v("+")])])]):e._e()],1)]),a("v-divider",{staticStyle:{background:"#8A9AC2",height:"1px",opacity:"0"}}),a("div",{staticClass:"farms-subject"},[!1===e.getIndexClick[5]?a("div",{staticClass:"farms-details",on:{click:function(t){return e.detailsClickStatus(5)}}},[a("span",{staticClass:"farms-details-title"},[e._v(e._s(e.$t("earn").details))]),a("v-img",{staticClass:"details-icon",attrs:{src:n("a5d6")}})],1):e._e(),!0===e.getIndexClick[5]?a("div",{staticClass:"farms-details",on:{click:function(t){return e.detailsClickStatus(5)}}},[a("span",{staticClass:"farms-details-title"},[e._v(e._s(e.$t("earn").hide))]),a("v-img",{staticClass:"details-icon",attrs:{src:n("9e1b")}})],1):e._e(),!0===e.getIndexClick[5]?a("div",{staticClass:"farms-end"},[a("div",{staticClass:"farms-end-subject"},[a("div",{staticClass:"farms-end-l"},[e._v(e._s(e.$t("earn").totalLiquidity)+":")]),a("div",{staticClass:"farms-end-r"},[e._v("$"+e._s(e.semicolon(e.piar[4].Liquidityall,4)))])]),a("div",{staticClass:"farms-end-link"},[a("div",{staticClass:"farms-end-flex",on:{click:function(t){e.openUrl(e.$t("earn").earnUrl5[0])}}},[a("span",[e._v(e._s(e.$t("earn").seeTokenInfo)+" "+e._s(e.tokenlist[4]["Pair"])+" LP")]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)]),a("div",{staticClass:"farms-end-flex",on:{click:function(t){e.openUrl(e.$t("earn").earnUrl5[1])}}},[a("span",[e._v(e._s(e.$t("earn").viewTutorial))]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)]),a("div",{staticClass:"farms-end-flex",on:{click:function(t){e.openUrl(e.$t("earn").earnUrl5[2])}}},[a("span",[e._v(e._s(e.$t("earn").viewContract))]),a("div",{staticClass:"link-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)])])]):e._e()])],1)],2)],1)])],1)},Ne=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"form-l"},[n("input",{attrs:{type:"text",placeholder:"Search Farms"}})])}],We=n("d0af"),He=(n("3ca3"),n("ddb0"),n("b0c0"),function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"animation"}})}),Xe=[],Ye=n("2376"),Je={name:"farmsAnimation",components:{},data:function(){return{defaultOptions:{animationData:Ye},animationSpeed:1,anim:{}}},mounted:function(){this.svgFun()},methods:{svgFun:function(){var e={container:document.getElementById("animation"),renderer:"svg",loop:!0,autoplay:!0,animationData:Ye};Z.a.loadAnimation(e)}}},Ze=Je,Qe=Object(m["a"])(Ze,He,Xe,!1,null,null,null),Ke=Qe.exports,et=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("v-overlay",{attrs:{absolute:!1,value:e.status,dark:!1}},[a("div",{staticClass:"stakeLpTokens"},[a("div",{staticClass:"stakeLpTokens-top"},[a("div",{staticClass:"stakeLpTokens-l"},[e._v(e._s(e.pool.Pair))]),a("div",{staticClass:"stakeLpTokens-r",on:{click:function(t){return e.closureClick()}}},[a("v-img",{attrs:{src:n("2dbf")}})],1)]),a("div",{staticClass:"stakeLpTokens-stake"},[a("div",{staticClass:"stakeLpTokens-stake-subject"},[a("div",{staticClass:"stakeLpTokens-stake-title"},[e._v(e._s(e.$t("earn").stake))]),a("div",{staticClass:"stakeLpTokens-stake-text"},[e._v(e._s(e.$t("public").balance)+"："+e._s(e.pool.balance))])]),a("div",{staticClass:"stakeLpTokens-stake-input"},[a("input",{directives:[{name:"model",rawName:"v-model",value:e.lpnum,expression:"lpnum"}],staticClass:"stakeLpTokens-input",attrs:{placeholder:"0.00"},domProps:{value:e.lpnum},on:{keyup:e.getInput,input:function(t){t.target.composing||(e.lpnum=t.target.value)}}}),a("v-btn",{staticClass:"stakeLpTokens-stake-input-bnt",attrs:{elevation:"0"},on:{click:e.Max}},[e._v(e._s(e.$t("public").max))])],1)]),a("div",{staticClass:"function"},[a("v-btn",{staticClass:"function-cancel",attrs:{elevation:"0"},on:{click:function(t){return e.closureClick()}}},[e._v(e._s(e.$t("public").cancel))]),e.confirmStatus?a("v-btn",{staticClass:"function-confirm",staticStyle:{background:"#3772FF",color:"#ffffff"},attrs:{elevation:"0"},on:{click:e.confirm}},[e._v(e._s(e.$t("public").confirm))]):a("v-btn",{staticClass:"function-confirm",attrs:{depressed:"",disabled:"",elevation:"0"}},[e._v(e._s(e.$t("public").confirm))])],1),a("div",{staticClass:"getlp",on:{click:function(t){return e.openUrl(e.url)}}},[e.pool.Pair?a("span",[e._v(e._s(e.$t("earn").seeTokenInfo)+" "+e._s(e.pool.Pair))]):e._e(),e.pool.symbol?a("span",[e._v(e._s(e.$t("earn").seeTokenInfo)+" "+e._s(e.pool.symbol))]):e._e(),a("div",{staticClass:"getlp-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)])])])},tt=[],nt=n("901e"),at=n.n(nt),rt=ye(me.spaceStationAbi),it=rt.contractObject,st={name:"stakeLpTokens",data:function(){return{confirmStatus:!1,lpnum:0}},props:{status:{type:Boolean,default:!1},pool:{type:Object,default:{}},url:{type:String,default:""}},computed:Object(s["a"])({},Object(b["d"])(["overflowY","stakeLpTokensStatus","walletAddress","blockHeight"])),watch:{pool:{handler:function(e,t){this.lpnum=0,0==Number(this.pool.balance)&&(this.pool.balance=0),0==Number(this.pool.Lpnum)&&(this.pool.Lpnum=0),this.confirmStatus=!1}}},components:{},created:function(){},mounted:function(){},methods:Object(s["a"])(Object(s["a"])({},Object(b["c"])(["updatealert"])),{},{getInput:function(e){var t=this.pool.balance,n=this.pool.setdecimal;isNaN(n)&&(n=this.pool.decimal);var a=e.target.value;if(this.lpnum=e.target.value,this.lpnum>0?this.confirmStatus=!0:this.confirmStatus=!1,isNaN(e.target.value)&&(this.lpnum=0,this.confirmStatus=!1),0==e.target.value.substr(1,1))0==e.target.value.substr(0,1)&&(e.target.value=0,this.confirmStatus=!1);else if("."!=e.target.value.substr(1,1)){var r=a;e.target.value=r.replace(/^[0]+/,"")}4==n?this.confirmStatus=!!e.target.value.match(/\d+(\.\d{0,4})?/):8==n?this.confirmStatus=!!e.target.value.match(/\d+(\.\d{0,8})?/):14==n?this.confirmStatus=!!e.target.value.match(/\d+(\.\d{0,14})?/):18==n&&(this.confirmStatus=!!e.target.value.match(/\d+(\.\d{0,18})?/)),new at.a(e.target.value).gt(t)&&(this.confirmStatus=!1,console.log("2",e.target.value,t))},closureClick:function(){this.lpnum=0,this.confirmStatus=!1,this.$store.commit("updatestakeLpTokensStatus",!1)},Max:function(){var e=this.pool.setdecimal;isNaN(e)&&(e=this.pool.decimal),4==e?this.lpnum=this.pool.balance.toString().match(/\d+(\.\d{0,4})?/)?this.pool.balance.toString().match(/\d+(\.\d{0,4})?/)[0]:"":8==e?this.lpnum=this.pool.balance.toString().match(/\d+(\.\d{0,8})?/)?this.pool.balance.toString().match(/\d+(\.\d{0,8})?/)[0]:"":14==e?this.lpnum=this.pool.balance.toString().match(/\d+(\.\d{0,14})?/)?this.pool.balance.toString().match(/\d+(\.\d{0,14})?/)[0]:"":18==e&&(this.lpnum=this.pool.balance.toString().match(/\d+(\.\d{0,18})?/)?this.pool.balance.toString().match(/\d+(\.\d{0,18})?/)[0]:""),this.lpnum=this.pool.balance,Number(this.lpnum)<=0?(0==Number(this.lpnum)&&(this.lpnum=0),this.confirmStatus=!1):this.confirmStatus=!0},confirm:function(){var e=this;return Object(d["a"])(regeneratorRuntime.mark((function t(){var n,a,r;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return n=e.lpnum,18==e.pool.decimal?n=pe.utils.toWei(e.lpnum.toString()):9==e.pool.decimal?(a=new at.a(10).pow(new at.a(e.pool.decimal)),n=new at.a(e.lpnum).times(a).toFixed()):8==e.pool.decimal&&(r=new at.a(10).pow(new at.a(e.pool.decimal)),n=new at.a(e.lpnum).times(r).toFixed()),e.$store.commit("updatealert",{status:!0,text:e.$t("alert").earn.lodingAdd,type:"info"}),console.log(n),t.next=6,it.methods.deposit(e.pool.Id,n).send({from:e.walletAddress}).then((function(){e.$store.commit("updatealert",{status:!0,text:e.$t("alert").earn.StakingSuccess,type:"success"}),e.lpnum=0,e.confirmStatus=!1,setTimeout((function(){e.$store.commit("updatestakeLpTokensStatus",!1),e.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)})).catch((function(){e.$store.commit("updatealert",{status:!0,text:e.$t("alert").earn.StakingError,type:"error"}),setTimeout((function(){e.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)}));case 6:t.sent;case 7:case"end":return t.stop()}}),t)})))()},openUrl:function(e){""!=e&&window.open(e,"_blank")}})},ot=st,ct=(n("e6ad"),n("a797")),dt=Object(m["a"])(ot,et,tt,!1,null,"6f628123",null),lt=dt.exports;h()(dt,{VBtn:k["a"],VImg:x["a"],VOverlay:ct["a"]});var ut=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("v-overlay",{attrs:{absolute:!1,value:e.status,dark:!1}},[a("div",{staticClass:"stakeLpTokens"},[a("div",{staticClass:"stakeLpTokens-top"},[a("div",{staticClass:"stakeLpTokens-l"},[e._v(e._s(e.$t("earn").unstakeLPTokens))]),a("div",{staticClass:"stakeLpTokens-r",on:{click:function(t){return e.closureClick()}}},[a("v-img",{attrs:{src:n("2dbf")}})],1)]),a("div",{staticClass:"stakeLpTokens-stake"},[a("div",{staticClass:"stakeLpTokens-stake-subject"},[0===e.type?a("div",{staticClass:"stakeLpTokens-stake-title"},[e._v(e._s(e.$t("earn").unstake1))]):e._e(),1===e.type?a("div",{staticClass:"stakeLpTokens-stake-title"},[e._v(e._s(e.$t("earn").unstake))]):e._e(),0===e.type?a("div",{staticClass:"stakeLpTokens-stake-text"},[e._v(e._s(e.$t("public").balance)+"："+e._s(e.pool.Lpnum))]):e._e(),1===e.type?a("div",{staticClass:"stakeLpTokens-stake-text"},[e._v(e._s(e.$t("public").balance)+"："+e._s(e.pool.balance))]):e._e()]),a("div",{staticClass:"stakeLpTokens-stake-input"},[a("input",{directives:[{name:"model",rawName:"v-model",value:e.lpnum,expression:"lpnum"}],staticClass:"stakeLpTokens-input",attrs:{placeholder:"0.00"},domProps:{value:e.lpnum},on:{keyup:e.getInput,input:function(t){t.target.composing||(e.lpnum=t.target.value)}}}),a("v-btn",{staticClass:"stakeLpTokens-stake-input-bnt",attrs:{elevation:"0"},on:{click:e.Max}},[e._v(e._s(e.$t("public").max))])],1)]),a("div",{staticClass:"function"},[a("v-btn",{staticClass:"function-cancel",attrs:{elevation:"0"},on:{click:function(t){return e.closureClick()}}},[e._v(e._s(e.$t("public").cancel))]),e.confirmStatus?a("v-btn",{staticClass:"function-confirm",staticStyle:{background:"#3772FF",color:"#ffffff"},attrs:{elevation:"0"},on:{click:e.confirm}},[e._v(e._s(e.$t("public").confirm))]):a("v-btn",{staticClass:"function-confirm",attrs:{depressed:"",disabled:"",elevation:"0"}},[e._v(e._s(e.$t("public").confirm))])],1),a("div",{staticClass:"getlp",on:{click:function(t){return e.openUrl(e.url)}}},[e.pool.Pair?a("span",[e._v(e._s(e.$t("earn").seeTokenInfo)+" "+e._s(e.pool.Pair))]):e._e(),e.pool.symbol?a("span",[e._v(e._s(e.$t("earn").seeTokenInfo)+" "+e._s(e.pool.symbol))]):e._e(),a("div",{staticClass:"getlp-icon"},[a("v-img",{attrs:{src:n("14ac")}})],1)])])])},bt=[],ft=ye(me.spaceStationAbi),pt=ft.contractObject,mt={name:"unstakeLpTokens",data:function(){return{confirmStatus:!1,lpnum:0}},props:{status:{type:Boolean,default:!1},pool:{type:Object,default:{}},type:{type:Number,default:0},url:{type:String,default:""}},computed:Object(s["a"])({},Object(b["d"])(["overflowY","updateunstakeLpTokensStatus","walletAddress","blockHeight"])),watch:{pool:{handler:function(e,t){this.lpnum=0,0==Number(this.pool.balance)&&(this.pool.balance=0),0==Number(this.pool.Lpnum)&&(this.pool.Lpnum=0),this.confirmStatus=!1}},type:{handler:function(e,t){this.lpnum=0,this.confirmStatus=!1}}},components:{},created:function(){},mounted:function(){},methods:Object(s["a"])(Object(s["a"])({},Object(b["c"])(["updatealert"])),{},{getInput:function(e){var t=0,n=this.pool.setdecimal;isNaN(n)&&(n=this.pool.decimal);var a=e.target.value;if(0===this.type?t=this.pool.Lpnum:1===this.type&&(t=this.pool.balance),this.lpnum>0?this.confirmStatus=!0:this.confirmStatus=!1,isNaN(e.target.value)&&(this.lpnum=0,this.confirmStatus=!1),0==e.target.value.substr(1,1))0==e.target.value.substr(0,1)&&(e.target.value=0,this.confirmStatus=!1);else if("."!=e.target.value.substr(1,1)){var r=a;e.target.value=r.replace(/^[0]+/,"")}this.lpnum=e.target.value,4==n?this.confirmStatus=!!e.target.value.match(/\d+(\.\d{0,4})?/):8==n?this.confirmStatus=!!e.target.value.match(/\d+(\.\d{0,8})?/):14==n?this.confirmStatus=!!e.target.value.match(/\d+(\.\d{0,14})?/):18==n&&(this.confirmStatus=!!e.target.value.match(/\d+(\.\d{0,18})?/)),console.log("eq",new at.a(e.target.value).gt(t)),new at.a(e.target.value).gt(t)&&(this.confirmStatus=!1,console.log("2",e.target.value,t))},Max:function(){var e=0,t=this.pool.setdecimal;isNaN(t)&&(t=this.pool.decimal),0===this.type?e=this.pool.Lpnum:1===this.type&&(e=this.pool.balance),4==t?this.lpnum=e.toString().match(/\d+(\.\d{0,4})?/)?e.toString().match(/\d+(\.\d{0,4})?/)[0]:"":8==t?this.lpnum=e.toString().match(/\d+(\.\d{0,8})?/)?e.toString().match(/\d+(\.\d{0,8})?/)[0]:"":14==t?this.lpnum=e.toString().match(/\d+(\.\d{0,14})?/)?e.toString().match(/\d+(\.\d{0,14})?/)[0]:"":18==t&&(this.lpnum=e.toString().match(/\d+(\.\d{0,18})?/)?e.toString().match(/\d+(\.\d{0,18})?/)[0]:""),this.lpnum=e,Number(this.lpnum)<=0?(0==Number(this.lpnum)&&(this.lpnum=0),this.confirmStatus=!1):this.confirmStatus=!0},closureClick:function(){this.lpnum=0,this.$store.commit("updateunstakeLpTokensStatus",!1)},confirm:function(){var e=this;return Object(d["a"])(regeneratorRuntime.mark((function t(){var n,a,r;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(n=e.lpnum,18==e.pool.decimal?n=pe.utils.toWei(e.lpnum.toString()):9==e.pool.decimal?(a=new at.a(10).pow(new at.a(e.pool.decimal)),n=new at.a(e.lpnum).times(a).toFixed()):8==e.pool.decimal&&(r=new at.a(10).pow(new at.a(e.pool.decimal)),n=new at.a(e.lpnum).times(r).toFixed()),e.$store.commit("updatealert",{status:!0,text:e.$t("alert").earn.lodingAdd,type:"info"}),0!==e.type){t.next=9;break}return t.next=6,pt.methods.withdraw(e.pool.Id,n).send({from:e.walletAddress}).then((function(){e.$store.commit("updatealert",{status:!0,text:e.$t("alert").earn.LpwithdrawnSuccess,type:"success"}),e.lpnum=0,e.confirmStatus=!1,setTimeout((function(){e.$store.commit("updateunstakeLpTokensStatus",!1),e.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)})).catch((function(){e.$store.commit("updatealert",{status:!0,text:e.$t("alert").earn.LpwithdrawnError,type:"error"}),setTimeout((function(){e.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)}));case 6:t.sent,t.next=13;break;case 9:if(1!==e.type){t.next=13;break}return t.next=12,pt.methods.deposit(e.pool.Id,n).send({from:e.walletAddress}).then((function(){e.$store.commit("updatealert",{status:!0,text:e.$t("alert").earn.LpAddSuccess,type:"success"}),e.lpnum=0,e.confirmStatus=!1,setTimeout((function(){e.$store.commit("updateunstakeLpTokensStatus",!1),e.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)})).catch((function(){e.$store.commit("updatealert",{status:!0,text:e.$t("alert").earn.LpAddError,type:"error"}),setTimeout((function(){e.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)}));case 12:t.sent;case 13:case"end":return t.stop()}}),t)})))()},openUrl:function(e){""!=e&&window.open(e,"_blank")}})},yt=mt,ht=(n("4042"),Object(m["a"])(yt,ut,bt,!1,null,"4e3efe5c",null)),vt=ht.exports;h()(ht,{VBtn:k["a"],VImg:x["a"],VOverlay:ct["a"]});var kt=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("span",{staticClass:"countdown",attrs:{endTime:e.endTime,endText:e.endText}},[e._t("default",(function(){return[n("div",{staticClass:"countdown-car"},[e._v(e._s(e.day))]),n("div",{staticClass:"countdown-fillet"},[e._v(":")]),n("div",{staticClass:"countdown-car"},[e._v(e._s(e.hour))]),n("div",{staticClass:"countdown-fillet"},[e._v(":")]),n("div",{staticClass:"countdown-car"},[e._v(e._s(e.min))]),n("div",{staticClass:"countdown-fillet"},[e._v(":")]),n("div",{staticClass:"countdown-car"},[e._v(e._s(e.sec))])]}))],2)},xt=[],gt={name:"countdown",data:function(){return{content:"",day:"?",hour:"?",min:"?",sec:"?"}},props:{endTime:{type:Number,default:""},endText:{type:String,default:"?:?:?:?"}},mounted:function(){this.countdowm(this.endTime/1e3)},methods:{countdowm:function(e){var t=this,n=setInterval((function(){var a=new Date,r=new Date(1e3*e),i=r.getTime()-a.getTime();if(i>0){var s=Math.floor(i/864e5),o=Math.floor(i/36e5%24),c=Math.floor(i/6e4%60),d=Math.floor(i/1e3%60);o=o<10?"0"+o:o,c=c<10?"0"+c:c,d=d<10?"0"+d:d;var l="";s>0&&(l="".concat(s," : ").concat(o," : ").concat(c," : ").concat(d)),s<=0&&o>0&&(l="".concat(o," : ").concat(c," : ").concat(d)),s<=0&&o<=0&&(l="".concat(c," : ").concat(d)),t.day="".concat(s),t.hour="".concat(o),t.min="".concat(c),t.sec="".concat(d),t.content=l}else clearInterval(n),t.content=t.endText,t._callback()}),1e3)},_callback:function(){this.callback&&this.callback instanceof Function&&this.callback.apply(this,Object(xe["a"])(this))}}},wt=gt,_t=(n("0629"),Object(m["a"])(wt,kt,xt,!1,null,"46868552",null)),Ct=_t.exports,Tt=n("4a84"),St=n("7f67"),At=n("0fee"),Et=ye(me.spaceStationAbi),Bt=Et.contractObject,Pt=ye(me.MineStakeAbi),Dt=(Pt.contractObject,{name:"farms",data:function(){return{earnUrl:"",functionTab:[!0,!1],select:["Foo","Bar","Fizz","Buzz"],getIndexClick:[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1],height:"",getIndexClick1:[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1],publicInfo:{totalAllowPoint:0,halved:0,startBlock:0,halvingPeriod:0,nextHalving:0,perBlock:0,initPerBlock:0,nexttime:0},LPtoken:{Id:0,Pair:"",Token:"",Apy:10,point:0,Lpnum:0,Earnings:0,Liquidity:0,balance:0,decimal:9,Allowance:0,setdecimal:4,setallowance:"10000000000000000000000"},tokenPiar:{SpacePi:"0x69b14e8d3cebfdd8196bfe530954a0c226e5008e",BTCPI:"0x4aaad68be1a2ac9886b72b9dae474f3edd2132d9",USDC:"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",USDT:"0x55d398326f99059ff775485246999027b3197955",BUSD:"0xe9e7cea3dedca5984780bafc599bd69add087d56",FIST:"0xc9882def23bc42d53895b8361d0b1edc7570bc6a"},tokenPrice:{SpacePi:0,BTCPI:0,USDC:0,FIST:0},endtime:1719237609788,count:0,LPtype:0,tokenlist:[{Id:0,Pair:"SpacePi",Token:"0x69b14e8d3cebfdd8196bfe530954a0c226e5008e",Apy:"?",APR:"?",point:"?",Lpnum:0,Earnings:0,Liquidity:0,balance:0,decimal:9,Allowance:0,setdecimal:4,setallowance:"10000000000000000000000"},{Id:1,Pair:"SpacePi-USDC",Token:"0xc736d81c0d96e21fafdf30083fd812a3de41a203",Apy:"?",APR:"?",point:"?",Lpnum:0,Earnings:0,Liquidity:0,balance:0,decimal:18,Allowance:0,setdecimal:14,setallowance:"10000000000000000000000000"},{Id:2,Pair:"BTCPi-USDC",Token:"0x5d41418a006587038c4740c75c1d688cbaa6427e",Apy:"?",APR:"?",point:"?",Lpnum:0,Earnings:0,Liquidity:0,balance:0,decimal:18,Allowance:0,setdecimal:14,setallowance:"10000000000000000000000000"},{Id:3,Pair:"BTCPi-SpacePi",Token:"0xbca91e8842408f00577ee80db8dcfa24d7c1e627",Apy:"?",APR:"?",point:"?",Lpnum:0,Earnings:0,Liquidity:0,balance:0,decimal:18,Allowance:0,setdecimal:14,setallowance:"10000000000000000000000000"},{Id:4,Pair:"SpacePi-FIST",Token:"0x295fcf5d8c8de480324f59cd29c93a8072741867",Apy:"??",APR:"??",point:"??",Lpnum:0,Earnings:0,Liquidity:0,balance:0,decimal:18,Allowance:0,setdecimal:18,setallowance:"100000000000000000000"}],tokenlistdev:[{Id:0,Pair:"SpacePi",Token:"0x69b14e8d3cebfdd8196bfe530954a0c226e5008e",Apy:"?",APR:"?",point:"?",Lpnum:0,Earnings:0,Liquidity:0,balance:0,decimal:9,Allowance:0,setdecimal:4,setallowance:"10000000000000000000000"},{Id:1,Pair:"SpacePi-USDC",Token:"0xc736d81c0d96e21fafdf30083fd812a3de41a203",Apy:"?",APR:"?",point:"?",Lpnum:0,Earnings:0,Liquidity:0,balance:0,decimal:18,Allowance:0,setdecimal:14,setallowance:"10000000000000000000000000"},{Id:2,Pair:"BTCPi-USDC",Token:"0x5d41418a006587038c4740c75c1d688cbaa6427e",Apy:"?",APR:"?",point:"?",Lpnum:0,Earnings:0,Liquidity:0,balance:0,decimal:18,Allowance:0,setdecimal:14,setallowance:"10000000000000000000000000"},{Id:3,Pair:"BTCPi-SpacePi",Token:"0xbca91e8842408f00577ee80db8dcfa24d7c1e627",Apy:"?",APR:"?",point:"?",Lpnum:0,Earnings:0,Liquidity:0,balance:0,decimal:18,Allowance:0,setdecimal:14,setallowance:"10000000000000000000000000"},{Id:4,Pair:"SpacePi-FIST",Token:"0x295fcf5d8c8de480324f59cd29c93a8072741867",Apy:"??",APR:"??",point:"??",Lpnum:0,Earnings:0,Liquidity:0,balance:0,decimal:18,Allowance:0,setdecimal:18,setallowance:"100000000000000000000"}],reslog:[],piar:[{Lpnumall:0,Lpnum:0,Liquidity:0,Liquidityall:0,APR:0},{Lpnumall:0,Lpnum:0,Liquidity:0,Liquidityall:0,APR:0},{Lpnumall:0,Lpnum:0,Liquidity:0,Liquidityall:0,APR:0},{Lpnumall:0,Lpnum:0,Liquidity:0,Liquidityall:0,APR:0},{Lpnumall:0,Lpnum:0,Liquidity:0,Liquidityall:0,APR:0}],tokens:[]}},computed:Object(s["a"])({},Object(b["d"])(["overflowY","stakeLpTokensStatus","unstakeLpTokensStatus","walletAddress","blockHeight","alert"])),components:{farmsAnimation:Ke,stakeLpTokens:lt,unstakeLpTokens:vt,countdown:Ct},watch:{walletAddress:{handler:function(e,t){this.getjsontokens(),this.timesopt(),""!==e?(this.getpool(),this.getjsontokens()):this.tokenlist=this.tokenlistdev},immediate:!0},count:{handler:function(e,t){0===e&&""!==this.walletAddress&&(this.timesopt(),this.getBlockHeight(),this.upEarnings(),this.getnextHalving(),this.getlpall(),this.getjsonpool())},immediate:!0},alert:{handler:function(e,t){this.getpool(),this.getjsonpool()},immediate:!0}},mounted:function(){this.getBlockHeight(),this.timesopt()},methods:Object(s["a"])(Object(s["a"])(Object(s["a"])(Object(s["a"])({},Object(b["b"])([])),Object(b["c"])(["editAddress","updatealert","updateblockHeight"])),Object(b["c"])(["updatestakeLpTokensStatus","updateunstakeLpTokensStatus"])),{},{getjsontokens:function(){var e=this;u.a.get("https://json.btc-pi.com/tokens.json").then((function(t){e.tokens=t.data.tokens;for(var n=0;n<e.tokens.length;n++)e.tokens[n].Allowance=0,e.tokens[n].Earnings=0,e.tokens[n].Liquidity=0,e.tokens[n].Lpnum=0,e.tokens[n].balance=0,e.tokens[n].point="？",e.tokens[n].Allowance=0,e.tokens[n].Apy=0,e.tokens[n].VLpnumall=0,e.tokens[n].VLpnum=0,e.tokens[n].VLiquidity=0,e.tokens[n].VLiquidityall=0,e.tokens[n].tokenPrice=0}))},getjsonpool:function(){for(var e=this,t=function(t){var n=he(e.tokens[t].Token),a=new at.a(10).pow(new at.a(e.tokens[t].decimal));Promise.all([Bt.methods.userInfo(e.tokens[t].Id,e.walletAddress).call(),Bt.methods.poolInfo(e.tokens[t].Id).call(),Bt.methods.pending(e.tokens[t].Id,e.walletAddress).call(),n.methods.balanceOf(Bt._address).call(),Bt.methods.reward(e.blockHeight).call(),Bt.methods.totalAllocPoint().call(),n.methods.balanceOf(e.walletAddress).call(),n.methods.allowance(e.walletAddress,Bt._address).call()]).then((function(n){var r=Object(We["a"])(n,8),i=r[0],s=r[1],o=r[2],c=r[3],d=(r[4],r[5]),l=r[6],u=r[7],b=Number(Number(pe.utils.fromWei(o[0])).toFixed(12)),f=new at.a(l.toString()).div(a).toFixed();e.tokens[t].Lpnum=new at.a(i.amount.toString()).div(a).toFixed(),e.tokens[t].Earnings=b,e.tokens[t].Liquidity=new at.a(c.toString()).div(a).toFixed(),e.tokens[t].point=Number(s.allocPoint).toFixed()/100,e.tokens.totalAllowPoint=Number(d)/100,e.tokens[t].Allowance=Number(new at.a(u.toString()).div(a).toFixed()),e.tokens[t].balance=f,e.getjsonprice(t);for(var p=0;p<e.tokens.length;p++)"0"!==e.tokens[p].VLiquidityall?e.tokens[p].Apy=(e.publicInfo.perBlock/e.tokenPrice["BTCPI"]*(e.tokens[p].point/e.publicInfo.totalAllowPoint)/Number(e.tokens[p].VLiquidityall)*10512e3*100).toFixed(4):e.tokens[p].APR=0}))},n=0;n<this.tokens.length;n++)t(n)},getjsonprice:function(e){var t=this;return Object(d["a"])(regeneratorRuntime.mark((function n(){var a,r;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return a=t.tokenPiar["USDC"],1==t.tokens[e].uNUM?a=t.tokenPiar["USDT"]:2==t.tokens[e].uNUM?a=t.tokenPiar["BUSD"]:3==t.tokens[e].uNUM&&(a=t.tokenPiar["USDC"]),n.next=4,t.getlpPrice(t.tokens[e].piar,a,t.tokens[e].Token);case 4:r=n.sent,t.tokens[e].tokenPrice=r[1],t.tokens[e].VLiquidityall=t.tokens[e].Liquidity*t.tokens[e].tokenPrice,t.tokens[e].VLpnum=t.tokens[e].Lpnum*t.tokens[e].tokenPrice,t.tokens[e].VLpnumall=t.tokens[e].Liquidity,t.tokens[e].VLiquidity=t.tokens[e].Lpnum/t.tokens[e].Liquidity*r[0];case 10:case"end":return n.stop()}}),n)})))()},getRoundData:function(){return Object(d["a"])(regeneratorRuntime.mark((function e(){var t,n,a;return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:t="0x9ef1B8c0E4F7dc8bF5719Ea496883DC6401d5b2e",n=new pe.eth.Contract(At.abi,t),a=0,Promise.all([n.methods.latestRoundData().call(),n.methods.decimals().call()]).then((function(e){var t=Object(We["a"])(e,2),n=t[0],r=t[1];if(a!==new at.a(n.updatedAt).toNumber()){var i=new at.a(n.answer.toString()).div(new at.a(10).pow(r)).toFixed();console.log("answer",i),console.log("decimal",r)}}));case 4:case"end":return e.stop()}}),e)})))()},tabClick:function(e){for(var t=[],n=0;n<this.functionTab.length;n++)t[n]=!1,n===e&&(t[n]=!0);this.functionTab=t},detailsClickStatus:function(e){var t=this.getIndexClick;this.getIndexClick[e]?(this.getIndexClick=[],t[e]=!1,this.height="auto"):(this.getIndexClick=[],t[e]=!0,this.height="500px"),this.getIndexClick=t},detailsClickStatus1:function(e){var t=this.getIndexClick1;this.getIndexClick1[e]?(this.getIndexClick1=[],t[e]=!1,this.height="auto"):(this.getIndexClick1=[],t[e]=!0,this.height="500px"),this.getIndexClick1=t},lPBnt:function(e){var t="earnUrl"+(e+1);this.earnUrl=this.$t("earn")[t][0],this.LPtoken=this.tokenlist[e],this.$store.commit("updatestakeLpTokensStatus",!0)},itemlPBnt:function(e){this.earnUrl="https://pancakeswap.finance/swap?inputCurrency=BNB&outputCurrency="+this.tokens[e].Token,this.LPtoken=this.tokens[e],this.$store.commit("updatestakeLpTokensStatus",!0)},unstakeLpTokens:function(e,t){var n="earnUrl"+(e+1);this.earnUrl=this.$t("earn")[n][0],this.LPtoken=this.tokenlist[e],this.LPtype=t,this.$store.commit("updateunstakeLpTokensStatus",!0)},itemunstakeLpTokens:function(e,t){this.earnUrl="https://pancakeswap.finance/swap?inputCurrency=BNB&outputCurrency="+this.tokens[e].Token,this.LPtoken=this.tokens[e],this.LPtype=t,this.$store.commit("updateunstakeLpTokensStatus",!0)},semicolon:function(e,t){if(!e)return 0;if("0"==e)return 0;if("Infinity"==e)return 0;e=Number(e).toFixed(t);var n=Math.trunc(e),a=n.toString().replace(/(\d)(?=(?:\d{3})+$)/g,"$1,"),r="4",i=e.toString().split(".");return 2===i.length?(r=i[1].toString(),a+"."+r):a+r},connect:function(){var e=this;ethereum.request({method:"eth_requestAccounts"}).then(function(){var t=Object(d["a"])(regeneratorRuntime.mark((function t(n){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:e.editAddress(n[0]),e.$store.commit("editAddress",n[0]);case 2:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()).then((function(){e.$store.commit("updatealert",{status:!0,text:e.$t("alert").connect.success,type:"success"}),setTimeout((function(){e.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)})).catch((function(){e.$store.commit("updatealert",{status:!0,text:e.$t("alert").connect.error,type:"warning"}),setTimeout((function(){e.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)}))},getBlockHeight:function(){var e=this;pe.eth.getBlockNumber().then((function(t){e.updateblockHeight(t)}))},getnextHalving:function(){var e=this;return Object(d["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:Promise.all([Bt.methods.phase(e.blockHeight).call(),Bt.methods.halvingPeriod().call(),Bt.methods.startBlock().call(),Bt.methods.reward(e.blockHeight).call(),Bt.methods.perBlock().call()]).then((function(t){var n=Object(We["a"])(t,5),a=n[0],r=n[1],i=n[2],s=n[3],o=n[4];e.publicInfo.halved=new at.a(a).toNumber(),e.publicInfo.startBlock=new at.a(i).toNumber(),e.publicInfo.halvingPeriod=new at.a(r).toNumber(),e.publicInfo.nextHalving=new at.a(a).plus(1).times(r).plus(i).toNumber(),e.publicInfo.perBlock=new at.a(pe.utils.fromWei(s)).toFixed(12),e.publicInfo.initPerBlock=pe.utils.fromWei(o),e.publicInfo.nexttime=Date.now()+3e3*(e.publicInfo.nextHalving-e.blockHeight),e.endtime=Date.now()+3e3*(e.publicInfo.nextHalving-e.blockHeight)}));case 1:case"end":return t.stop()}}),t)})))()},timesopt:function(){var e=this;this.count=3;var t=setInterval((function(){e.count--,e.count<=0&&clearInterval(t)}),1e3)},upEarnings:function(){var e=this;return Object(d["a"])(regeneratorRuntime.mark((function t(){var n,a;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:for(n=function(t){var n=he(e.tokenlist[t].Token),a=new at.a(10).pow(new at.a(e.tokenlist[t].decimal));Promise.all([Bt.methods.pending(e.tokenlist[t].Id,e.walletAddress).call(),Bt.methods.userInfo(e.tokenlist[t].Id,e.walletAddress).call(),n.methods.balanceOf(Bt._address).call(),n.methods.balanceOf(e.walletAddress).call()]).then((function(n){var r=Object(We["a"])(n,4),i=r[0],s=r[1],o=r[2],c=r[3],d=Number(Number(pe.utils.fromWei(i[0])).toFixed(12)),l=new at.a(c.toString()).div(a).toFixed();e.tokenlist[t].Earnings=d,e.tokenlist[t].Lpnum=new at.a(s.amount.toString()).div(a).toFixed(),e.tokenlist[t].Liquidity=new at.a(o.toString()).div(a).toFixed(),e.tokenlist[t].balance=l}))},a=0;a<e.tokenlist.length;a++)n(a);case 2:case"end":return t.stop()}}),t)})))()},getpool:function(){var e=this;return Object(d["a"])(regeneratorRuntime.mark((function t(){var n,a;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:for(n=function(t){var n=he(e.tokenlist[t].Token),a=new at.a(10).pow(new at.a(e.tokenlist[t].decimal));Promise.all([Bt.methods.userInfo(e.tokenlist[t].Id,e.walletAddress).call(),Bt.methods.poolInfo(e.tokenlist[t].Id).call(),Bt.methods.pending(e.tokenlist[t].Id,e.walletAddress).call(),n.methods.balanceOf(Bt._address).call(),Bt.methods.reward(e.blockHeight).call(),Bt.methods.totalAllocPoint().call(),n.methods.balanceOf(e.walletAddress).call(),n.methods.allowance(e.walletAddress,Bt._address).call()]).then((function(n){var r=Object(We["a"])(n,8),i=r[0],s=r[1],o=r[2],c=r[3],d=r[4],l=r[5],u=r[6],b=r[7],f=Number(Number(pe.utils.fromWei(o[0])).toFixed(12)),p=new at.a(u.toString()).div(a).toFixed();e.tokenlist[t].Lpnum=new at.a(i.amount.toString()).div(a).toFixed(),e.tokenlist[t].Earnings=f,e.tokenlist[t].Liquidity=new at.a(c.toString()).div(a).toFixed(),e.tokenlist[t].point=Number(s.allocPoint).toFixed()/100,e.publicInfo.totalAllowPoint=Number(l)/100,e.tokenlist[t].Allowance=Number(new at.a(b.toString()).div(a).toFixed()),e.tokenlist[t].balance=p,"0"!==c&&(e.tokenlist[t].Apy=(Number(pe.utils.fromWei(d))*(Number(100*e.tokenlist[t].point)/Number(l))/Number(pe.utils.fromWei(c))*365*86400/3*100).toFixed(4))}))},a=0;a<e.tokenlist.length;a++)n(a);case 2:case"end":return t.stop()}}),t)})))()},getlpall:function(){var e=this;return Object(d["a"])(regeneratorRuntime.mark((function t(){var n,a,r,i,s;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,e.getlpPrice(e.tokenlist[1].Token,e.tokenPiar["SpacePi"],e.tokenPiar["USDC"]);case 2:return n=t.sent,e.tokenPrice["SpacePi"]=n[1],e.piar[1].Liquidityall=n[0],e.piar[1].Lpnum=e.tokenlist[1].Lpnum,e.piar[1].Lpnumall=e.tokenlist[1].Liquidity,e.piar[1].Liquidity=e.tokenlist[1].Lpnum/e.tokenlist[1].Liquidity*n[0],e.piar[0].Liquidityall=e.tokenlist[0].Liquidity/e.tokenPrice["SpacePi"],e.piar[0].Lpnum=e.tokenlist[0].Lpnum,e.piar[0].Lpnumall=e.tokenlist[0].Liquidity,e.piar[0].Liquidity=e.tokenlist[0].Lpnum/e.tokenlist[0].Liquidity*e.piar[0].Liquidityall,t.next=14,e.getlpPrice(e.tokenlist[2].Token,e.tokenPiar["BTCPI"],e.tokenPiar["USDC"]);case 14:return a=t.sent,e.tokenPrice["BTCPI"]=a[1],e.piar[2].Liquidityall=a[0],e.piar[2].Lpnum=e.tokenlist[2].Lpnum,e.piar[2].Lpnumall=e.tokenlist[2].Liquidity,e.piar[2].Liquidity=e.tokenlist[2].Lpnum/e.tokenlist[2].Liquidity*a[0],t.next=22,e.getlpPrice(e.tokenlist[3].Token,e.tokenPiar["BTCPI"],e.tokenPiar["SpacePi"]);case 22:return r=t.sent,e.piar[3].Liquidityall=r[0]/e.tokenPrice["SpacePi"],e.piar[3].Lpnum=e.tokenlist[3].Lpnum,e.piar[3].Lpnumall=e.tokenlist[3].Liquidity,e.piar[3].Liquidity=e.tokenlist[3].Lpnum/e.tokenlist[3].Liquidity*e.piar[3].Liquidityall,t.next=29,e.getlpPrice(e.tokenlist[4].Token,e.tokenPiar["FIST"],e.tokenPiar["SpacePi"]);case 29:for(i=t.sent,e.piar[4].Liquidityall=i[0]/e.tokenPrice["SpacePi"],e.piar[4].Lpnum=e.tokenlist[4].Lpnum,e.piar[4].Lpnumall=e.tokenlist[4].Liquidity,e.piar[4].Liquidity=e.tokenlist[4].Lpnum/e.tokenlist[4].Liquidity*e.piar[4].Liquidityall,s=0;s<e.piar.length;s++)"0"!==e.piar[s].Liquidityall&&(e.piar[s].APR=(e.publicInfo.perBlock/e.tokenPrice["BTCPI"]*(e.tokenlist[s].point/e.publicInfo.totalAllowPoint)/Number(e.piar[s].Liquidityall)*10512e3*100).toFixed(4));case 35:case"end":return t.stop()}}),t)})))()},getlpPrice:function(e,t,n){var a=e,r=t,i=n,s=[{address:r,name:"balanceOf",params:[a]},{address:i,name:"balanceOf",params:[a]},{address:a,name:"balanceOf",params:[Bt._address]},{address:a,name:"totalSupply"},{address:r,name:"decimals"},{address:i,name:"decimals"}],o=new Tt["Interface"](St["abi"]),c=s.map((function(e){return{target:e.address.toLowerCase(),callData:o.encodeFunctionData(e.name,e.params)}})),l=new at.a(2),u=new at.a(10);return Promise.all(c.map(function(){var e=Object(d["a"])(regeneratorRuntime.mark((function e(t){return regeneratorRuntime.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,pe.eth.call({to:t.target,data:t.callData});case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}())).then((function(e){var t=Object(We["a"])(e,6),n=t[0],a=t[1],r=t[2],i=t[3],s=t[4],o=t[5],c=new at.a(r).div(new at.a(i)),d=new at.a(n).div(u.pow(s)),b=new at.a(a).div(u.pow(o)),f=b.times(c),p=f.times(l);return[p.toFixed(),d.div(b).toFixed()]}))},UserApprove:function(e){var t=this;return Object(d["a"])(regeneratorRuntime.mark((function n(){var a;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return a=he(t.tokenlist[e].Token),t.$store.commit("updatealert",{status:!0,text:t.$t("alert").earn.lodingAdd,type:"info"}),n.next=4,a.methods.approve(me.spaceStationAbi.address,t.tokenlist[e].setallowance).send({from:t.walletAddress}).then((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.authorizeSuccess,type:"success"}),t.getpool(),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)})).catch((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.authorizeError,type:"error"}),t.getpool(),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)}));case 4:n.sent;case 5:case"end":return n.stop()}}),n)})))()},itemUserApprove:function(e){var t=this;return Object(d["a"])(regeneratorRuntime.mark((function n(){var a;return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return console.log("itemUserApprove",t.tokens[e].Token,t.tokens[e].setallowance),a=he(t.tokens[e].Token),t.$store.commit("updatealert",{status:!0,text:t.$t("alert").earn.lodingAdd,type:"info"}),n.next=5,a.methods.approve(me.spaceStationAbi.address,t.tokens[e].setallowance).send({from:t.walletAddress}).then((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.authorizeSuccess,type:"success"}),t.getjsonpool(),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)})).catch((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").presale.authorizeError,type:"error"}),t.getjsonpool(),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)}));case 5:n.sent;case 6:case"end":return n.stop()}}),n)})))()},itemHarvest:function(e){var t=this;return Object(d["a"])(regeneratorRuntime.mark((function n(){return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return t.$store.commit("updatealert",{status:!0,text:t.$t("alert").earn.lodingAdd,type:"info"}),n.next=3,Bt.methods.withdraw(t.tokens[e].Id,"0").send({from:t.walletAddress}).then((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").earn.harvestSuccess,type:"success"}),t.getjsonpool(),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)})).catch((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").earn.harvestError,type:"error"}),t.getjsonpool(),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)}));case 3:n.sent;case 4:case"end":return n.stop()}}),n)})))()},Harvest:function(e){var t=this;return Object(d["a"])(regeneratorRuntime.mark((function n(){return regeneratorRuntime.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return t.$store.commit("updatealert",{status:!0,text:t.$t("alert").earn.lodingAdd,type:"info"}),n.next=3,Bt.methods.withdraw(t.tokenlist[e].Id,"0").send({from:t.walletAddress}).then((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").earn.harvestSuccess,type:"success"}),t.getpool(),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)})).catch((function(){t.$store.commit("updatealert",{status:!0,text:t.$t("alert").earn.harvestError,type:"error"}),t.getpool(),setTimeout((function(){t.$store.commit("updatealert",{status:!1,text:"",type:""})}),1500)}));case 3:n.sent;case 4:case"end":return n.stop()}}),n)})))()},openUrl:function(e){""!=e&&window.open(e,"_blank")}})}),Rt=Dt,It=(n("38a2"),n("b974")),Mt=n("b73d"),Lt=Object(m["a"])(Rt,Ue,Ne,!1,null,"2b389356",null),Vt=Lt.exports;h()(Lt,{VBtn:k["a"],VDivider:B["a"],VImg:x["a"],VSelect:It["a"],VSwitch:Mt["a"]});var Ot={data:function(){return{height:"81px",tab:[!0,!1]}},name:"Earn",components:{farms:Vt},methods:{tabClick:function(e){for(var t=[],n=0;n<this.tab.length;n++)t[n]=!1,n===e&&(t[n]=!0);this.tab=t}}},Gt=Ot,$t=(n("1335"),Object(m["a"])(Gt,ze,je,!1,null,"a697dcbe",null)),Ft=$t.exports;a["a"].use(N["a"]);var qt=N["a"].prototype.push;N["a"].prototype.push=function(e){return qt.call(this,e).catch((function(e){return e}))};var zt=[{path:"/",name:"主页",component:le},{path:"/presale",name:"预售",component:qe},{path:"/mine",name:"",component:Ft}],jt=new N["a"]({base:"",routes:zt,scrollBehavior:function(e,t,n){return{x:0,y:0}}}),Ut=jt;a["a"].use(b["a"]);var Nt=new b["a"].Store({state:{walletAddress:sessionStorage.getItem("walletAddress")||"",unlock_block:9e7,unlock_block_time:1512086400,blockHeight:0,estimateblock:0,allowance:["0","0"],presalenum:["0","0"],presalenumtoken:["0","0"],balance:[0,0],receivestatus:0,pool:[{},{}],alert:{status:!1,text:"",type:""},overflowY:!1,stakeLpTokensStatus:!1,unstakeLpTokensStatus:!1,urls:"https://admin.btc-pi.com/api/"},mutations:{editAddress:function(e,t){e.walletAddress=t,sessionStorage.setItem("walletAddress",t)},updateIsLangAlive:function(e,t){e.isLangAlive=t},updateblockHeight:function(e,t){e.blockHeight=t},updateunlock_block:function(e,t){e.unlock_block=t,e.unlock_block<=e.blockHeight&&(e.receivestatus=1),console.log("unlock:",e.unlock_block,"this",e.blockHeight,"bool",e.receivestatus)},updateallowance:function(e,t){e.allowance=t},updatepresalenum:function(e,t){e.presalenum=t},updatepresalenumtoken:function(e,t){e.presalenumtoken=t},updatebalance:function(e,t){e.balance=t},updatepool:function(e,t){e.pool=t},updatealert:function(e,t){e.alert=t},updateOverflowY:function(e,t){e.overflowY=t},updatestakeLpTokensStatus:function(e,t){e.stakeLpTokensStatus=t},updateunstakeLpTokensStatus:function(e,t){e.unstakeLpTokensStatus=t}},actions:{},modules:{}}),Wt=n("8c2c"),Ht=n("4eb5"),Xt=n.n(Ht),Yt=n("a925");a["a"].use(Yt["a"]);var Jt=new Yt["a"]({locale:sessionStorage.getItem("locale")||"en",silentTranslationWarn:!0,messages:{en:n("a638").default,zhHans:n("4251").default}}),Zt=Jt,Qt=(n("0be7"),n("b0c9"),n("f309"));a["a"].use(Qt["a"]);var Kt=new Qt["a"]({});localStorage.clear(),a["a"].component("lottie",Wt["a"]),a["a"].use(Xt.a),a["a"].prototype.$BigNumber=at.a,a["a"].config.productionTip=!1,new a["a"]({router:Ut,store:Nt,i18n:Zt,vuetify:Kt,render:function(e){return e(U)}}).$mount("#app")},5835:function(e){e.exports=JSON.parse('{"address":"0x6349515a5bd6ecd71f4f1a1d42a18b17fae738cc","addres1s":"0x7403577Fb40D63798D4D2798964643e59cb8e7bC","abi":[{"inputs":[{"internalType":"contract IERC20","name":"_coin","type":"address"},{"internalType":"uint256","name":"_startBlock","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"LpOfPid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"contract IERC20","name":"_lpToken","type":"address"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"add","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_addLP","type":"address"}],"name":"addMultLP","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"coin","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_lastRewardBlock","type":"uint256"}],"name":"getBlockReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"getMultLPAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMultLPLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"halvingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_LP","type":"address"}],"name":"isMultLP","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"massUpdatePools","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"multLpChef","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"multLpToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"pending","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"perBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"phase","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"poolCorrespond","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"poolInfo","outputs":[{"internalType":"contract IERC20","name":"lpToken","type":"address"},{"internalType":"uint256","name":"allocPoint","type":"uint256"},{"internalType":"uint256","name":"lastRewardBlock","type":"uint256"},{"internalType":"uint256","name":"accPerShare","type":"uint256"},{"internalType":"uint256","name":"accMultLpPerShare","type":"uint256"},{"internalType":"uint256","name":"totalAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_multLpToken","type":"address"},{"internalType":"address","name":"_multLpChef","type":"address"}],"name":"replaceMultLP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"reward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"set","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_block","type":"uint256"}],"name":"setHalvingPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_multLpToken","type":"address"},{"internalType":"address","name":"_multLpChef","type":"address"}],"name":"setMultLP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"setPause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newPerBlock","type":"uint256"}],"name":"setPerBlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_sid","type":"uint256"}],"name":"setPoolCorr","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAllocPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"updatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"userInfo","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"rewardDebt","type":"uint256"},{"internalType":"uint256","name":"multLpRewardDebt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"transactionHash":"0x3e980ad8313bd12ec5f4f8c717343d030dccd21e887ed308564d03e7e0c989eb","receipt":{"to":null,"from":"0x0eEf63F2079e856476C290bd596318F8aef44a93","contractAddress":"0x3D30544A44BdE0015fe298425aa73077E754F510","transactionIndex":182,"gasUsed":"3068613","logsBloom":"0xblockHash":"0x4b8eb5dd47ce2d761192d49428441bf02e12a36c440f9b9537c53ffadccc5b8f","transactionHash":"0x3e980ad8313bd12ec5f4f8c717343d030dccd21e887ed308564d03e7e0c989eb","logs":[{"transactionIndex":182,"blockNumber":18996748,"transactionHash":"0x3e980ad8313bd12ec5f4f8c717343d030dccd21e887ed308564d03e7e0c989eb","address":"0x3D30544A44BdE0015fe298425aa73077E754F510","topics":["0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000eef63f2079e856476c290bd596318f8aef44a93"],"data":"0x","logIndex":566,"blockHash":"0x4b8eb5dd47ce2d761192d49428441bf02e12a36c440f9b9537c53ffadccc5b8f"}],"blockNumber":18996748,"cumulativeGasUsed":"28917150","status":1,"byzantium":true},"args":["0x4c351cabd66b0cb82a09f8829ed20d1c5bcd2c34",18998545],"solcInputHash":"7f1e98764d779ab71fa71a6f3e1bc1a9","metadata":"{\\"compiler\\":{\\"version\\":\\"0.6.12+commit.27d51765\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"_coin\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_startBlock\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"pid\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Deposit\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"pid\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"EmergencyWithdraw\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"previousOwner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"pid\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Withdraw\\",\\"type\\":\\"event\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"LpOfPid\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_allocPoint\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"_lpToken\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"_withUpdate\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"add\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_addLP\\",\\"type\\":\\"address\\"}],\\"name\\":\\"addMultLP\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"coin\\",\\"outputs\\":[{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_pid\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"deposit\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_pid\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"emergencyWithdraw\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_lastRewardBlock\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getBlockReward\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_pid\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getMultLPAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getMultLPLength\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"halvingPeriod\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_LP\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isMultLP\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"massUpdatePools\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"multLpChef\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"multLpToken\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"owner\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"paused\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_pid\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_user\\",\\"type\\":\\"address\\"}],\\"name\\":\\"pending\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"perBlock\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"phase\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"poolCorrespond\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"poolInfo\\",\\"outputs\\":[{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"lpToken\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"allocPoint\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"lastRewardBlock\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"accPerShare\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"accMultLpPerShare\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"totalAmount\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"poolLength\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"renounceOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_multLpToken\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_multLpChef\\",\\"type\\":\\"address\\"}],\\"name\\":\\"replaceMultLP\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"reward\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_pid\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_allocPoint\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"_withUpdate\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"set\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_block\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setHalvingPeriod\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_multLpToken\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_multLpChef\\",\\"type\\":\\"address\\"}],\\"name\\":\\"setMultLP\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"setPause\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"newPerBlock\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setPerBlock\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_pid\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_sid\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setPoolCorr\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"startBlock\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"totalAllocPoint\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_pid\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"updatePool\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"userInfo\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"rewardDebt\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"multLpRewardDebt\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_pid\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdraw\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{\\"owner()\\":{\\"details\\":\\"Returns the address of the current owner.\\"},\\"renounceOwnership()\\":{\\"details\\":\\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\\"},\\"transferOwnership(address)\\":{\\"details\\":\\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\\"}},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"contracts/MineStake.sol\\":\\"MineStake\\"},\\"evmVersion\\":\\"istanbul\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\",\\"useLiteralContent\\":true},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"@openzeppelin/contracts/access/Ownable.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity >=0.6.0 <0.8.0;\\\\n\\\\nimport \\\\\\"../utils/Context.sol\\\\\\";\\\\n/**\\\\n * @dev Contract module which provides a basic access control mechanism, where\\\\n * there is an account (an owner) that can be granted exclusive access to\\\\n * specific functions.\\\\n *\\\\n * By default, the owner account will be the one that deploys the contract. This\\\\n * can later be changed with {transferOwnership}.\\\\n *\\\\n * This module is used through inheritance. It will make available the modifier\\\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\\\n * the owner.\\\\n */\\\\nabstract contract Ownable is Context {\\\\n    address private _owner;\\\\n\\\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\\\n\\\\n    /**\\\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\\\n     */\\\\n    constructor () internal {\\\\n        address msgSender = _msgSender();\\\\n        _owner = msgSender;\\\\n        emit OwnershipTransferred(address(0), msgSender);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the address of the current owner.\\\\n     */\\\\n    function owner() public view virtual returns (address) {\\\\n        return _owner;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Throws if called by any account other than the owner.\\\\n     */\\\\n    modifier onlyOwner() {\\\\n        require(owner() == _msgSender(), \\\\\\"Ownable: caller is not the owner\\\\\\");\\\\n        _;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Leaves the contract without owner. It will not be possible to call\\\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\\\n     *\\\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\\\n     * thereby removing any functionality that is only available to the owner.\\\\n     */\\\\n    function renounceOwnership() public virtual onlyOwner {\\\\n        emit OwnershipTransferred(_owner, address(0));\\\\n        _owner = address(0);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\\\n     * Can only be called by the current owner.\\\\n     */\\\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\\\n        require(newOwner != address(0), \\\\\\"Ownable: new owner is the zero address\\\\\\");\\\\n        emit OwnershipTransferred(_owner, newOwner);\\\\n        _owner = newOwner;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/Context.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity >=0.6.0 <0.8.0;\\\\n\\\\n/*\\\\n * @dev Provides information about the current execution context, including the\\\\n * sender of the transaction and its data. While these are generally available\\\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\\\n * manner, since when dealing with GSN meta-transactions the account sending and\\\\n * paying for execution may not be the actual sender (as far as an application\\\\n * is concerned).\\\\n *\\\\n * This contract is only required for intermediate, library-like contracts.\\\\n */\\\\nabstract contract Context {\\\\n    function _msgSender() internal view virtual returns (address payable) {\\\\n        return msg.sender;\\\\n    }\\\\n\\\\n    function _msgData() internal view virtual returns (bytes memory) {\\\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\\\n        return msg.data;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/EnumerableSet.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity >=0.6.0 <0.8.0;\\\\n\\\\n/**\\\\n * @dev Library for managing\\\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\\\n * types.\\\\n *\\\\n * Sets have the following properties:\\\\n *\\\\n * - Elements are added, removed, and checked for existence in constant time\\\\n * (O(1)).\\\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\\\n *\\\\n * ```\\\\n * contract Example {\\\\n *     // Add the library methods\\\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\\\n *\\\\n *     // Declare a set state variable\\\\n *     EnumerableSet.AddressSet private mySet;\\\\n * }\\\\n * ```\\\\n *\\\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\\\n * and `uint256` (`UintSet`) are supported.\\\\n */\\\\nlibrary EnumerableSet {\\\\n    // To implement this library for multiple types with as little code\\\\n    // repetition as possible, we write it in terms of a generic Set type with\\\\n    // bytes32 values.\\\\n    // The Set implementation uses private functions, and user-facing\\\\n    // implementations (such as AddressSet) are just wrappers around the\\\\n    // underlying Set.\\\\n    // This means that we can only create new EnumerableSets for types that fit\\\\n    // in bytes32.\\\\n\\\\n    struct Set {\\\\n        // Storage of set values\\\\n        bytes32[] _values;\\\\n\\\\n        // Position of the value in the `values` array, plus 1 because index 0\\\\n        // means a value is not in the set.\\\\n        mapping (bytes32 => uint256) _indexes;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Add a value to a set. O(1).\\\\n     *\\\\n     * Returns true if the value was added to the set, that is if it was not\\\\n     * already present.\\\\n     */\\\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\\\n        if (!_contains(set, value)) {\\\\n            set._values.push(value);\\\\n            // The value is stored at length-1, but we add 1 to all indexes\\\\n            // and use 0 as a sentinel value\\\\n            set._indexes[value] = set._values.length;\\\\n            return true;\\\\n        } else {\\\\n            return false;\\\\n        }\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Removes a value from a set. O(1).\\\\n     *\\\\n     * Returns true if the value was removed from the set, that is if it was\\\\n     * present.\\\\n     */\\\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\\\n        // We read and store the value\'s index to prevent multiple reads from the same storage slot\\\\n        uint256 valueIndex = set._indexes[value];\\\\n\\\\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\\\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\\\n            // the array, and then remove the last element (sometimes called as \'swap and pop\').\\\\n            // This modifies the order of the array, as noted in {at}.\\\\n\\\\n            uint256 toDeleteIndex = valueIndex - 1;\\\\n            uint256 lastIndex = set._values.length - 1;\\\\n\\\\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\\\\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an \'if\' statement.\\\\n\\\\n            bytes32 lastvalue = set._values[lastIndex];\\\\n\\\\n            // Move the last value to the index where the value to delete is\\\\n            set._values[toDeleteIndex] = lastvalue;\\\\n            // Update the index for the moved value\\\\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\\\\n\\\\n            // Delete the slot where the moved value was stored\\\\n            set._values.pop();\\\\n\\\\n            // Delete the index for the deleted slot\\\\n            delete set._indexes[value];\\\\n\\\\n            return true;\\\\n        } else {\\\\n            return false;\\\\n        }\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns true if the value is in the set. O(1).\\\\n     */\\\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\\\n        return set._indexes[value] != 0;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the number of values on the set. O(1).\\\\n     */\\\\n    function _length(Set storage set) private view returns (uint256) {\\\\n        return set._values.length;\\\\n    }\\\\n\\\\n   /**\\\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\\\n    *\\\\n    * Note that there are no guarantees on the ordering of values inside the\\\\n    * array, and it may change when more values are added or removed.\\\\n    *\\\\n    * Requirements:\\\\n    *\\\\n    * - `index` must be strictly less than {length}.\\\\n    */\\\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\\\n        require(set._values.length > index, \\\\\\"EnumerableSet: index out of bounds\\\\\\");\\\\n        return set._values[index];\\\\n    }\\\\n\\\\n    // Bytes32Set\\\\n\\\\n    struct Bytes32Set {\\\\n        Set _inner;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Add a value to a set. O(1).\\\\n     *\\\\n     * Returns true if the value was added to the set, that is if it was not\\\\n     * already present.\\\\n     */\\\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\\\n        return _add(set._inner, value);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Removes a value from a set. O(1).\\\\n     *\\\\n     * Returns true if the value was removed from the set, that is if it was\\\\n     * present.\\\\n     */\\\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\\\n        return _remove(set._inner, value);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns true if the value is in the set. O(1).\\\\n     */\\\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\\\n        return _contains(set._inner, value);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the number of values in the set. O(1).\\\\n     */\\\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\\\n        return _length(set._inner);\\\\n    }\\\\n\\\\n   /**\\\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\\\n    *\\\\n    * Note that there are no guarantees on the ordering of values inside the\\\\n    * array, and it may change when more values are added or removed.\\\\n    *\\\\n    * Requirements:\\\\n    *\\\\n    * - `index` must be strictly less than {length}.\\\\n    */\\\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\\\n        return _at(set._inner, index);\\\\n    }\\\\n\\\\n    // AddressSet\\\\n\\\\n    struct AddressSet {\\\\n        Set _inner;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Add a value to a set. O(1).\\\\n     *\\\\n     * Returns true if the value was added to the set, that is if it was not\\\\n     * already present.\\\\n     */\\\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Removes a value from a set. O(1).\\\\n     *\\\\n     * Returns true if the value was removed from the set, that is if it was\\\\n     * present.\\\\n     */\\\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns true if the value is in the set. O(1).\\\\n     */\\\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the number of values in the set. O(1).\\\\n     */\\\\n    function length(AddressSet storage set) internal view returns (uint256) {\\\\n        return _length(set._inner);\\\\n    }\\\\n\\\\n   /**\\\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\\\n    *\\\\n    * Note that there are no guarantees on the ordering of values inside the\\\\n    * array, and it may change when more values are added or removed.\\\\n    *\\\\n    * Requirements:\\\\n    *\\\\n    * - `index` must be strictly less than {length}.\\\\n    */\\\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\\\n        return address(uint160(uint256(_at(set._inner, index))));\\\\n    }\\\\n\\\\n\\\\n    // UintSet\\\\n\\\\n    struct UintSet {\\\\n        Set _inner;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Add a value to a set. O(1).\\\\n     *\\\\n     * Returns true if the value was added to the set, that is if it was not\\\\n     * already present.\\\\n     */\\\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\\\n        return _add(set._inner, bytes32(value));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Removes a value from a set. O(1).\\\\n     *\\\\n     * Returns true if the value was removed from the set, that is if it was\\\\n     * present.\\\\n     */\\\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\\\n        return _remove(set._inner, bytes32(value));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns true if the value is in the set. O(1).\\\\n     */\\\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\\\n        return _contains(set._inner, bytes32(value));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the number of values on the set. O(1).\\\\n     */\\\\n    function length(UintSet storage set) internal view returns (uint256) {\\\\n        return _length(set._inner);\\\\n    }\\\\n\\\\n   /**\\\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\\\n    *\\\\n    * Note that there are no guarantees on the ordering of values inside the\\\\n    * array, and it may change when more values are added or removed.\\\\n    *\\\\n    * Requirements:\\\\n    *\\\\n    * - `index` must be strictly less than {length}.\\\\n    */\\\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\\\n        return uint256(_at(set._inner, index));\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\\",\\"license\\":\\"MIT\\"},\\"contracts/MineStake.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\npragma solidity ^0.6.0;\\\\n\\\\nimport \\\\\\"@openzeppelin/contracts/access/Ownable.sol\\\\\\";\\\\nimport \\\\\\"@openzeppelin/contracts/utils/EnumerableSet.sol\\\\\\";\\\\nimport \\\\\\"./interfaces/IMasterChefBSC.sol\\\\\\";\\\\nimport \\\\\\"./utils/SafeERC20.sol\\\\\\";\\\\n\\\\ncontract MineStake is Ownable {\\\\n    using SafeMath for uint256;\\\\n    using SafeERC20 for IERC20;\\\\n\\\\n    using EnumerableSet for EnumerableSet.AddressSet;\\\\n    EnumerableSet.AddressSet private _multLP;\\\\n\\\\n    // Info of each user.\\\\n    struct UserInfo {\\\\n        uint256 amount;     // How many LP tokens the user has provided.\\\\n        uint256 rewardDebt; // Reward debt.\\\\n        uint256 multLpRewardDebt; //multLp Reward debt.\\\\n    }\\\\n\\\\n    // Info of each pool.\\\\n    struct PoolInfo {\\\\n        IERC20 lpToken;           // Address of LP token contract.\\\\n        uint256 allocPoint;       // How many allocation points assigned to this pool. coins to distribute per block.\\\\n        uint256 lastRewardBlock;  // Last block number that coins distribution occurs.\\\\n        uint256 accPerShare; // Accumulated coins per share, times 1e12.\\\\n        uint256 accMultLpPerShare; //Accumulated multLp per share\\\\n        uint256 totalAmount;    // Total amount of current pool deposit.\\\\n    }\\\\n\\\\n    // The coin Token!\\\\n    IERC20 public coin;\\\\n    // coin tokens created per block.\\\\n    uint256 public perBlock = 57870370370370400;\\\\n    // Info of each pool.\\\\n    PoolInfo[] public poolInfo;\\\\n    // Info of each user that stakes LP tokens.\\\\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\\\\n    // Corresponding to the pid of the multLP pool\\\\n    mapping(uint256 => uint256) public poolCorrespond;\\\\n    // pid corresponding address\\\\n    mapping(address => uint256) public LpOfPid;\\\\n    // Control mining\\\\n    bool public paused = false;\\\\n    // Total allocation points. Must be the sum of all allocation points in all pools.\\\\n    uint256 public totalAllocPoint = 0;\\\\n    // The block number when coin mining starts.\\\\n    uint256 public startBlock;\\\\n    // multLP MasterChef\\\\n    address public multLpChef;\\\\n    // multLP Token\\\\n    address public multLpToken;\\\\n    // How many blocks are halved\\\\n    uint256 public halvingPeriod = 21024000;\\\\n\\\\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\\\\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\\\\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\\\\n\\\\n    constructor(\\\\n        IERC20 _coin,\\\\n        uint256 _startBlock\\\\n    ) public {\\\\n        coin = _coin;\\\\n        startBlock = _startBlock;\\\\n    }\\\\n\\\\n    function setHalvingPeriod(uint256 _block) public onlyOwner {\\\\n        halvingPeriod = _block;\\\\n    }\\\\n\\\\n    // Set the number of coin produced by each block\\\\n    function setPerBlock(uint256 newPerBlock) public onlyOwner {\\\\n        massUpdatePools();\\\\n        perBlock = newPerBlock;\\\\n    }\\\\n\\\\n    function poolLength() public view returns (uint256) {\\\\n        return poolInfo.length;\\\\n    }\\\\n    function addMultLP(address _addLP) public onlyOwner returns (bool) {\\\\n        require(_addLP != address(0), \\\\\\"LP is the zero address\\\\\\");\\\\n        IERC20(_addLP).approve(multLpChef, uint256(- 1));\\\\n        return EnumerableSet.add(_multLP, _addLP);\\\\n    }\\\\n\\\\n    function isMultLP(address _LP) public view returns (bool) {\\\\n        return EnumerableSet.contains(_multLP, _LP);\\\\n    }\\\\n\\\\n    function getMultLPLength() public view returns (uint256) {\\\\n        return EnumerableSet.length(_multLP);\\\\n    }\\\\n\\\\n    function getMultLPAddress(uint256 _pid) public view returns (address){\\\\n        require(_pid <= getMultLPLength() - 1, \\\\\\"not find this multLP\\\\\\");\\\\n        return EnumerableSet.at(_multLP, _pid);\\\\n    }\\\\n\\\\n    function setPause() public onlyOwner {\\\\n        paused = !paused;\\\\n    }\\\\n\\\\n    function setMultLP(address _multLpToken, address _multLpChef) public onlyOwner {\\\\n        require(_multLpToken != address(0) && _multLpChef != address(0), \\\\\\"is the zero address\\\\\\");\\\\n        multLpToken = _multLpToken;\\\\n        multLpChef = _multLpChef;\\\\n    }\\\\n\\\\n    function replaceMultLP(address _multLpToken, address _multLpChef) public onlyOwner {\\\\n        require(_multLpToken != address(0) && _multLpChef != address(0), \\\\\\"is the zero address\\\\\\");\\\\n        require(paused == true, \\\\\\"No mining suspension\\\\\\");\\\\n        multLpToken = _multLpToken;\\\\n        multLpChef = _multLpChef;\\\\n        uint256 length = getMultLPLength();\\\\n        while (length > 0) {\\\\n            address dAddress = EnumerableSet.at(_multLP, 0);\\\\n            uint256 pid = LpOfPid[dAddress];\\\\n            IMasterChefBSC(multLpChef).emergencyWithdraw(poolCorrespond[pid]);\\\\n            EnumerableSet.remove(_multLP, dAddress);\\\\n            length--;\\\\n        }\\\\n    }\\\\n\\\\n    // Add a new lp to the pool. Can only be called by the owner.\\\\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\\\\n    function add(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public onlyOwner {\\\\n        require(address(_lpToken) != address(0), \\\\\\"_lpToken is the zero address\\\\\\");\\\\n        if (_withUpdate) {\\\\n            massUpdatePools();\\\\n        }\\\\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\\\\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\\\\n        poolInfo.push(PoolInfo({\\\\n        lpToken : _lpToken,\\\\n        allocPoint : _allocPoint,\\\\n        lastRewardBlock : lastRewardBlock,\\\\n        accPerShare : 0,\\\\n        accMultLpPerShare : 0,\\\\n        totalAmount : 0\\\\n        }));\\\\n        LpOfPid[address(_lpToken)] = poolLength() - 1;\\\\n    }\\\\n\\\\n    // Update the given pool\'s coin allocation point. Can only be called by the owner.\\\\n    function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\\\\n        if (_withUpdate) {\\\\n            massUpdatePools();\\\\n        }\\\\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\\\\n        poolInfo[_pid].allocPoint = _allocPoint;\\\\n    }\\\\n\\\\n    // The current pool corresponds to the pid of the multLP pool\\\\n    function setPoolCorr(uint256 _pid, uint256 _sid) public onlyOwner {\\\\n        require(_pid <= poolLength() - 1, \\\\\\"not find this pool\\\\\\");\\\\n        poolCorrespond[_pid] = _sid;\\\\n    }\\\\n\\\\n    function phase(uint256 blockNumber) public view returns (uint256) {\\\\n        if (halvingPeriod == 0) {\\\\n            return 0;\\\\n        }\\\\n        if (blockNumber > startBlock) {\\\\n            return (blockNumber.sub(startBlock).sub(1)).div(halvingPeriod);\\\\n        }\\\\n        return 0;\\\\n    }\\\\n\\\\n    function reward(uint256 blockNumber) public view returns (uint256) {\\\\n        uint256 _phase = phase(blockNumber);\\\\n        return perBlock.div(2 ** _phase);\\\\n    }\\\\n\\\\n    function getBlockReward(uint256 _lastRewardBlock) public view returns (uint256) {\\\\n        uint256 blockReward = 0;\\\\n        uint256 n = phase(_lastRewardBlock);\\\\n        uint256 m = phase(block.number);\\\\n        while (n < m) {\\\\n            n++;\\\\n            uint256 r = n.mul(halvingPeriod).add(startBlock);\\\\n            blockReward = blockReward.add((r.sub(_lastRewardBlock)).mul(reward(r)));\\\\n            _lastRewardBlock = r;\\\\n        }\\\\n        blockReward = blockReward.add((block.number.sub(_lastRewardBlock)).mul(reward(block.number)));\\\\n        return blockReward;\\\\n    }\\\\n\\\\n    // Update reward variables for all pools. Be careful of gas spending!\\\\n    function massUpdatePools() public {\\\\n        uint256 length = poolInfo.length;\\\\n        for (uint256 pid = 0; pid < length; ++pid) {\\\\n            updatePool(pid);\\\\n        }\\\\n    }\\\\n\\\\n    // Update reward variables of the given pool to be up-to-date.\\\\n    function updatePool(uint256 _pid) public {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        if (block.number <= pool.lastRewardBlock) {\\\\n            return;\\\\n        }\\\\n        uint256 lpSupply;\\\\n        if (isMultLP(address(pool.lpToken))) {\\\\n            if (pool.totalAmount == 0) {\\\\n                pool.lastRewardBlock = block.number;\\\\n                return;\\\\n            }\\\\n            lpSupply = pool.totalAmount;\\\\n        } else {\\\\n            lpSupply = pool.lpToken.balanceOf(address(this));\\\\n            if (lpSupply == 0) {\\\\n                pool.lastRewardBlock = block.number;\\\\n                return;\\\\n            }\\\\n        }\\\\n        uint256 blockReward = getBlockReward(pool.lastRewardBlock);\\\\n        if (blockReward <= 0) {\\\\n            return;\\\\n        }\\\\n        uint256 coinReward = blockReward.mul(pool.allocPoint).div(totalAllocPoint);\\\\n\\\\n        pool.accPerShare = pool.accPerShare.add(coinReward.mul(1e12).div(lpSupply));\\\\n        pool.lastRewardBlock = block.number;\\\\n    }\\\\n\\\\n    // View function to see pending coins on frontend.\\\\n    function pending(uint256 _pid, address _user) external view returns (uint256, uint256){\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        if (isMultLP(address(pool.lpToken))) {\\\\n            (uint256 amount, uint256 tokenAmount) = pendingCoinAndToken(_pid, _user);\\\\n            return (amount, tokenAmount);\\\\n        } else {\\\\n            uint256 amount = pendingCoin(_pid, _user);\\\\n            return (amount, 0);\\\\n        }\\\\n    }\\\\n\\\\n    function pendingCoinAndToken(uint256 _pid, address _user) private view returns (uint256, uint256){\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        UserInfo storage user = userInfo[_pid][_user];\\\\n        uint256 accPerShare = pool.accPerShare;\\\\n        uint256 accMultLpPerShare = pool.accMultLpPerShare;\\\\n        if (user.amount > 0) {\\\\n            uint256 TokenPending = IMasterChefBSC(multLpChef).pendingCake(poolCorrespond[_pid], address(this));\\\\n            accMultLpPerShare = accMultLpPerShare.add(TokenPending.mul(1e12).div(pool.totalAmount));\\\\n            uint256 userPending = user.amount.mul(accMultLpPerShare).div(1e12).sub(user.multLpRewardDebt);\\\\n            if (block.number > pool.lastRewardBlock) {\\\\n                uint256 blockReward = getBlockReward(pool.lastRewardBlock);\\\\n                uint256 coinReward = blockReward.mul(pool.allocPoint).div(totalAllocPoint);\\\\n                accPerShare = accPerShare.add(coinReward.mul(1e12).div(pool.totalAmount));\\\\n                return (user.amount.mul(accPerShare).div(1e12).sub(user.rewardDebt), userPending);\\\\n            }\\\\n            if (block.number == pool.lastRewardBlock) {\\\\n                return (user.amount.mul(accPerShare).div(1e12).sub(user.rewardDebt), userPending);\\\\n            }\\\\n        }\\\\n        return (0, 0);\\\\n    }\\\\n\\\\n    function pendingCoin(uint256 _pid, address _user) private view returns (uint256){\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        UserInfo storage user = userInfo[_pid][_user];\\\\n        uint256 accPerShare = pool.accPerShare;\\\\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\\\\n        if (user.amount > 0) {\\\\n            if (block.number > pool.lastRewardBlock) {\\\\n                uint256 blockReward = getBlockReward(pool.lastRewardBlock);\\\\n                uint256 coinReward = blockReward.mul(pool.allocPoint).div(totalAllocPoint);\\\\n                accPerShare = accPerShare.add(coinReward.mul(1e12).div(lpSupply));\\\\n                return user.amount.mul(accPerShare).div(1e12).sub(user.rewardDebt);\\\\n            }\\\\n            if (block.number == pool.lastRewardBlock) {\\\\n                return user.amount.mul(accPerShare).div(1e12).sub(user.rewardDebt);\\\\n            }\\\\n        }\\\\n        return 0;\\\\n    }\\\\n\\\\n    // Deposit LP tokens to BSCPool for coin allocation.\\\\n    function deposit(uint256 _pid, uint256 _amount) public notPause {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        if (isMultLP(address(pool.lpToken))) {\\\\n            depositCoinAndToken(_pid, _amount, msg.sender);\\\\n        } else {\\\\n            depositCoin(_pid, _amount, msg.sender);\\\\n        }\\\\n    }\\\\n\\\\n    function depositCoinAndToken(uint256 _pid, uint256 _amount, address _user) private {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        UserInfo storage user = userInfo[_pid][_user];\\\\n        updatePool(_pid);\\\\n        if (user.amount > 0) {\\\\n            uint256 pendingAmount = user.amount.mul(pool.accPerShare).div(1e12).sub(user.rewardDebt);\\\\n            if (pendingAmount > 0) {\\\\n                safeCoinTransfer(_user, pendingAmount);\\\\n            }\\\\n            uint256 beforeToken = IERC20(multLpToken).balanceOf(address(this));\\\\n            IMasterChefBSC(multLpChef).deposit(poolCorrespond[_pid], 0);\\\\n            uint256 afterToken = IERC20(multLpToken).balanceOf(address(this));\\\\n            pool.accMultLpPerShare = pool.accMultLpPerShare.add(afterToken.sub(beforeToken).mul(1e12).div(pool.totalAmount));\\\\n            uint256 tokenPending = user.amount.mul(pool.accMultLpPerShare).div(1e12).sub(user.multLpRewardDebt);\\\\n            if (tokenPending > 0) {\\\\n                IERC20(multLpToken).safeTransfer(_user, tokenPending);\\\\n            }\\\\n        }\\\\n        if (_amount > 0) {\\\\n            pool.lpToken.safeTransferFrom(_user, address(this), _amount);\\\\n            if (pool.totalAmount == 0) {\\\\n                IMasterChefBSC(multLpChef).deposit(poolCorrespond[_pid], _amount);\\\\n                user.amount = user.amount.add(_amount);\\\\n                pool.totalAmount = pool.totalAmount.add(_amount);\\\\n            } else {\\\\n                uint256 beforeToken = IERC20(multLpToken).balanceOf(address(this));\\\\n                IMasterChefBSC(multLpChef).deposit(poolCorrespond[_pid], _amount);\\\\n                uint256 afterToken = IERC20(multLpToken).balanceOf(address(this));\\\\n                pool.accMultLpPerShare = pool.accMultLpPerShare.add(afterToken.sub(beforeToken).mul(1e12).div(pool.totalAmount));\\\\n                user.amount = user.amount.add(_amount);\\\\n                pool.totalAmount = pool.totalAmount.add(_amount);\\\\n            }\\\\n        }\\\\n        user.rewardDebt = user.amount.mul(pool.accPerShare).div(1e12);\\\\n        user.multLpRewardDebt = user.amount.mul(pool.accMultLpPerShare).div(1e12);\\\\n        emit Deposit(_user, _pid, _amount);\\\\n    }\\\\n\\\\n    function depositCoin(uint256 _pid, uint256 _amount, address _user) private {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        UserInfo storage user = userInfo[_pid][_user];\\\\n        updatePool(_pid);\\\\n        if (user.amount > 0) {\\\\n            uint256 pendingAmount = user.amount.mul(pool.accPerShare).div(1e12).sub(user.rewardDebt);\\\\n            if (pendingAmount > 0) {\\\\n                safeCoinTransfer(_user, pendingAmount);\\\\n            }\\\\n        }\\\\n        if (_amount > 0) {\\\\n            pool.lpToken.safeTransferFrom(_user, address(this), _amount);\\\\n            user.amount = user.amount.add(_amount);\\\\n            pool.totalAmount = pool.totalAmount.add(_amount);\\\\n        }\\\\n        user.rewardDebt = user.amount.mul(pool.accPerShare).div(1e12);\\\\n        emit Deposit(_user, _pid, _amount);\\\\n    }\\\\n\\\\n    // Withdraw LP tokens from BSCPool.\\\\n    function withdraw(uint256 _pid, uint256 _amount) public notPause {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        if (isMultLP(address(pool.lpToken))) {\\\\n            withdrawCoinAndToken(_pid, _amount, msg.sender);\\\\n        } else {\\\\n            withdrawCoin(_pid, _amount, msg.sender);\\\\n        }\\\\n    }\\\\n\\\\n    function withdrawCoinAndToken(uint256 _pid, uint256 _amount, address _user) private {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        UserInfo storage user = userInfo[_pid][_user];\\\\n        require(user.amount >= _amount, \\\\\\"withdrawCoinAndToken: not good\\\\\\");\\\\n        updatePool(_pid);\\\\n        uint256 pendingAmount = user.amount.mul(pool.accPerShare).div(1e12).sub(user.rewardDebt);\\\\n        if (pendingAmount > 0) {\\\\n            safeCoinTransfer(_user, pendingAmount);\\\\n        }\\\\n        if (_amount > 0) {\\\\n            uint256 beforeToken = IERC20(multLpToken).balanceOf(address(this));\\\\n            IMasterChefBSC(multLpChef).withdraw(poolCorrespond[_pid], _amount);\\\\n            uint256 afterToken = IERC20(multLpToken).balanceOf(address(this));\\\\n            pool.accMultLpPerShare = pool.accMultLpPerShare.add(afterToken.sub(beforeToken).mul(1e12).div(pool.totalAmount));\\\\n            uint256 tokenPending = user.amount.mul(pool.accMultLpPerShare).div(1e12).sub(user.multLpRewardDebt);\\\\n            if (tokenPending > 0) {\\\\n                IERC20(multLpToken).safeTransfer(_user, tokenPending);\\\\n            }\\\\n            user.amount = user.amount.sub(_amount);\\\\n            pool.totalAmount = pool.totalAmount.sub(_amount);\\\\n            pool.lpToken.safeTransfer(_user, _amount);\\\\n        }\\\\n        user.rewardDebt = user.amount.mul(pool.accPerShare).div(1e12);\\\\n        user.multLpRewardDebt = user.amount.mul(pool.accMultLpPerShare).div(1e12);\\\\n        emit Withdraw(_user, _pid, _amount);\\\\n    }\\\\n\\\\n    function withdrawCoin(uint256 _pid, uint256 _amount, address _user) private {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        UserInfo storage user = userInfo[_pid][_user];\\\\n        require(user.amount >= _amount, \\\\\\"withdrawCoin: not good\\\\\\");\\\\n        updatePool(_pid);\\\\n        uint256 pendingAmount = user.amount.mul(pool.accPerShare).div(1e12).sub(user.rewardDebt);\\\\n        if (pendingAmount > 0) {\\\\n            safeCoinTransfer(_user, pendingAmount);\\\\n        }\\\\n        if (_amount > 0) {\\\\n            user.amount = user.amount.sub(_amount);\\\\n            pool.totalAmount = pool.totalAmount.sub(_amount);\\\\n            pool.lpToken.safeTransfer(_user, _amount);\\\\n        }\\\\n        user.rewardDebt = user.amount.mul(pool.accPerShare).div(1e12);\\\\n        emit Withdraw(_user, _pid, _amount);\\\\n    }\\\\n\\\\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\\\\n    function emergencyWithdraw(uint256 _pid) public notPause {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        if (isMultLP(address(pool.lpToken))) {\\\\n            emergencyWithdrawCoinAndToken(_pid, msg.sender);\\\\n        } else {\\\\n            emergencyWithdrawCoin(_pid, msg.sender);\\\\n        }\\\\n    }\\\\n\\\\n    function emergencyWithdrawCoinAndToken(uint256 _pid, address _user) private {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        UserInfo storage user = userInfo[_pid][_user];\\\\n        uint256 amount = user.amount;\\\\n        uint256 beforeToken = IERC20(multLpToken).balanceOf(address(this));\\\\n        IMasterChefBSC(multLpChef).withdraw(poolCorrespond[_pid], amount);\\\\n        uint256 afterToken = IERC20(multLpToken).balanceOf(address(this));\\\\n        pool.accMultLpPerShare = pool.accMultLpPerShare.add(afterToken.sub(beforeToken).mul(1e12).div(pool.totalAmount));\\\\n        user.amount = 0;\\\\n        user.rewardDebt = 0;\\\\n        pool.lpToken.safeTransfer(_user, amount);\\\\n        pool.totalAmount = pool.totalAmount.sub(amount);\\\\n        emit EmergencyWithdraw(_user, _pid, amount);\\\\n    }\\\\n\\\\n    function emergencyWithdrawCoin(uint256 _pid, address _user) private {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        UserInfo storage user = userInfo[_pid][_user];\\\\n        uint256 amount = user.amount;\\\\n        user.amount = 0;\\\\n        user.rewardDebt = 0;\\\\n        pool.lpToken.safeTransfer(_user, amount);\\\\n        pool.totalAmount = pool.totalAmount.sub(amount);\\\\n        emit EmergencyWithdraw(_user, _pid, amount);\\\\n    }\\\\n\\\\n    // Safe coin transfer function, just in case if rounding error causes pool to not have enough coins.\\\\n    function safeCoinTransfer(address _to, uint256 _amount) internal {\\\\n        uint256 coinBal = coin.balanceOf(address(this));\\\\n        if (_amount > coinBal) {\\\\n            coin.transfer(_to, coinBal);\\\\n        } else {\\\\n            coin.transfer(_to, _amount);\\\\n        }\\\\n    }\\\\n\\\\n    modifier notPause() {\\\\n        require(paused == false, \\\\\\"Mining has been suspended\\\\\\");\\\\n        _;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x4056ae2f24346379359c450941586796b56254206e08522c7f3a5197075d1d16\\",\\"license\\":\\"MIT\\"},\\"contracts/interfaces/IERC20.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity >=0.6.0 <0.8.0;\\\\n\\\\n/**\\\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\\\n */\\\\ninterface IERC20 {\\\\n    function name() external view returns (string memory);\\\\n    function symbol() external view returns (string memory);\\\\n    function decimals() external view returns (uint8);\\\\n    /**\\\\n     * @dev Returns the amount of tokens in existence.\\\\n     */\\\\n    function totalSupply() external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev Returns the amount of tokens owned by `account`.\\\\n     */\\\\n    function balanceOf(address account) external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev Moves `amount` tokens from the caller\'s account to `recipient`.\\\\n     *\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\\\n\\\\n    /**\\\\n     * @dev Returns the remaining number of tokens that `spender` will be\\\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\\\n     * zero by default.\\\\n     *\\\\n     * This value changes when {approve} or {transferFrom} are called.\\\\n     */\\\\n    function allowance(address owner, address spender) external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\\\n     *\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\n     *\\\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\\\n     * that someone may use both the old and the new allowance by unfortunate\\\\n     * transaction ordering. One possible solution to mitigate this race\\\\n     * condition is to first reduce the spender\'s allowance to 0 and set the\\\\n     * desired value afterwards:\\\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\\\n     *\\\\n     * Emits an {Approval} event.\\\\n     */\\\\n    function approve(address spender, uint256 amount) external returns (bool);\\\\n\\\\n    /**\\\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\\\n     * allowance mechanism. `amount` is then deducted from the caller\'s\\\\n     * allowance.\\\\n     *\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\\\n\\\\n    /**\\\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\\\n     * another (`to`).\\\\n     *\\\\n     * Note that `value` may be zero.\\\\n     */\\\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\\\n\\\\n    /**\\\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\\\n     * a call to {approve}. `value` is the new allowance.\\\\n     */\\\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\\\n}\\\\n\\",\\"keccak256\\":\\"0x2add72e4226a16fb58fb4bbf88bc5484a96f589a4b2f4dbb3aec7c8512aebc3d\\",\\"license\\":\\"MIT\\"},\\"contracts/interfaces/IMasterChefBSC.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\npragma solidity ^0.6.0;\\\\n\\\\ninterface IMasterChefBSC {\\\\n    function pendingCake(uint256 pid, address user) external view returns (uint256);\\\\n\\\\n    function deposit(uint256 pid, uint256 amount) external;\\\\n\\\\n    function withdraw(uint256 pid, uint256 amount) external;\\\\n\\\\n    function emergencyWithdraw(uint256 pid) external;\\\\n}\\\\n\\",\\"keccak256\\":\\"0x8e046f748290d736e41b61031587b79c417e388ad411ffdcbc92cab0ea66d05c\\",\\"license\\":\\"MIT\\"},\\"contracts/utils/Address.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity >=0.6.2 <0.8.0;\\\\n\\\\n/**\\\\n * @dev Collection of functions related to the address type\\\\n */\\\\nlibrary Address {\\\\n    /**\\\\n     * @dev Returns true if `account` is a contract.\\\\n     *\\\\n     * [IMPORTANT]\\\\n     * ====\\\\n     * It is unsafe to assume that an address for which this function returns\\\\n     * false is an externally-owned account (EOA) and not a contract.\\\\n     *\\\\n     * Among others, `isContract` will return false for the following\\\\n     * types of addresses:\\\\n     *\\\\n     *  - an externally-owned account\\\\n     *  - a contract in construction\\\\n     *  - an address where a contract will be created\\\\n     *  - an address where a contract lived, but was destroyed\\\\n     * ====\\\\n     */\\\\n    function isContract(address account) internal view returns (bool) {\\\\n        // This method relies on extcodesize, which returns 0 for contracts in\\\\n        // construction, since the code is only stored at the end of the\\\\n        // constructor execution.\\\\n\\\\n        uint256 size;\\\\n        // solhint-disable-next-line no-inline-assembly\\\\n        assembly { size := extcodesize(account) }\\\\n        return size > 0;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Replacement for Solidity\'s `transfer`: sends `amount` wei to\\\\n     * `recipient`, forwarding all available gas and reverting on errors.\\\\n     *\\\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\\\n     * imposed by `transfer`, making them unable to receive funds via\\\\n     * `transfer`. {sendValue} removes this limitation.\\\\n     *\\\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\\\n     *\\\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\\\n     * taken to not create reentrancy vulnerabilities. Consider using\\\\n     * {ReentrancyGuard} or the\\\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\\\n     */\\\\n    function sendValue(address payable recipient, uint256 amount) internal {\\\\n        require(address(this).balance >= amount, \\\\\\"Address: insufficient balance\\\\\\");\\\\n\\\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\\\n        (bool success, ) = recipient.call{ value: amount }(\\\\\\"\\\\\\");\\\\n        require(success, \\\\\\"Address: unable to send value, recipient may have reverted\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Performs a Solidity function call using a low level `call`. A\\\\n     * plain`call` is an unsafe replacement for a function call: use this\\\\n     * function instead.\\\\n     *\\\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\\\n     * function (like regular Solidity function calls).\\\\n     *\\\\n     * Returns the raw returned data. To convert to the expected return value,\\\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `target` must be a contract.\\\\n     * - calling `target` with `data` must not revert.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\\\n      return functionCall(target, data, \\\\\\"Address: low-level call failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\\\n        return functionCallWithValue(target, data, 0, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\n     * but also transferring `value` wei to `target`.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - the calling contract must have an ETH balance of at least `value`.\\\\n     * - the called Solidity function must be `payable`.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\\\n        return functionCallWithValue(target, data, value, \\\\\\"Address: low-level call with value failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\\\n        require(address(this).balance >= value, \\\\\\"Address: insufficient balance for call\\\\\\");\\\\n        require(isContract(target), \\\\\\"Address: call to non-contract\\\\\\");\\\\n\\\\n        // solhint-disable-next-line avoid-low-level-calls\\\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\\\n        return _verifyCallResult(success, returndata, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\n     * but performing a static call.\\\\n     *\\\\n     * _Available since v3.3._\\\\n     */\\\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\\\n        return functionStaticCall(target, data, \\\\\\"Address: low-level static call failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\\\n     * but performing a static call.\\\\n     *\\\\n     * _Available since v3.3._\\\\n     */\\\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\\\n        require(isContract(target), \\\\\\"Address: static call to non-contract\\\\\\");\\\\n\\\\n        // solhint-disable-next-line avoid-low-level-calls\\\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\\\n        return _verifyCallResult(success, returndata, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\n     * but performing a delegate call.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\\\n        return functionDelegateCall(target, data, \\\\\\"Address: low-level delegate call failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\\\n     * but performing a delegate call.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\\\n        require(isContract(target), \\\\\\"Address: delegate call to non-contract\\\\\\");\\\\n\\\\n        // solhint-disable-next-line avoid-low-level-calls\\\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\\\n        return _verifyCallResult(success, returndata, errorMessage);\\\\n    }\\\\n\\\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\\\n        if (success) {\\\\n            return returndata;\\\\n        } else {\\\\n            // Look for revert reason and bubble it up if present\\\\n            if (returndata.length > 0) {\\\\n                // The easiest way to bubble the revert reason is using memory via assembly\\\\n\\\\n                // solhint-disable-next-line no-inline-assembly\\\\n                assembly {\\\\n                    let returndata_size := mload(returndata)\\\\n                    revert(add(32, returndata), returndata_size)\\\\n                }\\\\n            } else {\\\\n                revert(errorMessage);\\\\n            }\\\\n        }\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\\",\\"license\\":\\"MIT\\"},\\"contracts/utils/SafeERC20.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity >=0.6.0 <0.8.0;\\\\n\\\\nimport \\\\\\"../interfaces/IERC20.sol\\\\\\";\\\\nimport \\\\\\"./SafeMath.sol\\\\\\";\\\\nimport \\\\\\"./Address.sol\\\\\\";\\\\n\\\\n/**\\\\n * @title SafeERC20\\\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\\\n * contract returns false). Tokens that return no value (and instead revert or\\\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\\\n * successful.\\\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\\\n */\\\\nlibrary SafeERC20 {\\\\n    using SafeMath for uint256;\\\\n    using Address for address;\\\\n\\\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\\\n    }\\\\n\\\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Deprecated. This function has issues similar to the ones found in\\\\n     * {IERC20-approve}, and its usage is discouraged.\\\\n     *\\\\n     * Whenever possible, use {safeIncreaseAllowance} and\\\\n     * {safeDecreaseAllowance} instead.\\\\n     */\\\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\\\n        // safeApprove should only be called when setting an initial allowance,\\\\n        // or when resetting it to zero. To increase and decrease it, use\\\\n        // \'safeIncreaseAllowance\' and \'safeDecreaseAllowance\'\\\\n        // solhint-disable-next-line max-line-length\\\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\\\n            \\\\\\"SafeERC20: approve from non-zero to non-zero allowance\\\\\\"\\\\n        );\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\\\n    }\\\\n\\\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\\\n    }\\\\n\\\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\\\\"SafeERC20: decreased allowance below zero\\\\\\");\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\\\n     * @param token The token targeted by the call.\\\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\\\n     */\\\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\\\n        // We need to perform a low level call here, to bypass Solidity\'s return data size checking mechanism, since\\\\n        // we\'re implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\\\n        // the target address contains contract code and also asserts for success in the low-level call.\\\\n\\\\n        bytes memory returndata = address(token).functionCall(data, \\\\\\"SafeERC20: low-level call failed\\\\\\");\\\\n        if (returndata.length > 0) { // Return data is optional\\\\n            // solhint-disable-next-line max-line-length\\\\n            require(abi.decode(returndata, (bool)), \\\\\\"SafeERC20: ERC20 operation did not succeed\\\\\\");\\\\n        }\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xab22aabcbc5ade018c1a86a701457795c52c33f33a4b61e0a12e008dd9d14b69\\",\\"license\\":\\"MIT\\"},\\"contracts/utils/SafeMath.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity >=0.6.0 <0.8.0;\\\\n\\\\n/**\\\\n * @dev Wrappers over Solidity\'s arithmetic operations with added overflow\\\\n * checks.\\\\n *\\\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\\\n * in bugs, because programmers usually assume that an overflow raises an\\\\n * error, which is the standard behavior in high level programming languages.\\\\n * `SafeMath` restores this intuition by reverting the transaction when an\\\\n * operation overflows.\\\\n *\\\\n * Using this library instead of the unchecked operations eliminates an entire\\\\n * class of bugs, so it\'s recommended to use it always.\\\\n */\\\\nlibrary SafeMath {\\\\n    /**\\\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\\\n        uint256 c = a + b;\\\\n        if (c < a) return (false, 0);\\\\n        return (true, c);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\\\n        if (b > a) return (false, 0);\\\\n        return (true, a - b);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\\\n        // Gas optimization: this is cheaper than requiring \'a\' not being zero, but the\\\\n        // benefit is lost if \'b\' is also tested.\\\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\\\n        if (a == 0) return (true, 0);\\\\n        uint256 c = a * b;\\\\n        if (c / a != b) return (false, 0);\\\\n        return (true, c);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\\\n        if (b == 0) return (false, 0);\\\\n        return (true, a / b);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\\\n        if (b == 0) return (false, 0);\\\\n        return (true, a % b);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the addition of two unsigned integers, reverting on\\\\n     * overflow.\\\\n     *\\\\n     * Counterpart to Solidity\'s `+` operator.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - Addition cannot overflow.\\\\n     */\\\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n        uint256 c = a + b;\\\\n        require(c >= a, \\\\\\"SafeMath: addition overflow\\\\\\");\\\\n        return c;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\\\n     * overflow (when the result is negative).\\\\n     *\\\\n     * Counterpart to Solidity\'s `-` operator.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - Subtraction cannot overflow.\\\\n     */\\\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n        require(b <= a, \\\\\\"SafeMath: subtraction overflow\\\\\\");\\\\n        return a - b;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\\\n     * overflow.\\\\n     *\\\\n     * Counterpart to Solidity\'s `*` operator.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - Multiplication cannot overflow.\\\\n     */\\\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n        if (a == 0) return 0;\\\\n        uint256 c = a * b;\\\\n        require(c / a == b, \\\\\\"SafeMath: multiplication overflow\\\\\\");\\\\n        return c;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\\\n     * division by zero. The result is rounded towards zero.\\\\n     *\\\\n     * Counterpart to Solidity\'s `/` operator. Note: this function uses a\\\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - The divisor cannot be zero.\\\\n     */\\\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n        require(b > 0, \\\\\\"SafeMath: division by zero\\\\\\");\\\\n        return a / b;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\\\n     * reverting when dividing by zero.\\\\n     *\\\\n     * Counterpart to Solidity\'s `%` operator. This function uses a `revert`\\\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\\\n     * invalid opcode to revert (consuming all remaining gas).\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - The divisor cannot be zero.\\\\n     */\\\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n        require(b > 0, \\\\\\"SafeMath: modulo by zero\\\\\\");\\\\n        return a % b;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\\\n     * overflow (when the result is negative).\\\\n     *\\\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\\\n     *\\\\n     * Counterpart to Solidity\'s `-` operator.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - Subtraction cannot overflow.\\\\n     */\\\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\\\n        require(b <= a, errorMessage);\\\\n        return a - b;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\\\n     * division by zero. The result is rounded towards zero.\\\\n     *\\\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\\\n     *\\\\n     * Counterpart to Solidity\'s `/` operator. Note: this function uses a\\\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - The divisor cannot be zero.\\\\n     */\\\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\\\n        require(b > 0, errorMessage);\\\\n        return a / b;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\\\n     * reverting with custom message when dividing by zero.\\\\n     *\\\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\\\n     *\\\\n     * Counterpart to Solidity\'s `%` operator. This function uses a `revert`\\\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\\\n     * invalid opcode to revert (consuming all remaining gas).\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - The divisor cannot be zero.\\\\n     */\\\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\\\n        require(b > 0, errorMessage);\\\\n        return a % b;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\\",\\"license\\":\\"MIT\\"}},\\"version\\":1}","bytecode":"0x608060405266cd98cb94f23b606004556009805460ff191690556000600a55630140cd00600e553480156200003357600080fd5b506040516200358638038062003586833981810160405260408110156200005957600080fd5b50805160209091015160006200006e620000e2565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600380546001600160a01b0319166001600160a01b039390931692909217909155600b55620000e6565b3390565b61349080620000f66000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c80637fe6f5ac11610130578063b5ec5c99116100b8578063e2bbb1581161007c578063e2bbb158146105c6578063e4c75c27146105e9578063e6ab8d481461062e578063e715e23414610636578063f2fde38b1461066457610227565b8063b5ec5c9914610574578063cb4502c414610591578063d431b1ac146105ae578063dbd8e476146105b6578063dfc7b95b146105be57610227565b806394f7f62b116100ff57806394f7f62b146104c3578063a9fb763c146104e0578063aaae43cc146104fd578063b0c7044b1461052b578063b337d32c1461055157610227565b80637fe6f5ac1461042e57806381952c24146104545780638da5cb5b1461047157806393f1a40b1461047957610227565b806351eb05a6116101b35780635c975abb116101825780635c975abb146103e3578063630b5ba1146103eb57806364482f79146103f3578063705bbc011461041e578063715018a61461042657610227565b806351eb05a6146103675780635312ea8e1461038457806356c5867d146103a15780635a3e251f146103db57610227565b806317caf6f1116101fa57806317caf6f1146102e15780631eaaa045146102e9578063431549071461031f578063441a3e701461033c57806348cd4cb11461035f57610227565b8063081e3eda1461022c57806311df999514610246578063135f8aa71461026a5780631526fe2714610287575b600080fd5b61023461068a565b60408051918252519081900360200190f35b61024e610690565b604080516001600160a01b039092168252519081900360200190f35b6102346004803603602081101561028057600080fd5b503561069f565b6102a46004803603602081101561029d57600080fd5b50356106fa565b604080516001600160a01b0390971687526020870195909552858501939093526060850191909152608084015260a0830152519081900360c00190f35b610234610747565b61031d600480360360608110156102ff57600080fd5b508035906001600160a01b036020820135169060400135151561074d565b005b61024e6004803603602081101561033557600080fd5b50356109b5565b61031d6004803603604081101561035257600080fd5b5080359060200135610a1e565b610234610acd565b61031d6004803603602081101561037d57600080fd5b5035610ad3565b61031d6004803603602081101561039a57600080fd5b5035610c43565b6103c7600480360360208110156103b757600080fd5b50356001600160a01b0316610cef565b604080519115158252519081900360200190f35b610234610e36565b6103c7610e3c565b61031d610e45565b61031d6004803603606081101561040957600080fd5b50803590602081013590604001351515610e64565b61024e610f3f565b61031d610f4e565b6103c76004803603602081101561044457600080fd5b50356001600160a01b0316610ffa565b61031d6004803603602081101561046a57600080fd5b5035611007565b61024e611076565b6104a56004803603604081101561048f57600080fd5b50803590602001356001600160a01b0316611085565b60408051938452602084019290925282820152519081900360600190f35b610234600480360360208110156104d957600080fd5b50356110b1565b610234600480360360208110156104f657600080fd5b503561114f565b61031d6004803603604081101561051357600080fd5b506001600160a01b038135811691602001351661117c565b6102346004803603602081101561054157600080fd5b50356001600160a01b0316611386565b61031d6004803603604081101561056757600080fd5b5080359060200135611398565b61031d6004803603602081101561058a57600080fd5b5035611460565b610234600480360360208110156105a757600080fd5b50356114c7565b61031d6114d9565b61023461154f565b61024e611555565b61031d600480360360408110156105dc57600080fd5b5080359060200135611564565b610615600480360360408110156105ff57600080fd5b50803590602001356001600160a01b0316611609565b6040805192835260208301919091528051918290030190f35b610234611683565b61031d6004803603604081101561064c57600080fd5b506001600160a01b0381358116916020013516611694565b61031d6004803603602081101561067a57600080fd5b50356001600160a01b031661178b565b60055490565b6003546001600160a01b031681565b6000600e54600014156106b4575060006106f5565b600b548211156106f1576106ea600e546106e460016106de600b548761188d90919063ffffffff16565b9061188d565b906118ea565b90506106f5565b5060005b919050565b6005818154811061070757fe5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b0390941695509193909286565b600a5481565b610755611951565b6001600160a01b0316610766611076565b6001600160a01b0316146107af576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b03821661080a576040805162461bcd60e51b815260206004820152601c60248201527f5f6c70546f6b656e20697320746865207a65726f206164647265737300000000604482015290519081900360640190fd5b801561081857610818610e45565b6000600b54431161082b57600b5461082d565b435b600a5490915061083d9085611955565b600a556040805160c0810182526001600160a01b038581168252602082018781529282018481526000606084018181526080850182815260a0860183815260058054600180820183559190955296517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600690950294850180546001600160a01b031916919097161790955595517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db183015591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db282015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db382015592517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4840155517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db59092019190915561099261068a565b6001600160a01b0390941660009081526008602052604090209303909255505050565b600060016109c1611683565b03821115610a0d576040805162461bcd60e51b815260206004820152601460248201527306e6f742066696e642074686973206d756c744c560641b604482015290519081900360640190fd5b610a186001836119af565b92915050565b60095460ff1615610a72576040805162461bcd60e51b8152602060048201526019602482015278135a5b9a5b99c81a185cc81899595b881cdd5cdc195b991959603a1b604482015290519081900360640190fd5b600060058381548110610a8157fe5b600091825260209091206006909102018054909150610aa8906001600160a01b0316610ffa565b15610abd57610ab88383336119bb565b610ac8565b610ac8838333611d47565b505050565b600b5481565b600060058281548110610ae257fe5b9060005260206000209060060201905080600201544311610b035750610c40565b8054600090610b1a906001600160a01b0316610ffa565b15610b40576005820154610b35575043600290910155610c40565b506005810154610bca565b8154604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610b8a57600080fd5b505afa158015610b9e573d6000803e3d6000fd5b505050506040513d6020811015610bb457600080fd5b5051905080610bca575043600290910155610c40565b6000610bd983600201546110b1565b905060008111610beb57505050610c40565b6000610c0a600a546106e4866001015485611ec790919063ffffffff16565b9050610c2d610c22846106e48464e8d4a51000611ec7565b600386015490611955565b6003850155505043600290920191909155505b50565b60095460ff1615610c97576040805162461bcd60e51b8152602060048201526019602482015278135a5b9a5b99c81a185cc81899595b881cdd5cdc195b991959603a1b604482015290519081900360640190fd5b600060058281548110610ca657fe5b600091825260209091206006909102018054909150610ccd906001600160a01b0316610ffa565b15610ce157610cdc8233611f20565b610ceb565b610ceb8233612167565b5050565b6000610cf9611951565b6001600160a01b0316610d0a611076565b6001600160a01b031614610d53576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b038216610da7576040805162461bcd60e51b81526020600482015260166024820152754c5020697320746865207a65726f206164647265737360501b604482015290519081900360640190fd5b600c546040805163095ea7b360e01b81526001600160a01b039283166004820152600019602482015290519184169163095ea7b3916044808201926020929091908290030181600087803b158015610dfe57600080fd5b505af1158015610e12573d6000803e3d6000fd5b505050506040513d6020811015610e2857600080fd5b50610a18905060018361221d565b600e5481565b60095460ff1681565b60055460005b81811015610ceb57610e5c81610ad3565b600101610e4b565b610e6c611951565b6001600160a01b0316610e7d611076565b6001600160a01b031614610ec6576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b8015610ed457610ed4610e45565b610f1182610f0b60058681548110610ee857fe5b906000526020600020906006020160010154600a5461188d90919063ffffffff16565b90611955565b600a819055508160058481548110610f2557fe5b906000526020600020906006020160010181905550505050565b600d546001600160a01b031681565b610f56611951565b6001600160a01b0316610f67611076565b6001600160a01b031614610fb0576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610a18600183612232565b61100f611951565b6001600160a01b0316611020611076565b6001600160a01b031614611069576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b611071610e45565b600455565b6000546001600160a01b031690565b600660209081526000928352604080842090915290825290208054600182015460029092015490919083565b600080806110be8461069f565b905060006110cb4361069f565b90505b8082101561112657600b54600e546001909301926000916110f491610f0b908690611ec7565b905061111c6111156111058361114f565b61110f848a61188d565b90611ec7565b8590611955565b90955092506110ce565b61114661113f6111354361114f565b61110f438961188d565b8490611955565b95945050505050565b60008061115b8361069f565b90506111758160020a6004546118ea90919063ffffffff16565b9392505050565b611184611951565b6001600160a01b0316611195611076565b6001600160a01b0316146111de576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b038216158015906111fe57506001600160a01b03811615155b611245576040805162461bcd60e51b8152602060048201526013602482015272697320746865207a65726f206164647265737360681b604482015290519081900360640190fd5b60095460ff161515600114611298576040805162461bcd60e51b815260206004820152601460248201527327379036b4b734b7339039bab9b832b739b4b7b760611b604482015290519081900360640190fd5b600d80546001600160a01b038085166001600160a01b031992831617909255600c80549284169290911691909117905560006112d2611683565b90505b8015610ac85760006112e9600160006119af565b6001600160a01b03808216600090815260086020908152604080832054600c548185526007909352818420548251632989754760e11b815260048101919091529151959650949190931692635312ea8e92602480830193919282900301818387803b15801561135757600080fd5b505af115801561136b573d6000803e3d6000fd5b5050505061137a600183612247565b505050600019016112d5565b60086020526000908152604090205481565b6113a0611951565b6001600160a01b03166113b1611076565b6001600160a01b0316146113fa576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b600161140461068a565b0382111561144e576040805162461bcd60e51b81526020600482015260126024820152711b9bdd08199a5b99081d1a1a5cc81c1bdbdb60721b604482015290519081900360640190fd5b60009182526007602052604090912055565b611468611951565b6001600160a01b0316611479611076565b6001600160a01b0316146114c2576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b600e55565b60076020526000908152604090205481565b6114e1611951565b6001600160a01b03166114f2611076565b6001600160a01b03161461153b576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6009805460ff19811660ff90911615179055565b60045481565b600c546001600160a01b031681565b60095460ff16156115b8576040805162461bcd60e51b8152602060048201526019602482015278135a5b9a5b99c81a185cc81899595b881cdd5cdc195b991959603a1b604482015290519081900360640190fd5b6000600583815481106115c757fe5b6000918252602090912060069091020180549091506115ee906001600160a01b0316610ffa565b156115fe57610ab883833361225c565b610ac88383336127d6565b60008060006005858154811061161b57fe5b600091825260209091206006909102018054909150611642906001600160a01b0316610ffa565b1561166257600080611654878761290f565b909550935061167c92505050565b600061166e8686612b40565b93506000925061167c915050565b9250929050565b600061168f6001612cd6565b905090565b61169c611951565b6001600160a01b03166116ad611076565b6001600160a01b0316146116f6576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b0382161580159061171657506001600160a01b03811615155b61175d576040805162461bcd60e51b8152602060048201526013602482015272697320746865207a65726f206164647265737360681b604482015290519081900360640190fd5b600d80546001600160a01b039384166001600160a01b031991821617909155600c8054929093169116179055565b611793611951565b6001600160a01b03166117a4611076565b6001600160a01b0316146117ed576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b0381166118325760405162461bcd60e51b81526004018080602001828103825260268152602001806133a46026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828211156118e4576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000808211611940576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161194957fe5b049392505050565b3390565b600082820183811015611175576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60006111758383612ce1565b6000600584815481106119ca57fe5b60009182526020808320878452600680835260408086206001600160a01b0389168752909352919093208054929091029092019250841115611a53576040805162461bcd60e51b815260206004820152601e60248201527f7769746864726177436f696e416e64546f6b656e3a206e6f7420676f6f640000604482015290519081900360640190fd5b611a5c85610ad3565b6000611a8a82600101546106de64e8d4a510006106e487600301548760000154611ec790919063ffffffff16565b90508015611a9c57611a9c8482612d45565b8415611cbf57600d54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611aed57600080fd5b505afa158015611b01573d6000803e3d6000fd5b505050506040513d6020811015611b1757600080fd5b5051600c54600089815260076020526040808220548151630441a3e760e41b81526004810191909152602481018b905290519394506001600160a01b039092169263441a3e7092604480820193929182900301818387803b158015611b7b57600080fd5b505af1158015611b8f573d6000803e3d6000fd5b5050600d54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b158015611be057600080fd5b505afa158015611bf4573d6000803e3d6000fd5b505050506040513d6020811015611c0a57600080fd5b50516005860154909150611c3a90611c2f906106e464e8d4a5100061110f868861188d565b600487015490611955565b6004860181905560028501548554600092611c6492916106de9164e8d4a51000916106e491611ec7565b90508015611c8357600d54611c83906001600160a01b03168883612ed5565b8454611c8f908961188d565b85556005860154611ca0908961188d565b60058701558554611cbb906001600160a01b0316888a612ed5565b5050505b60038301548254611cda9164e8d4a51000916106e491611ec7565b600183015560048301548254611cfa9164e8d4a51000916106e491611ec7565b600283015560408051868152905187916001600160a01b038716917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a3505050505050565b600060058481548110611d5657fe5b60009182526020808320878452600680835260408086206001600160a01b0389168752909352919093208054929091029092019250841115611dd8576040805162461bcd60e51b81526020600482015260166024820152751dda5d1a191c985dd0dbda5b8e881b9bdd0819dbdbd960521b604482015290519081900360640190fd5b611de185610ad3565b6000611e0f82600101546106de64e8d4a510006106e487600301548760000154611ec790919063ffffffff16565b90508015611e2157611e218482612d45565b8415611e5f578154611e33908661188d565b82556005830154611e44908661188d565b60058401558254611e5f906001600160a01b03168587612ed5565b60038301548254611e7a9164e8d4a51000916106e491611ec7565b600183015560408051868152905187916001600160a01b038716917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a3505050505050565b600082611ed657506000610a18565b82820282848281611ee357fe5b04146111755760405162461bcd60e51b81526004018080602001828103825260218152602001806133f06021913960400191505060405180910390fd5b600060058381548110611f2f57fe5b60009182526020808320868452600680835260408086206001600160a01b03808a1688529085528187208054600d5484516370a0823160e01b8152306004820152945195909802909501985096939593949316926370a0823192602480840193829003018186803b158015611fa357600080fd5b505afa158015611fb7573d6000803e3d6000fd5b505050506040513d6020811015611fcd57600080fd5b5051600c54600088815260076020526040808220548151630441a3e760e41b815260048101919091526024810187905290519394506001600160a01b039092169263441a3e7092604480820193929182900301818387803b15801561203157600080fd5b505af1158015612045573d6000803e3d6000fd5b5050600d54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b15801561209657600080fd5b505afa1580156120aa573d6000803e3d6000fd5b505050506040513d60208110156120c057600080fd5b505160058601549091506120e590611c2f906106e464e8d4a5100061110f868861188d565b600486015560008085556001850155845461210a906001600160a01b03168785612ed5565b6005850154612119908461188d565b600586015560408051848152905188916001600160a01b038916917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a350505050505050565b60006005838154811061217657fe5b60009182526020808320868452600680835260408086206001600160a01b03808a168852945285208054868255600182019690965593020180549094509192916121c291168583612ed5565b60058301546121d1908261188d565b600584015560408051828152905186916001600160a01b038716917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a35050505050565b6000611175836001600160a01b038416612f27565b6000611175836001600160a01b038416612f71565b6000611175836001600160a01b038416612f89565b60006005848154811061226b57fe5b60009182526020808320878452600680835260408086206001600160a01b038916875290935291909320910290910191506122a585610ad3565b8054156124c75760006122da82600101546106de64e8d4a510006106e487600301548760000154611ec790919063ffffffff16565b905080156122ec576122ec8482612d45565b600d54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561233757600080fd5b505afa15801561234b573d6000803e3d6000fd5b505050506040513d602081101561236157600080fd5b5051600c54600089815260076020526040808220548151631c57762b60e31b815260048101919091526024810183905290519394506001600160a01b039092169263e2bbb15892604480820193929182900301818387803b1580156123c557600080fd5b505af11580156123d9573d6000803e3d6000fd5b5050600d54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b15801561242a57600080fd5b505afa15801561243e573d6000803e3d6000fd5b505050506040513d602081101561245457600080fd5b5051600586015490915061247990611c2f906106e464e8d4a5100061110f868861188d565b60048601819055600285015485546000926124a392916106de9164e8d4a51000916106e491611ec7565b905080156124c257600d546124c2906001600160a01b03168883612ed5565b505050505b831561274f5781546124e4906001600160a01b031684308761304f565b600582015461258d57600c54600086815260076020526040808220548151631c57762b60e31b815260048101919091526024810188905290516001600160a01b039093169263e2bbb1589260448084019391929182900301818387803b15801561254d57600080fd5b505af1158015612561573d6000803e3d6000fd5b505082546125729250905085611955565b815560058201546125839085611955565b600583015561274f565b600d54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156125d857600080fd5b505afa1580156125ec573d6000803e3d6000fd5b505050506040513d602081101561260257600080fd5b5051600c54600088815260076020526040808220548151631c57762b60e31b81526004810191909152602481018a905290519394506001600160a01b039092169263e2bbb15892604480820193929182900301818387803b15801561266657600080fd5b505af115801561267a573d6000803e3d6000fd5b5050600d54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b1580156126cb57600080fd5b505afa1580156126df573d6000803e3d6000fd5b505050506040513d60208110156126f557600080fd5b505160058501549091506127259061271a906106e464e8d4a5100061110f868861188d565b600486015490611955565b600485015582546127369087611955565b835560058401546127479087611955565b600585015550505b6003820154815461276a9164e8d4a51000916106e491611ec7565b60018201556004820154815461278a9164e8d4a51000916106e491611ec7565b600282015560408051858152905186916001600160a01b038616917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a35050505050565b6000600584815481106127e557fe5b60009182526020808320878452600680835260408086206001600160a01b0389168752909352919093209102909101915061281f85610ad3565b80541561286857600061285482600101546106de64e8d4a510006106e487600301548760000154611ec790919063ffffffff16565b90508015612866576128668482612d45565b505b83156128a8578154612885906001600160a01b031684308761304f565b80546128919085611955565b815560058201546128a29085611955565b60058301555b600382015481546128c39164e8d4a51000916106e491611ec7565b600182015560408051858152905186916001600160a01b038616917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a35050505050565b60008060006005858154811061292157fe5b60009182526020808320888452600680835260408086206001600160a01b038b168752909352919093209102909101600381015460048201548354929450909115612b3057600c546000898152600760209081526040808320548151631175a1dd60e01b81526004810191909152306024820152905192936001600160a01b031692631175a1dd92604480840193919291829003018186803b1580156129c657600080fd5b505afa1580156129da573d6000803e3d6000fd5b505050506040513d60208110156129f057600080fd5b50516005860154909150612a1890612a11906106e48464e8d4a51000611ec7565b8390611955565b91506000612a4485600201546106de64e8d4a510006106e4878a60000154611ec790919063ffffffff16565b90508560020154431115612aea576000612a6187600201546110b1565b90506000612a82600a546106e48a6001015485611ec790919063ffffffff16565b9050612aae612aa789600501546106e464e8d4a5100085611ec790919063ffffffff16565b8790611955565b9550612ad887600101546106de64e8d4a510006106e48a8c60000154611ec790919063ffffffff16565b8399509950505050505050505061167c565b8560020154431415612b2d57612b1e85600101546106de64e8d4a510006106e4888a60000154611ec790919063ffffffff16565b9750955061167c945050505050565b50505b5060009788975095505050505050565b60008060058481548110612b5057fe5b60009182526020808320878452600680835260408086206001600160a01b03808b16885290855281872060039390960290930191820154825482516370a0823160e01b815230600482015292519398509596909590949316926370a0823192602480840193829003018186803b158015612bc957600080fd5b505afa158015612bdd573d6000803e3d6000fd5b505050506040513d6020811015612bf357600080fd5b5051835490915015612cc9578360020154431115612c8a576000612c1a85600201546110b1565b90506000612c3b600a546106e4886001015485611ec790919063ffffffff16565b9050612c53611115846106e48464e8d4a51000611ec7565b9350612c7d85600101546106de64e8d4a510006106e4888a60000154611ec790919063ffffffff16565b9650505050505050610a18565b8360020154431415612cc957612cbe83600101546106de64e8d4a510006106e4868860000154611ec790919063ffffffff16565b945050505050610a18565b5060009695505050505050565b6000610a18826130af565b81546000908210612d235760405162461bcd60e51b81526004018080602001828103825260228152602001806133826022913960400191505060405180910390fd5b826000018281548110612d3257fe5b9060005260206000200154905092915050565b600354604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015612d9057600080fd5b505afa158015612da4573d6000803e3d6000fd5b505050506040513d6020811015612dba57600080fd5b5051905080821115612e4e576003546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b158015612e1c57600080fd5b505af1158015612e30573d6000803e3d6000fd5b505050506040513d6020811015612e4657600080fd5b50610ac89050565b6003546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b158015612ea457600080fd5b505af1158015612eb8573d6000803e3d6000fd5b505050506040513d6020811015612ece57600080fd5b5050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610ac89084906130b3565b6000612f338383612f71565b612f6957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a18565b506000610a18565b60009081526001919091016020526040902054151590565b600081815260018301602052604081205480156130455783546000198083019190810190600090879083908110612fbc57fe5b9060005260206000200154905080876000018481548110612fd957fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061300957fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610a18565b6000915050610a18565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526130a99085906130b3565b50505050565b5490565b6060613108826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166131649092919063ffffffff16565b805190915015610ac85780806020019051602081101561312757600080fd5b5051610ac85760405162461bcd60e51b815260040180806020018281038252602a815260200180613431602a913960400191505060405180910390fd5b6060613173848460008561317b565b949350505050565b6060824710156131bc5760405162461bcd60e51b81526004018080602001828103825260268152602001806133ca6026913960400191505060405180910390fd5b6131c5856132d7565b613216576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106132555780518252601f199092019160209182019101613236565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146132b7576040519150601f19603f3d011682016040523d82523d6000602084013e6132bc565b606091505b50915091506132cc8282866132dd565b979650505050505050565b3b151590565b606083156132ec575081611175565b8251156132fc5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561334657818101518382015260200161332e565b50505050905090810190601f1680156133735780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220ce5a843dffabf9129d1ca72d107973e00e964f7498a1a6f46548b0695bd8197464736f6c634300060c0033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106102275760003560e01c80637fe6f5ac11610130578063b5ec5c99116100b8578063e2bbb1581161007c578063e2bbb158146105c6578063e4c75c27146105e9578063e6ab8d481461062e578063e715e23414610636578063f2fde38b1461066457610227565b8063b5ec5c9914610574578063cb4502c414610591578063d431b1ac146105ae578063dbd8e476146105b6578063dfc7b95b146105be57610227565b806394f7f62b116100ff57806394f7f62b146104c3578063a9fb763c146104e0578063aaae43cc146104fd578063b0c7044b1461052b578063b337d32c1461055157610227565b80637fe6f5ac1461042e57806381952c24146104545780638da5cb5b1461047157806393f1a40b1461047957610227565b806351eb05a6116101b35780635c975abb116101825780635c975abb146103e3578063630b5ba1146103eb57806364482f79146103f3578063705bbc011461041e578063715018a61461042657610227565b806351eb05a6146103675780635312ea8e1461038457806356c5867d146103a15780635a3e251f146103db57610227565b806317caf6f1116101fa57806317caf6f1146102e15780631eaaa045146102e9578063431549071461031f578063441a3e701461033c57806348cd4cb11461035f57610227565b8063081e3eda1461022c57806311df999514610246578063135f8aa71461026a5780631526fe2714610287575b600080fd5b61023461068a565b60408051918252519081900360200190f35b61024e610690565b604080516001600160a01b039092168252519081900360200190f35b6102346004803603602081101561028057600080fd5b503561069f565b6102a46004803603602081101561029d57600080fd5b50356106fa565b604080516001600160a01b0390971687526020870195909552858501939093526060850191909152608084015260a0830152519081900360c00190f35b610234610747565b61031d600480360360608110156102ff57600080fd5b508035906001600160a01b036020820135169060400135151561074d565b005b61024e6004803603602081101561033557600080fd5b50356109b5565b61031d6004803603604081101561035257600080fd5b5080359060200135610a1e565b610234610acd565b61031d6004803603602081101561037d57600080fd5b5035610ad3565b61031d6004803603602081101561039a57600080fd5b5035610c43565b6103c7600480360360208110156103b757600080fd5b50356001600160a01b0316610cef565b604080519115158252519081900360200190f35b610234610e36565b6103c7610e3c565b61031d610e45565b61031d6004803603606081101561040957600080fd5b50803590602081013590604001351515610e64565b61024e610f3f565b61031d610f4e565b6103c76004803603602081101561044457600080fd5b50356001600160a01b0316610ffa565b61031d6004803603602081101561046a57600080fd5b5035611007565b61024e611076565b6104a56004803603604081101561048f57600080fd5b50803590602001356001600160a01b0316611085565b60408051938452602084019290925282820152519081900360600190f35b610234600480360360208110156104d957600080fd5b50356110b1565b610234600480360360208110156104f657600080fd5b503561114f565b61031d6004803603604081101561051357600080fd5b506001600160a01b038135811691602001351661117c565b6102346004803603602081101561054157600080fd5b50356001600160a01b0316611386565b61031d6004803603604081101561056757600080fd5b5080359060200135611398565b61031d6004803603602081101561058a57600080fd5b5035611460565b610234600480360360208110156105a757600080fd5b50356114c7565b61031d6114d9565b61023461154f565b61024e611555565b61031d600480360360408110156105dc57600080fd5b5080359060200135611564565b610615600480360360408110156105ff57600080fd5b50803590602001356001600160a01b0316611609565b6040805192835260208301919091528051918290030190f35b610234611683565b61031d6004803603604081101561064c57600080fd5b506001600160a01b0381358116916020013516611694565b61031d6004803603602081101561067a57600080fd5b50356001600160a01b031661178b565b60055490565b6003546001600160a01b031681565b6000600e54600014156106b4575060006106f5565b600b548211156106f1576106ea600e546106e460016106de600b548761188d90919063ffffffff16565b9061188d565b906118ea565b90506106f5565b5060005b919050565b6005818154811061070757fe5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b0390941695509193909286565b600a5481565b610755611951565b6001600160a01b0316610766611076565b6001600160a01b0316146107af576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b03821661080a576040805162461bcd60e51b815260206004820152601c60248201527f5f6c70546f6b656e20697320746865207a65726f206164647265737300000000604482015290519081900360640190fd5b801561081857610818610e45565b6000600b54431161082b57600b5461082d565b435b600a5490915061083d9085611955565b600a556040805160c0810182526001600160a01b038581168252602082018781529282018481526000606084018181526080850182815260a0860183815260058054600180820183559190955296517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600690950294850180546001600160a01b031916919097161790955595517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db183015591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db282015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db382015592517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4840155517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db59092019190915561099261068a565b6001600160a01b0390941660009081526008602052604090209303909255505050565b600060016109c1611683565b03821115610a0d576040805162461bcd60e51b815260206004820152601460248201527306e6f742066696e642074686973206d756c744c560641b604482015290519081900360640190fd5b610a186001836119af565b92915050565b60095460ff1615610a72576040805162461bcd60e51b8152602060048201526019602482015278135a5b9a5b99c81a185cc81899595b881cdd5cdc195b991959603a1b604482015290519081900360640190fd5b600060058381548110610a8157fe5b600091825260209091206006909102018054909150610aa8906001600160a01b0316610ffa565b15610abd57610ab88383336119bb565b610ac8565b610ac8838333611d47565b505050565b600b5481565b600060058281548110610ae257fe5b9060005260206000209060060201905080600201544311610b035750610c40565b8054600090610b1a906001600160a01b0316610ffa565b15610b40576005820154610b35575043600290910155610c40565b506005810154610bca565b8154604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610b8a57600080fd5b505afa158015610b9e573d6000803e3d6000fd5b505050506040513d6020811015610bb457600080fd5b5051905080610bca575043600290910155610c40565b6000610bd983600201546110b1565b905060008111610beb57505050610c40565b6000610c0a600a546106e4866001015485611ec790919063ffffffff16565b9050610c2d610c22846106e48464e8d4a51000611ec7565b600386015490611955565b6003850155505043600290920191909155505b50565b60095460ff1615610c97576040805162461bcd60e51b8152602060048201526019602482015278135a5b9a5b99c81a185cc81899595b881cdd5cdc195b991959603a1b604482015290519081900360640190fd5b600060058281548110610ca657fe5b600091825260209091206006909102018054909150610ccd906001600160a01b0316610ffa565b15610ce157610cdc8233611f20565b610ceb565b610ceb8233612167565b5050565b6000610cf9611951565b6001600160a01b0316610d0a611076565b6001600160a01b031614610d53576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b038216610da7576040805162461bcd60e51b81526020600482015260166024820152754c5020697320746865207a65726f206164647265737360501b604482015290519081900360640190fd5b600c546040805163095ea7b360e01b81526001600160a01b039283166004820152600019602482015290519184169163095ea7b3916044808201926020929091908290030181600087803b158015610dfe57600080fd5b505af1158015610e12573d6000803e3d6000fd5b505050506040513d6020811015610e2857600080fd5b50610a18905060018361221d565b600e5481565b60095460ff1681565b60055460005b81811015610ceb57610e5c81610ad3565b600101610e4b565b610e6c611951565b6001600160a01b0316610e7d611076565b6001600160a01b031614610ec6576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b8015610ed457610ed4610e45565b610f1182610f0b60058681548110610ee857fe5b906000526020600020906006020160010154600a5461188d90919063ffffffff16565b90611955565b600a819055508160058481548110610f2557fe5b906000526020600020906006020160010181905550505050565b600d546001600160a01b031681565b610f56611951565b6001600160a01b0316610f67611076565b6001600160a01b031614610fb0576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610a18600183612232565b61100f611951565b6001600160a01b0316611020611076565b6001600160a01b031614611069576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b611071610e45565b600455565b6000546001600160a01b031690565b600660209081526000928352604080842090915290825290208054600182015460029092015490919083565b600080806110be8461069f565b905060006110cb4361069f565b90505b8082101561112657600b54600e546001909301926000916110f491610f0b908690611ec7565b905061111c6111156111058361114f565b61110f848a61188d565b90611ec7565b8590611955565b90955092506110ce565b61114661113f6111354361114f565b61110f438961188d565b8490611955565b95945050505050565b60008061115b8361069f565b90506111758160020a6004546118ea90919063ffffffff16565b9392505050565b611184611951565b6001600160a01b0316611195611076565b6001600160a01b0316146111de576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b038216158015906111fe57506001600160a01b03811615155b611245576040805162461bcd60e51b8152602060048201526013602482015272697320746865207a65726f206164647265737360681b604482015290519081900360640190fd5b60095460ff161515600114611298576040805162461bcd60e51b815260206004820152601460248201527327379036b4b734b7339039bab9b832b739b4b7b760611b604482015290519081900360640190fd5b600d80546001600160a01b038085166001600160a01b031992831617909255600c80549284169290911691909117905560006112d2611683565b90505b8015610ac85760006112e9600160006119af565b6001600160a01b03808216600090815260086020908152604080832054600c548185526007909352818420548251632989754760e11b815260048101919091529151959650949190931692635312ea8e92602480830193919282900301818387803b15801561135757600080fd5b505af115801561136b573d6000803e3d6000fd5b5050505061137a600183612247565b505050600019016112d5565b60086020526000908152604090205481565b6113a0611951565b6001600160a01b03166113b1611076565b6001600160a01b0316146113fa576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b600161140461068a565b0382111561144e576040805162461bcd60e51b81526020600482015260126024820152711b9bdd08199a5b99081d1a1a5cc81c1bdbdb60721b604482015290519081900360640190fd5b60009182526007602052604090912055565b611468611951565b6001600160a01b0316611479611076565b6001600160a01b0316146114c2576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b600e55565b60076020526000908152604090205481565b6114e1611951565b6001600160a01b03166114f2611076565b6001600160a01b03161461153b576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6009805460ff19811660ff90911615179055565b60045481565b600c546001600160a01b031681565b60095460ff16156115b8576040805162461bcd60e51b8152602060048201526019602482015278135a5b9a5b99c81a185cc81899595b881cdd5cdc195b991959603a1b604482015290519081900360640190fd5b6000600583815481106115c757fe5b6000918252602090912060069091020180549091506115ee906001600160a01b0316610ffa565b156115fe57610ab883833361225c565b610ac88383336127d6565b60008060006005858154811061161b57fe5b600091825260209091206006909102018054909150611642906001600160a01b0316610ffa565b1561166257600080611654878761290f565b909550935061167c92505050565b600061166e8686612b40565b93506000925061167c915050565b9250929050565b600061168f6001612cd6565b905090565b61169c611951565b6001600160a01b03166116ad611076565b6001600160a01b0316146116f6576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b0382161580159061171657506001600160a01b03811615155b61175d576040805162461bcd60e51b8152602060048201526013602482015272697320746865207a65726f206164647265737360681b604482015290519081900360640190fd5b600d80546001600160a01b039384166001600160a01b031991821617909155600c8054929093169116179055565b611793611951565b6001600160a01b03166117a4611076565b6001600160a01b0316146117ed576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b0381166118325760405162461bcd60e51b81526004018080602001828103825260268152602001806133a46026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828211156118e4576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000808211611940576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161194957fe5b049392505050565b3390565b600082820183811015611175576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60006111758383612ce1565b6000600584815481106119ca57fe5b60009182526020808320878452600680835260408086206001600160a01b0389168752909352919093208054929091029092019250841115611a53576040805162461bcd60e51b815260206004820152601e60248201527f7769746864726177436f696e416e64546f6b656e3a206e6f7420676f6f640000604482015290519081900360640190fd5b611a5c85610ad3565b6000611a8a82600101546106de64e8d4a510006106e487600301548760000154611ec790919063ffffffff16565b90508015611a9c57611a9c8482612d45565b8415611cbf57600d54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611aed57600080fd5b505afa158015611b01573d6000803e3d6000fd5b505050506040513d6020811015611b1757600080fd5b5051600c54600089815260076020526040808220548151630441a3e760e41b81526004810191909152602481018b905290519394506001600160a01b039092169263441a3e7092604480820193929182900301818387803b158015611b7b57600080fd5b505af1158015611b8f573d6000803e3d6000fd5b5050600d54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b158015611be057600080fd5b505afa158015611bf4573d6000803e3d6000fd5b505050506040513d6020811015611c0a57600080fd5b50516005860154909150611c3a90611c2f906106e464e8d4a5100061110f868861188d565b600487015490611955565b6004860181905560028501548554600092611c6492916106de9164e8d4a51000916106e491611ec7565b90508015611c8357600d54611c83906001600160a01b03168883612ed5565b8454611c8f908961188d565b85556005860154611ca0908961188d565b60058701558554611cbb906001600160a01b0316888a612ed5565b5050505b60038301548254611cda9164e8d4a51000916106e491611ec7565b600183015560048301548254611cfa9164e8d4a51000916106e491611ec7565b600283015560408051868152905187916001600160a01b038716917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a3505050505050565b600060058481548110611d5657fe5b60009182526020808320878452600680835260408086206001600160a01b0389168752909352919093208054929091029092019250841115611dd8576040805162461bcd60e51b81526020600482015260166024820152751dda5d1a191c985dd0dbda5b8e881b9bdd0819dbdbd960521b604482015290519081900360640190fd5b611de185610ad3565b6000611e0f82600101546106de64e8d4a510006106e487600301548760000154611ec790919063ffffffff16565b90508015611e2157611e218482612d45565b8415611e5f578154611e33908661188d565b82556005830154611e44908661188d565b60058401558254611e5f906001600160a01b03168587612ed5565b60038301548254611e7a9164e8d4a51000916106e491611ec7565b600183015560408051868152905187916001600160a01b038716917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a3505050505050565b600082611ed657506000610a18565b82820282848281611ee357fe5b04146111755760405162461bcd60e51b81526004018080602001828103825260218152602001806133f06021913960400191505060405180910390fd5b600060058381548110611f2f57fe5b60009182526020808320868452600680835260408086206001600160a01b03808a1688529085528187208054600d5484516370a0823160e01b8152306004820152945195909802909501985096939593949316926370a0823192602480840193829003018186803b158015611fa357600080fd5b505afa158015611fb7573d6000803e3d6000fd5b505050506040513d6020811015611fcd57600080fd5b5051600c54600088815260076020526040808220548151630441a3e760e41b815260048101919091526024810187905290519394506001600160a01b039092169263441a3e7092604480820193929182900301818387803b15801561203157600080fd5b505af1158015612045573d6000803e3d6000fd5b5050600d54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b15801561209657600080fd5b505afa1580156120aa573d6000803e3d6000fd5b505050506040513d60208110156120c057600080fd5b505160058601549091506120e590611c2f906106e464e8d4a5100061110f868861188d565b600486015560008085556001850155845461210a906001600160a01b03168785612ed5565b6005850154612119908461188d565b600586015560408051848152905188916001600160a01b038916917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a350505050505050565b60006005838154811061217657fe5b60009182526020808320868452600680835260408086206001600160a01b03808a168852945285208054868255600182019690965593020180549094509192916121c291168583612ed5565b60058301546121d1908261188d565b600584015560408051828152905186916001600160a01b038716917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a35050505050565b6000611175836001600160a01b038416612f27565b6000611175836001600160a01b038416612f71565b6000611175836001600160a01b038416612f89565b60006005848154811061226b57fe5b60009182526020808320878452600680835260408086206001600160a01b038916875290935291909320910290910191506122a585610ad3565b8054156124c75760006122da82600101546106de64e8d4a510006106e487600301548760000154611ec790919063ffffffff16565b905080156122ec576122ec8482612d45565b600d54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561233757600080fd5b505afa15801561234b573d6000803e3d6000fd5b505050506040513d602081101561236157600080fd5b5051600c54600089815260076020526040808220548151631c57762b60e31b815260048101919091526024810183905290519394506001600160a01b039092169263e2bbb15892604480820193929182900301818387803b1580156123c557600080fd5b505af11580156123d9573d6000803e3d6000fd5b5050600d54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b15801561242a57600080fd5b505afa15801561243e573d6000803e3d6000fd5b505050506040513d602081101561245457600080fd5b5051600586015490915061247990611c2f906106e464e8d4a5100061110f868861188d565b60048601819055600285015485546000926124a392916106de9164e8d4a51000916106e491611ec7565b905080156124c257600d546124c2906001600160a01b03168883612ed5565b505050505b831561274f5781546124e4906001600160a01b031684308761304f565b600582015461258d57600c54600086815260076020526040808220548151631c57762b60e31b815260048101919091526024810188905290516001600160a01b039093169263e2bbb1589260448084019391929182900301818387803b15801561254d57600080fd5b505af1158015612561573d6000803e3d6000fd5b505082546125729250905085611955565b815560058201546125839085611955565b600583015561274f565b600d54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156125d857600080fd5b505afa1580156125ec573d6000803e3d6000fd5b505050506040513d602081101561260257600080fd5b5051600c54600088815260076020526040808220548151631c57762b60e31b81526004810191909152602481018a905290519394506001600160a01b039092169263e2bbb15892604480820193929182900301818387803b15801561266657600080fd5b505af115801561267a573d6000803e3d6000fd5b5050600d54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b1580156126cb57600080fd5b505afa1580156126df573d6000803e3d6000fd5b505050506040513d60208110156126f557600080fd5b505160058501549091506127259061271a906106e464e8d4a5100061110f868861188d565b600486015490611955565b600485015582546127369087611955565b835560058401546127479087611955565b600585015550505b6003820154815461276a9164e8d4a51000916106e491611ec7565b60018201556004820154815461278a9164e8d4a51000916106e491611ec7565b600282015560408051858152905186916001600160a01b038616917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a35050505050565b6000600584815481106127e557fe5b60009182526020808320878452600680835260408086206001600160a01b0389168752909352919093209102909101915061281f85610ad3565b80541561286857600061285482600101546106de64e8d4a510006106e487600301548760000154611ec790919063ffffffff16565b90508015612866576128668482612d45565b505b83156128a8578154612885906001600160a01b031684308761304f565b80546128919085611955565b815560058201546128a29085611955565b60058301555b600382015481546128c39164e8d4a51000916106e491611ec7565b600182015560408051858152905186916001600160a01b038616917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a35050505050565b60008060006005858154811061292157fe5b60009182526020808320888452600680835260408086206001600160a01b038b168752909352919093209102909101600381015460048201548354929450909115612b3057600c546000898152600760209081526040808320548151631175a1dd60e01b81526004810191909152306024820152905192936001600160a01b031692631175a1dd92604480840193919291829003018186803b1580156129c657600080fd5b505afa1580156129da573d6000803e3d6000fd5b505050506040513d60208110156129f057600080fd5b50516005860154909150612a1890612a11906106e48464e8d4a51000611ec7565b8390611955565b91506000612a4485600201546106de64e8d4a510006106e4878a60000154611ec790919063ffffffff16565b90508560020154431115612aea576000612a6187600201546110b1565b90506000612a82600a546106e48a6001015485611ec790919063ffffffff16565b9050612aae612aa789600501546106e464e8d4a5100085611ec790919063ffffffff16565b8790611955565b9550612ad887600101546106de64e8d4a510006106e48a8c60000154611ec790919063ffffffff16565b8399509950505050505050505061167c565b8560020154431415612b2d57612b1e85600101546106de64e8d4a510006106e4888a60000154611ec790919063ffffffff16565b9750955061167c945050505050565b50505b5060009788975095505050505050565b60008060058481548110612b5057fe5b60009182526020808320878452600680835260408086206001600160a01b03808b16885290855281872060039390960290930191820154825482516370a0823160e01b815230600482015292519398509596909590949316926370a0823192602480840193829003018186803b158015612bc957600080fd5b505afa158015612bdd573d6000803e3d6000fd5b505050506040513d6020811015612bf357600080fd5b5051835490915015612cc9578360020154431115612c8a576000612c1a85600201546110b1565b90506000612c3b600a546106e4886001015485611ec790919063ffffffff16565b9050612c53611115846106e48464e8d4a51000611ec7565b9350612c7d85600101546106de64e8d4a510006106e4888a60000154611ec790919063ffffffff16565b9650505050505050610a18565b8360020154431415612cc957612cbe83600101546106de64e8d4a510006106e4868860000154611ec790919063ffffffff16565b945050505050610a18565b5060009695505050505050565b6000610a18826130af565b81546000908210612d235760405162461bcd60e51b81526004018080602001828103825260228152602001806133826022913960400191505060405180910390fd5b826000018281548110612d3257fe5b9060005260206000200154905092915050565b600354604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015612d9057600080fd5b505afa158015612da4573d6000803e3d6000fd5b505050506040513d6020811015612dba57600080fd5b5051905080821115612e4e576003546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b158015612e1c57600080fd5b505af1158015612e30573d6000803e3d6000fd5b505050506040513d6020811015612e4657600080fd5b50610ac89050565b6003546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b158015612ea457600080fd5b505af1158015612eb8573d6000803e3d6000fd5b505050506040513d6020811015612ece57600080fd5b5050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610ac89084906130b3565b6000612f338383612f71565b612f6957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a18565b506000610a18565b60009081526001919091016020526040902054151590565b600081815260018301602052604081205480156130455783546000198083019190810190600090879083908110612fbc57fe5b9060005260206000200154905080876000018481548110612fd957fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061300957fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610a18565b6000915050610a18565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526130a99085906130b3565b50505050565b5490565b6060613108826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166131649092919063ffffffff16565b805190915015610ac85780806020019051602081101561312757600080fd5b5051610ac85760405162461bcd60e51b815260040180806020018281038252602a815260200180613431602a913960400191505060405180910390fd5b6060613173848460008561317b565b949350505050565b6060824710156131bc5760405162461bcd60e51b81526004018080602001828103825260268152602001806133ca6026913960400191505060405180910390fd5b6131c5856132d7565b613216576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106132555780518252601f199092019160209182019101613236565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146132b7576040519150601f19603f3d011682016040523d82523d6000602084013e6132bc565b606091505b50915091506132cc8282866132dd565b979650505050505050565b3b151590565b606083156132ec575081611175565b8251156132fc5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561334657818101518382015260200161332e565b50505050905090810190601f1680156133735780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220ce5a843dffabf9129d1ca72d107973e00e964f7498a1a6f46548b0695bd8197464736f6c634300060c0033","devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":7,"contract":"contracts/MineStake.sol:MineStake","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":643,"contract":"contracts/MineStake.sol:MineStake","label":"_multLP","offset":0,"slot":"1","type":"t_struct(AddressSet)408_storage"},{"astId":665,"contract":"contracts/MineStake.sol:MineStake","label":"coin","offset":0,"slot":"3","type":"t_contract(IERC20)2949"},{"astId":668,"contract":"contracts/MineStake.sol:MineStake","label":"perBlock","offset":0,"slot":"4","type":"t_uint256"},{"astId":671,"contract":"contracts/MineStake.sol:MineStake","label":"poolInfo","offset":0,"slot":"5","type":"t_array(t_struct(PoolInfo)663_storage)dyn_storage"},{"astId":677,"contract":"contracts/MineStake.sol:MineStake","label":"userInfo","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)650_storage))"},{"astId":681,"contract":"contracts/MineStake.sol:MineStake","label":"poolCorrespond","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_uint256)"},{"astId":685,"contract":"contracts/MineStake.sol:MineStake","label":"LpOfPid","offset":0,"slot":"8","type":"t_mapping(t_address,t_uint256)"},{"astId":688,"contract":"contracts/MineStake.sol:MineStake","label":"paused","offset":0,"slot":"9","type":"t_bool"},{"astId":691,"contract":"contracts/MineStake.sol:MineStake","label":"totalAllocPoint","offset":0,"slot":"10","type":"t_uint256"},{"astId":693,"contract":"contracts/MineStake.sol:MineStake","label":"startBlock","offset":0,"slot":"11","type":"t_uint256"},{"astId":695,"contract":"contracts/MineStake.sol:MineStake","label":"multLpChef","offset":0,"slot":"12","type":"t_address"},{"astId":697,"contract":"contracts/MineStake.sol:MineStake","label":"multLpToken","offset":0,"slot":"13","type":"t_address"},{"astId":700,"contract":"contracts/MineStake.sol:MineStake","label":"halvingPeriod","offset":0,"slot":"14","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_array(t_struct(PoolInfo)663_storage)dyn_storage":{"base":"t_struct(PoolInfo)663_storage","encoding":"dynamic_array","label":"struct MineStake.PoolInfo[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(IERC20)2949":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_address,t_struct(UserInfo)650_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct MineStake.UserInfo)","numberOfBytes":"32","value":"t_struct(UserInfo)650_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)650_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => struct MineStake.UserInfo))","numberOfBytes":"32","value":"t_mapping(t_address,t_struct(UserInfo)650_storage)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(AddressSet)408_storage":{"encoding":"inplace","label":"struct EnumerableSet.AddressSet","members":[{"astId":407,"contract":"contracts/MineStake.sol:MineStake","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)143_storage"}],"numberOfBytes":"64"},"t_struct(PoolInfo)663_storage":{"encoding":"inplace","label":"struct MineStake.PoolInfo","members":[{"astId":652,"contract":"contracts/MineStake.sol:MineStake","label":"lpToken","offset":0,"slot":"0","type":"t_contract(IERC20)2949"},{"astId":654,"contract":"contracts/MineStake.sol:MineStake","label":"allocPoint","offset":0,"slot":"1","type":"t_uint256"},{"astId":656,"contract":"contracts/MineStake.sol:MineStake","label":"lastRewardBlock","offset":0,"slot":"2","type":"t_uint256"},{"astId":658,"contract":"contracts/MineStake.sol:MineStake","label":"accPerShare","offset":0,"slot":"3","type":"t_uint256"},{"astId":660,"contract":"contracts/MineStake.sol:MineStake","label":"accMultLpPerShare","offset":0,"slot":"4","type":"t_uint256"},{"astId":662,"contract":"contracts/MineStake.sol:MineStake","label":"totalAmount","offset":0,"slot":"5","type":"t_uint256"}],"numberOfBytes":"192"},"t_struct(Set)143_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":138,"contract":"contracts/MineStake.sol:MineStake","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":142,"contract":"contracts/MineStake.sol:MineStake","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_struct(UserInfo)650_storage":{"encoding":"inplace","label":"struct MineStake.UserInfo","members":[{"astId":645,"contract":"contracts/MineStake.sol:MineStake","label":"amount","offset":0,"slot":"0","type":"t_uint256"},{"astId":647,"contract":"contracts/MineStake.sol:MineStake","label":"rewardDebt","offset":0,"slot":"1","type":"t_uint256"},{"astId":649,"contract":"contracts/MineStake.sol:MineStake","label":"multLpRewardDebt","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}')},"59fa":function(e,t,n){e.exports=n.p+"img/warning.7295a92c.svg"},"5b53":function(e){e.exports=JSON.parse('{"v":"5.6.9","fr":30,"ip":0,"op":120,"w":1920,"h":500,"nm":"btcpi线条动画","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"“图层 2”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[45.742,141.25,0],"to":[0,-2.292,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[45.742,127.5,0],"to":[0,0,0],"ti":[0,-2.292,0]},{"t":120,"s":[45.742,141.25,0]}],"ix":2},"a":{"a":0,"k":[16,16,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":60,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.038,0],[0,-3.038],[3.038,0],[0,3.038]],"o":[[3.038,0],[0,3.038],[-3.038,0],[0,-3.038]],"v":[[0,-5.5],[5.5,0],[0,5.5],[-5.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.284,0],[0,-8.284],[8.284,0],[0,8.284]],"o":[[8.284,0],[0,8.284],[-8.284,0],[0,-8.284]],"v":[[0,-15],[15,0],[0,15],[-15,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"“图层 3”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[128.742,395,0],"to":[0,2.917,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[128.742,412.5,0],"to":[0,0,0],"ti":[0,2.917,0]},{"t":120,"s":[128.742,395,0]}],"ix":2},"a":{"a":0,"k":[16,16,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":60,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.038,0],[0,-3.038],[3.038,0],[0,3.038]],"o":[[3.038,0],[0,3.038],[-3.038,0],[0,-3.038]],"v":[[0,-5.5],[5.5,0],[0,5.5],[-5.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.284,0],[0,-8.284],[8.284,0],[0,8.284]],"o":[[8.284,0],[0,8.284],[-8.284,0],[0,-8.284]],"v":[[0,-15],[15,0],[0,15],[-15,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"“图层 4”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[450.742,105,0],"to":[0,-3.417,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[450.742,84.5,0],"to":[0,0,0],"ti":[0,-3.417,0]},{"t":120,"s":[450.742,105,0]}],"ix":2},"a":{"a":0,"k":[16,16,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":60,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.038,0],[0,-3.038],[3.038,0],[0,3.038]],"o":[[3.038,0],[0,3.038],[-3.038,0],[0,-3.038]],"v":[[0,-5.5],[5.5,0],[0,5.5],[-5.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.284,0],[0,-8.284],[8.284,0],[0,8.284]],"o":[[8.284,0],[0,8.284],[-8.284,0],[0,-8.284]],"v":[[0,-15],[15,0],[0,15],[-15,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"“图层 5”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[507.742,301,0],"to":[0,0.917,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[507.742,306.5,0],"to":[0,0,0],"ti":[0,0.917,0]},{"t":120,"s":[507.742,301,0]}],"ix":2},"a":{"a":0,"k":[16,16,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":60,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.038,0],[0,-3.038],[3.038,0],[0,3.038]],"o":[[3.038,0],[0,3.038],[-3.038,0],[0,-3.038]],"v":[[0,-5.5],[5.5,0],[0,5.5],[-5.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.284,0],[0,-8.284],[8.284,0],[0,8.284]],"o":[[8.284,0],[0,8.284],[-8.284,0],[0,-8.284]],"v":[[0,-15],[15,0],[0,15],[-15,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"“图层 7”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[999.742,186.5,0],"to":[0,-1.5,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[999.742,177.5,0],"to":[0,0,0],"ti":[0,-1.5,0]},{"t":120,"s":[999.742,186.5,0]}],"ix":2},"a":{"a":0,"k":[16,16,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":60,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.038,0],[0,-3.038],[3.038,0],[0,3.038]],"o":[[3.038,0],[0,3.038],[-3.038,0],[0,-3.038]],"v":[[0,-5.5],[5.5,0],[0,5.5],[-5.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.284,0],[0,-8.284],[8.284,0],[0,8.284]],"o":[[8.284,0],[0,8.284],[-8.284,0],[0,-8.284]],"v":[[0,-15],[15,0],[0,15],[-15,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"“图层 8”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[1379.742,216.5,0],"to":[0,-0.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[1379.742,212.5,0],"to":[0,0,0],"ti":[0,-0.667,0]},{"t":120,"s":[1379.742,216.5,0]}],"ix":2},"a":{"a":0,"k":[16,16,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":60,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.038,0],[0,-3.038],[3.038,0],[0,3.038]],"o":[[3.038,0],[0,3.038],[-3.038,0],[0,-3.038]],"v":[[0,-5.5],[5.5,0],[0,5.5],[-5.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.284,0],[0,-8.284],[8.284,0],[0,8.284]],"o":[[8.284,0],[0,8.284],[-8.284,0],[0,-8.284]],"v":[[0,-15],[15,0],[0,15],[-15,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"“图层 9”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[1590.742,394.5,0],"to":[0,2.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[1590.742,410.5,0],"to":[0,0,0],"ti":[0,2.667,0]},{"t":120,"s":[1590.742,394.5,0]}],"ix":2},"a":{"a":0,"k":[21,21,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":60,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-4.017,0],[0,-4.017],[4.017,0],[0,4.017]],"o":[[4.017,0],[0,4.017],[-4.017,0],[0,-4.017]],"v":[[0,-7.274],[7.274,0],[0,7.274],[-7.274,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[20.999,21],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-11.046,0],[0,-11.046],[11.046,0],[0,11.046]],"o":[[11.046,0],[0,11.046],[-11.046,0],[0,-11.046]],"v":[[0,-20],[20,0],[0,20],[-20,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[21,21],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"“图层 10”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[1737.742,342.5,0],"to":[0,2.167,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[1737.742,355.5,0],"to":[0,0,0],"ti":[0,2.167,0]},{"t":120,"s":[1737.742,342.5,0]}],"ix":2},"a":{"a":0,"k":[16,16,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":60,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.038,0],[0,-3.038],[3.038,0],[0,3.038]],"o":[[3.038,0],[0,3.038],[-3.038,0],[0,-3.038]],"v":[[0,-5.5],[5.5,0],[0,5.5],[-5.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.284,0],[0,-8.284],[8.284,0],[0,8.284]],"o":[[8.284,0],[0,8.284],[-8.284,0],[0,-8.284]],"v":[[0,-15],[15,0],[0,15],[-15,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"“图层 11”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[1865.742,105.5,0],"to":[0,-3.167,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[1865.742,86.5,0],"to":[0,0,0],"ti":[0,-3.167,0]},{"t":120,"s":[1865.742,105.5,0]}],"ix":2},"a":{"a":0,"k":[16,16,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":60,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.038,0],[0,-3.038],[3.038,0],[0,3.038]],"o":[[3.038,0],[0,3.038],[-3.038,0],[0,-3.038]],"v":[[0,-5.5],[5.5,0],[0,5.5],[-5.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.284,0],[0,-8.284],[8.284,0],[0,8.284]],"o":[[8.284,0],[0,8.284],[-8.284,0],[0,-8.284]],"v":[[0,-15],[15,0],[0,15],[-15,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"“图层 12”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[1633.743,135.5,0],"to":[0,-2.333,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[1633.743,121.5,0],"to":[0,0,0],"ti":[0,-2.333,0]},{"t":120,"s":[1633.743,135.5,0]}],"ix":2},"a":{"a":0,"k":[22,22,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":60,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-4.142,0],[0,-4.142],[4.142,0],[0,4.142]],"o":[[4.142,0],[0,4.142],[-4.142,0],[0,-4.142]],"v":[[0,-7.5],[7.5,0],[0,7.5],[-7.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[22,22],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-11.598,0],[0,-11.598],[11.598,0],[0,11.598]],"o":[[11.598,0],[0,11.598],[-11.598,0],[0,-11.598]],"v":[[0,-21],[21,0],[0,21],[-21,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[22,22],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"“图层 13”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[877.743,331.5,0],"to":[0,1.833,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[877.743,342.5,0],"to":[0,0,0],"ti":[0,1.833,0]},{"t":120,"s":[877.743,331.5,0]}],"ix":2},"a":{"a":0,"k":[22,22,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":60,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-4.142,0],[0,-4.142],[4.142,0],[0,4.142]],"o":[[4.142,0],[0,4.142],[-4.142,0],[0,-4.142]],"v":[[0,-7.5],[7.5,0],[0,7.5],[-7.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[22,22],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-11.598,0],[0,-11.598],[11.598,0],[0,11.598]],"o":[[11.598,0],[0,11.598],[-11.598,0],[0,-11.598]],"v":[[0,-21],[21,0],[0,21],[-21,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[22,22],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"“图层 14”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[293.743,190.5,0],"to":[0,-1.5,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[293.743,181.5,0],"to":[0,0,0],"ti":[0,-1.5,0]},{"t":120,"s":[293.743,190.5,0]}],"ix":2},"a":{"a":0,"k":[22,22,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":60,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-4.142,0],[0,-4.142],[4.142,0],[0,4.142]],"o":[[4.142,0],[0,4.142],[-4.142,0],[0,-4.142]],"v":[[0,-7.5],[7.5,0],[0,7.5],[-7.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[22,22],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-11.598,0],[0,-11.598],[11.598,0],[0,11.598]],"o":[[11.598,0],[0,11.598],[-11.598,0],[0,-11.598]],"v":[[0,-21],[21,0],[0,21],[-21,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[22,22],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"“图层 16”轮廓","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[50]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":60,"s":[100]},{"t":120,"s":[50]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[960,248.783,0],"ix":2},"a":{"a":0,"k":[960.25,164.572,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[100,89.046,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":60,"s":[100,100,100]},{"t":120,"s":[100,89.046,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[905.118,-162.559],[675.615,-127.823],[674.573,-127.452],[674.553,-127.498],[673.958,-127.233],[420.509,-36.983],[41.208,-71.809],[40.931,-71.835],[-82.885,92.747],[-83.372,92.872],[-83.62,92.848],[-510.162,-163.531],[-665.297,-67.883],[-666.204,-68.417],[-666.272,-68.458],[-913.35,-122.651],[-913.614,-122.71],[-960,-77.188],[-960,-76.973],[-959.407,-76.368],[-913.3,-121.617],[-666.642,-67.515],[-666.259,-67.289],[-666.362,-67.226],[-959.956,60.76],[-959.557,61.676],[-666.521,-66.071],[-831.662,163.166],[-832.496,164.322],[-452.538,58.358],[-83.943,93.822],[-83.295,94.21],[-82.909,94.443],[-82.295,93.627],[420.45,-35.833],[423.025,-32.676],[630.949,163.623],[631.136,163.8],[632.841,163.46],[777.514,107.537],[777.721,107.456],[777.91,106.959],[778.05,107.274],[778.964,106.867],[778.45,105.713],[905.792,-161.65],[905.834,-161.656],[960,-109.002],[960,-110.397],[906.262,-162.636],[906.859,-163.892],[905.958,-164.321]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-664.326,-67.312],[-510.154,-162.36],[-85.933,92.625],[-451.073,57.493],[-451.223,56.952],[-452.557,57.325]],"c":true},"ix":2},"nm":"路径 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[674.978,-126.545],[675.858,-126.858],[904.599,-161.47],[777.914,104.511]],"c":true},"ix":2},"nm":"路径 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[422.363,-36.582],[674.032,-126.207],[777.256,105.491]],"c":true},"ix":2},"nm":"路径 4","mn":"ADBE Vector Shape - Group","hd":false},{"ind":4,"ty":"sh","ix":5,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[41.395,-70.788],[417.927,-36.215],[-81.332,92.347]],"c":true},"ix":2},"nm":"路径 5","mn":"ADBE Vector Shape - Group","hd":false},{"ind":5,"ty":"sh","ix":6,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-665,-66.47],[-665.319,-66.7],[-665.288,-66.719],[-453.895,57.698],[-830.017,162.594]],"c":true},"ix":2},"nm":"路径 6","mn":"ADBE Vector Shape - Group","hd":false},{"ind":6,"ty":"sh","ix":7,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[423.755,-33.355],[421.832,-35.718],[777.025,106.475],[776.945,106.684],[632.565,162.501],[631.449,162.72]],"c":true},"ix":2},"nm":"路径 7","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"合并路径 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.454901990704,0.717647058824,0.964705942191,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[960.25,164.572],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":9,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0}],"markers":[]}')},6:function(e,t){},"63c2":function(e,t,n){e.exports=n.p+"img/error.921545c0.svg"},"641d":function(e,t,n){},"689d":function(e,t,n){e.exports=n.p+"img/USDC-LP.b1d04c9c.svg"},"6cbb":function(e,t,n){e.exports=n.p+"img/unknown.00e62d83.svg"},7:function(e,t){},"70b1":function(e){e.exports=JSON.parse('{"address":"0x3D30544A44BdE0015fe298425aa73077E754F510","abi":[{"inputs":[{"internalType":"contract IERC20","name":"_coin","type":"address"},{"internalType":"uint256","name":"_startBlock","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"LpOfPid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"contract IERC20","name":"_lpToken","type":"address"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"add","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_addLP","type":"address"}],"name":"addMultLP","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"coin","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_lastRewardBlock","type":"uint256"}],"name":"getBlockReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"getMultLPAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMultLPLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"halvingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_LP","type":"address"}],"name":"isMultLP","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"massUpdatePools","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"multLpChef","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"multLpToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"pending","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"perBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"phase","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"poolCorrespond","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"poolInfo","outputs":[{"internalType":"contract IERC20","name":"lpToken","type":"address"},{"internalType":"uint256","name":"allocPoint","type":"uint256"},{"internalType":"uint256","name":"lastRewardBlock","type":"uint256"},{"internalType":"uint256","name":"accPerShare","type":"uint256"},{"internalType":"uint256","name":"accMultLpPerShare","type":"uint256"},{"internalType":"uint256","name":"totalAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_multLpToken","type":"address"},{"internalType":"address","name":"_multLpChef","type":"address"}],"name":"replaceMultLP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"reward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"set","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_block","type":"uint256"}],"name":"setHalvingPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_multLpToken","type":"address"},{"internalType":"address","name":"_multLpChef","type":"address"}],"name":"setMultLP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"setPause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newPerBlock","type":"uint256"}],"name":"setPerBlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_sid","type":"uint256"}],"name":"setPoolCorr","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAllocPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"updatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"userInfo","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"rewardDebt","type":"uint256"},{"internalType":"uint256","name":"multLpRewardDebt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"transactionHash":"0x3e980ad8313bd12ec5f4f8c717343d030dccd21e887ed308564d03e7e0c989eb","receipt":{"to":null,"from":"0x0eEf63F2079e856476C290bd596318F8aef44a93","contractAddress":"0x3D30544A44BdE0015fe298425aa73077E754F510","transactionIndex":182,"gasUsed":"3068613","logsBloom":"0xblockHash":"0x4b8eb5dd47ce2d761192d49428441bf02e12a36c440f9b9537c53ffadccc5b8f","transactionHash":"0x3e980ad8313bd12ec5f4f8c717343d030dccd21e887ed308564d03e7e0c989eb","logs":[{"transactionIndex":182,"blockNumber":18996748,"transactionHash":"0x3e980ad8313bd12ec5f4f8c717343d030dccd21e887ed308564d03e7e0c989eb","address":"0x3D30544A44BdE0015fe298425aa73077E754F510","topics":["0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000eef63f2079e856476c290bd596318f8aef44a93"],"data":"0x","logIndex":566,"blockHash":"0x4b8eb5dd47ce2d761192d49428441bf02e12a36c440f9b9537c53ffadccc5b8f"}],"blockNumber":18996748,"cumulativeGasUsed":"28917150","status":1,"byzantium":true},"args":["0x4c351cabd66b0cb82a09f8829ed20d1c5bcd2c34",18998545],"solcInputHash":"7f1e98764d779ab71fa71a6f3e1bc1a9","metadata":"{\\"compiler\\":{\\"version\\":\\"0.6.12+commit.27d51765\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"_coin\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_startBlock\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"pid\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Deposit\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"pid\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"EmergencyWithdraw\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"previousOwner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"pid\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Withdraw\\",\\"type\\":\\"event\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"LpOfPid\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_allocPoint\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"_lpToken\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"_withUpdate\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"add\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_addLP\\",\\"type\\":\\"address\\"}],\\"name\\":\\"addMultLP\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"coin\\",\\"outputs\\":[{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_pid\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"deposit\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_pid\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"emergencyWithdraw\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_lastRewardBlock\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getBlockReward\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_pid\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getMultLPAddress\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getMultLPLength\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"halvingPeriod\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_LP\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isMultLP\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"massUpdatePools\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"multLpChef\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"multLpToken\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"owner\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"paused\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_pid\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_user\\",\\"type\\":\\"address\\"}],\\"name\\":\\"pending\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"perBlock\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"phase\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"poolCorrespond\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"poolInfo\\",\\"outputs\\":[{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"lpToken\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"allocPoint\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"lastRewardBlock\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"accPerShare\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"accMultLpPerShare\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"totalAmount\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"poolLength\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"renounceOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_multLpToken\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_multLpChef\\",\\"type\\":\\"address\\"}],\\"name\\":\\"replaceMultLP\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"reward\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_pid\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_allocPoint\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"_withUpdate\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"set\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_block\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setHalvingPeriod\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_multLpToken\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_multLpChef\\",\\"type\\":\\"address\\"}],\\"name\\":\\"setMultLP\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"setPause\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"newPerBlock\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setPerBlock\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_pid\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_sid\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setPoolCorr\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"startBlock\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"totalAllocPoint\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_pid\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"updatePool\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"userInfo\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"rewardDebt\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"multLpRewardDebt\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_pid\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdraw\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{\\"owner()\\":{\\"details\\":\\"Returns the address of the current owner.\\"},\\"renounceOwnership()\\":{\\"details\\":\\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\\"},\\"transferOwnership(address)\\":{\\"details\\":\\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\\"}},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"contracts/MineStake.sol\\":\\"MineStake\\"},\\"evmVersion\\":\\"istanbul\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\",\\"useLiteralContent\\":true},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"@openzeppelin/contracts/access/Ownable.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity >=0.6.0 <0.8.0;\\\\n\\\\nimport \\\\\\"../utils/Context.sol\\\\\\";\\\\n/**\\\\n * @dev Contract module which provides a basic access control mechanism, where\\\\n * there is an account (an owner) that can be granted exclusive access to\\\\n * specific functions.\\\\n *\\\\n * By default, the owner account will be the one that deploys the contract. This\\\\n * can later be changed with {transferOwnership}.\\\\n *\\\\n * This module is used through inheritance. It will make available the modifier\\\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\\\n * the owner.\\\\n */\\\\nabstract contract Ownable is Context {\\\\n    address private _owner;\\\\n\\\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\\\n\\\\n    /**\\\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\\\n     */\\\\n    constructor () internal {\\\\n        address msgSender = _msgSender();\\\\n        _owner = msgSender;\\\\n        emit OwnershipTransferred(address(0), msgSender);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the address of the current owner.\\\\n     */\\\\n    function owner() public view virtual returns (address) {\\\\n        return _owner;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Throws if called by any account other than the owner.\\\\n     */\\\\n    modifier onlyOwner() {\\\\n        require(owner() == _msgSender(), \\\\\\"Ownable: caller is not the owner\\\\\\");\\\\n        _;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Leaves the contract without owner. It will not be possible to call\\\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\\\n     *\\\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\\\n     * thereby removing any functionality that is only available to the owner.\\\\n     */\\\\n    function renounceOwnership() public virtual onlyOwner {\\\\n        emit OwnershipTransferred(_owner, address(0));\\\\n        _owner = address(0);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\\\n     * Can only be called by the current owner.\\\\n     */\\\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\\\n        require(newOwner != address(0), \\\\\\"Ownable: new owner is the zero address\\\\\\");\\\\n        emit OwnershipTransferred(_owner, newOwner);\\\\n        _owner = newOwner;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/Context.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity >=0.6.0 <0.8.0;\\\\n\\\\n/*\\\\n * @dev Provides information about the current execution context, including the\\\\n * sender of the transaction and its data. While these are generally available\\\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\\\n * manner, since when dealing with GSN meta-transactions the account sending and\\\\n * paying for execution may not be the actual sender (as far as an application\\\\n * is concerned).\\\\n *\\\\n * This contract is only required for intermediate, library-like contracts.\\\\n */\\\\nabstract contract Context {\\\\n    function _msgSender() internal view virtual returns (address payable) {\\\\n        return msg.sender;\\\\n    }\\\\n\\\\n    function _msgData() internal view virtual returns (bytes memory) {\\\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\\\n        return msg.data;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/EnumerableSet.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity >=0.6.0 <0.8.0;\\\\n\\\\n/**\\\\n * @dev Library for managing\\\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\\\n * types.\\\\n *\\\\n * Sets have the following properties:\\\\n *\\\\n * - Elements are added, removed, and checked for existence in constant time\\\\n * (O(1)).\\\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\\\n *\\\\n * ```\\\\n * contract Example {\\\\n *     // Add the library methods\\\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\\\n *\\\\n *     // Declare a set state variable\\\\n *     EnumerableSet.AddressSet private mySet;\\\\n * }\\\\n * ```\\\\n *\\\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\\\n * and `uint256` (`UintSet`) are supported.\\\\n */\\\\nlibrary EnumerableSet {\\\\n    // To implement this library for multiple types with as little code\\\\n    // repetition as possible, we write it in terms of a generic Set type with\\\\n    // bytes32 values.\\\\n    // The Set implementation uses private functions, and user-facing\\\\n    // implementations (such as AddressSet) are just wrappers around the\\\\n    // underlying Set.\\\\n    // This means that we can only create new EnumerableSets for types that fit\\\\n    // in bytes32.\\\\n\\\\n    struct Set {\\\\n        // Storage of set values\\\\n        bytes32[] _values;\\\\n\\\\n        // Position of the value in the `values` array, plus 1 because index 0\\\\n        // means a value is not in the set.\\\\n        mapping (bytes32 => uint256) _indexes;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Add a value to a set. O(1).\\\\n     *\\\\n     * Returns true if the value was added to the set, that is if it was not\\\\n     * already present.\\\\n     */\\\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\\\n        if (!_contains(set, value)) {\\\\n            set._values.push(value);\\\\n            // The value is stored at length-1, but we add 1 to all indexes\\\\n            // and use 0 as a sentinel value\\\\n            set._indexes[value] = set._values.length;\\\\n            return true;\\\\n        } else {\\\\n            return false;\\\\n        }\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Removes a value from a set. O(1).\\\\n     *\\\\n     * Returns true if the value was removed from the set, that is if it was\\\\n     * present.\\\\n     */\\\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\\\n        // We read and store the value\'s index to prevent multiple reads from the same storage slot\\\\n        uint256 valueIndex = set._indexes[value];\\\\n\\\\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\\\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\\\n            // the array, and then remove the last element (sometimes called as \'swap and pop\').\\\\n            // This modifies the order of the array, as noted in {at}.\\\\n\\\\n            uint256 toDeleteIndex = valueIndex - 1;\\\\n            uint256 lastIndex = set._values.length - 1;\\\\n\\\\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\\\\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an \'if\' statement.\\\\n\\\\n            bytes32 lastvalue = set._values[lastIndex];\\\\n\\\\n            // Move the last value to the index where the value to delete is\\\\n            set._values[toDeleteIndex] = lastvalue;\\\\n            // Update the index for the moved value\\\\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\\\\n\\\\n            // Delete the slot where the moved value was stored\\\\n            set._values.pop();\\\\n\\\\n            // Delete the index for the deleted slot\\\\n            delete set._indexes[value];\\\\n\\\\n            return true;\\\\n        } else {\\\\n            return false;\\\\n        }\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns true if the value is in the set. O(1).\\\\n     */\\\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\\\n        return set._indexes[value] != 0;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the number of values on the set. O(1).\\\\n     */\\\\n    function _length(Set storage set) private view returns (uint256) {\\\\n        return set._values.length;\\\\n    }\\\\n\\\\n   /**\\\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\\\n    *\\\\n    * Note that there are no guarantees on the ordering of values inside the\\\\n    * array, and it may change when more values are added or removed.\\\\n    *\\\\n    * Requirements:\\\\n    *\\\\n    * - `index` must be strictly less than {length}.\\\\n    */\\\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\\\n        require(set._values.length > index, \\\\\\"EnumerableSet: index out of bounds\\\\\\");\\\\n        return set._values[index];\\\\n    }\\\\n\\\\n    // Bytes32Set\\\\n\\\\n    struct Bytes32Set {\\\\n        Set _inner;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Add a value to a set. O(1).\\\\n     *\\\\n     * Returns true if the value was added to the set, that is if it was not\\\\n     * already present.\\\\n     */\\\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\\\n        return _add(set._inner, value);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Removes a value from a set. O(1).\\\\n     *\\\\n     * Returns true if the value was removed from the set, that is if it was\\\\n     * present.\\\\n     */\\\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\\\n        return _remove(set._inner, value);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns true if the value is in the set. O(1).\\\\n     */\\\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\\\n        return _contains(set._inner, value);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the number of values in the set. O(1).\\\\n     */\\\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\\\n        return _length(set._inner);\\\\n    }\\\\n\\\\n   /**\\\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\\\n    *\\\\n    * Note that there are no guarantees on the ordering of values inside the\\\\n    * array, and it may change when more values are added or removed.\\\\n    *\\\\n    * Requirements:\\\\n    *\\\\n    * - `index` must be strictly less than {length}.\\\\n    */\\\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\\\n        return _at(set._inner, index);\\\\n    }\\\\n\\\\n    // AddressSet\\\\n\\\\n    struct AddressSet {\\\\n        Set _inner;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Add a value to a set. O(1).\\\\n     *\\\\n     * Returns true if the value was added to the set, that is if it was not\\\\n     * already present.\\\\n     */\\\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Removes a value from a set. O(1).\\\\n     *\\\\n     * Returns true if the value was removed from the set, that is if it was\\\\n     * present.\\\\n     */\\\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns true if the value is in the set. O(1).\\\\n     */\\\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the number of values in the set. O(1).\\\\n     */\\\\n    function length(AddressSet storage set) internal view returns (uint256) {\\\\n        return _length(set._inner);\\\\n    }\\\\n\\\\n   /**\\\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\\\n    *\\\\n    * Note that there are no guarantees on the ordering of values inside the\\\\n    * array, and it may change when more values are added or removed.\\\\n    *\\\\n    * Requirements:\\\\n    *\\\\n    * - `index` must be strictly less than {length}.\\\\n    */\\\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\\\n        return address(uint160(uint256(_at(set._inner, index))));\\\\n    }\\\\n\\\\n\\\\n    // UintSet\\\\n\\\\n    struct UintSet {\\\\n        Set _inner;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Add a value to a set. O(1).\\\\n     *\\\\n     * Returns true if the value was added to the set, that is if it was not\\\\n     * already present.\\\\n     */\\\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\\\n        return _add(set._inner, bytes32(value));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Removes a value from a set. O(1).\\\\n     *\\\\n     * Returns true if the value was removed from the set, that is if it was\\\\n     * present.\\\\n     */\\\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\\\n        return _remove(set._inner, bytes32(value));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns true if the value is in the set. O(1).\\\\n     */\\\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\\\n        return _contains(set._inner, bytes32(value));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the number of values on the set. O(1).\\\\n     */\\\\n    function length(UintSet storage set) internal view returns (uint256) {\\\\n        return _length(set._inner);\\\\n    }\\\\n\\\\n   /**\\\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\\\n    *\\\\n    * Note that there are no guarantees on the ordering of values inside the\\\\n    * array, and it may change when more values are added or removed.\\\\n    *\\\\n    * Requirements:\\\\n    *\\\\n    * - `index` must be strictly less than {length}.\\\\n    */\\\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\\\n        return uint256(_at(set._inner, index));\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\\",\\"license\\":\\"MIT\\"},\\"contracts/MineStake.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\npragma solidity ^0.6.0;\\\\n\\\\nimport \\\\\\"@openzeppelin/contracts/access/Ownable.sol\\\\\\";\\\\nimport \\\\\\"@openzeppelin/contracts/utils/EnumerableSet.sol\\\\\\";\\\\nimport \\\\\\"./interfaces/IMasterChefBSC.sol\\\\\\";\\\\nimport \\\\\\"./utils/SafeERC20.sol\\\\\\";\\\\n\\\\ncontract MineStake is Ownable {\\\\n    using SafeMath for uint256;\\\\n    using SafeERC20 for IERC20;\\\\n\\\\n    using EnumerableSet for EnumerableSet.AddressSet;\\\\n    EnumerableSet.AddressSet private _multLP;\\\\n\\\\n    // Info of each user.\\\\n    struct UserInfo {\\\\n        uint256 amount;     // How many LP tokens the user has provided.\\\\n        uint256 rewardDebt; // Reward debt.\\\\n        uint256 multLpRewardDebt; //multLp Reward debt.\\\\n    }\\\\n\\\\n    // Info of each pool.\\\\n    struct PoolInfo {\\\\n        IERC20 lpToken;           // Address of LP token contract.\\\\n        uint256 allocPoint;       // How many allocation points assigned to this pool. coins to distribute per block.\\\\n        uint256 lastRewardBlock;  // Last block number that coins distribution occurs.\\\\n        uint256 accPerShare; // Accumulated coins per share, times 1e12.\\\\n        uint256 accMultLpPerShare; //Accumulated multLp per share\\\\n        uint256 totalAmount;    // Total amount of current pool deposit.\\\\n    }\\\\n\\\\n    // The coin Token!\\\\n    IERC20 public coin;\\\\n    // coin tokens created per block.\\\\n    uint256 public perBlock = 57870370370370400;\\\\n    // Info of each pool.\\\\n    PoolInfo[] public poolInfo;\\\\n    // Info of each user that stakes LP tokens.\\\\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\\\\n    // Corresponding to the pid of the multLP pool\\\\n    mapping(uint256 => uint256) public poolCorrespond;\\\\n    // pid corresponding address\\\\n    mapping(address => uint256) public LpOfPid;\\\\n    // Control mining\\\\n    bool public paused = false;\\\\n    // Total allocation points. Must be the sum of all allocation points in all pools.\\\\n    uint256 public totalAllocPoint = 0;\\\\n    // The block number when coin mining starts.\\\\n    uint256 public startBlock;\\\\n    // multLP MasterChef\\\\n    address public multLpChef;\\\\n    // multLP Token\\\\n    address public multLpToken;\\\\n    // How many blocks are halved\\\\n    uint256 public halvingPeriod = 21024000;\\\\n\\\\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\\\\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\\\\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\\\\n\\\\n    constructor(\\\\n        IERC20 _coin,\\\\n        uint256 _startBlock\\\\n    ) public {\\\\n        coin = _coin;\\\\n        startBlock = _startBlock;\\\\n    }\\\\n\\\\n    function setHalvingPeriod(uint256 _block) public onlyOwner {\\\\n        halvingPeriod = _block;\\\\n    }\\\\n\\\\n    // Set the number of coin produced by each block\\\\n    function setPerBlock(uint256 newPerBlock) public onlyOwner {\\\\n        massUpdatePools();\\\\n        perBlock = newPerBlock;\\\\n    }\\\\n\\\\n    function poolLength() public view returns (uint256) {\\\\n        return poolInfo.length;\\\\n    }\\\\n    function addMultLP(address _addLP) public onlyOwner returns (bool) {\\\\n        require(_addLP != address(0), \\\\\\"LP is the zero address\\\\\\");\\\\n        IERC20(_addLP).approve(multLpChef, uint256(- 1));\\\\n        return EnumerableSet.add(_multLP, _addLP);\\\\n    }\\\\n\\\\n    function isMultLP(address _LP) public view returns (bool) {\\\\n        return EnumerableSet.contains(_multLP, _LP);\\\\n    }\\\\n\\\\n    function getMultLPLength() public view returns (uint256) {\\\\n        return EnumerableSet.length(_multLP);\\\\n    }\\\\n\\\\n    function getMultLPAddress(uint256 _pid) public view returns (address){\\\\n        require(_pid <= getMultLPLength() - 1, \\\\\\"not find this multLP\\\\\\");\\\\n        return EnumerableSet.at(_multLP, _pid);\\\\n    }\\\\n\\\\n    function setPause() public onlyOwner {\\\\n        paused = !paused;\\\\n    }\\\\n\\\\n    function setMultLP(address _multLpToken, address _multLpChef) public onlyOwner {\\\\n        require(_multLpToken != address(0) && _multLpChef != address(0), \\\\\\"is the zero address\\\\\\");\\\\n        multLpToken = _multLpToken;\\\\n        multLpChef = _multLpChef;\\\\n    }\\\\n\\\\n    function replaceMultLP(address _multLpToken, address _multLpChef) public onlyOwner {\\\\n        require(_multLpToken != address(0) && _multLpChef != address(0), \\\\\\"is the zero address\\\\\\");\\\\n        require(paused == true, \\\\\\"No mining suspension\\\\\\");\\\\n        multLpToken = _multLpToken;\\\\n        multLpChef = _multLpChef;\\\\n        uint256 length = getMultLPLength();\\\\n        while (length > 0) {\\\\n            address dAddress = EnumerableSet.at(_multLP, 0);\\\\n            uint256 pid = LpOfPid[dAddress];\\\\n            IMasterChefBSC(multLpChef).emergencyWithdraw(poolCorrespond[pid]);\\\\n            EnumerableSet.remove(_multLP, dAddress);\\\\n            length--;\\\\n        }\\\\n    }\\\\n\\\\n    // Add a new lp to the pool. Can only be called by the owner.\\\\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\\\\n    function add(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public onlyOwner {\\\\n        require(address(_lpToken) != address(0), \\\\\\"_lpToken is the zero address\\\\\\");\\\\n        if (_withUpdate) {\\\\n            massUpdatePools();\\\\n        }\\\\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\\\\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\\\\n        poolInfo.push(PoolInfo({\\\\n        lpToken : _lpToken,\\\\n        allocPoint : _allocPoint,\\\\n        lastRewardBlock : lastRewardBlock,\\\\n        accPerShare : 0,\\\\n        accMultLpPerShare : 0,\\\\n        totalAmount : 0\\\\n        }));\\\\n        LpOfPid[address(_lpToken)] = poolLength() - 1;\\\\n    }\\\\n\\\\n    // Update the given pool\'s coin allocation point. Can only be called by the owner.\\\\n    function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\\\\n        if (_withUpdate) {\\\\n            massUpdatePools();\\\\n        }\\\\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\\\\n        poolInfo[_pid].allocPoint = _allocPoint;\\\\n    }\\\\n\\\\n    // The current pool corresponds to the pid of the multLP pool\\\\n    function setPoolCorr(uint256 _pid, uint256 _sid) public onlyOwner {\\\\n        require(_pid <= poolLength() - 1, \\\\\\"not find this pool\\\\\\");\\\\n        poolCorrespond[_pid] = _sid;\\\\n    }\\\\n\\\\n    function phase(uint256 blockNumber) public view returns (uint256) {\\\\n        if (halvingPeriod == 0) {\\\\n            return 0;\\\\n        }\\\\n        if (blockNumber > startBlock) {\\\\n            return (blockNumber.sub(startBlock).sub(1)).div(halvingPeriod);\\\\n        }\\\\n        return 0;\\\\n    }\\\\n\\\\n    function reward(uint256 blockNumber) public view returns (uint256) {\\\\n        uint256 _phase = phase(blockNumber);\\\\n        return perBlock.div(2 ** _phase);\\\\n    }\\\\n\\\\n    function getBlockReward(uint256 _lastRewardBlock) public view returns (uint256) {\\\\n        uint256 blockReward = 0;\\\\n        uint256 n = phase(_lastRewardBlock);\\\\n        uint256 m = phase(block.number);\\\\n        while (n < m) {\\\\n            n++;\\\\n            uint256 r = n.mul(halvingPeriod).add(startBlock);\\\\n            blockReward = blockReward.add((r.sub(_lastRewardBlock)).mul(reward(r)));\\\\n            _lastRewardBlock = r;\\\\n        }\\\\n        blockReward = blockReward.add((block.number.sub(_lastRewardBlock)).mul(reward(block.number)));\\\\n        return blockReward;\\\\n    }\\\\n\\\\n    // Update reward variables for all pools. Be careful of gas spending!\\\\n    function massUpdatePools() public {\\\\n        uint256 length = poolInfo.length;\\\\n        for (uint256 pid = 0; pid < length; ++pid) {\\\\n            updatePool(pid);\\\\n        }\\\\n    }\\\\n\\\\n    // Update reward variables of the given pool to be up-to-date.\\\\n    function updatePool(uint256 _pid) public {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        if (block.number <= pool.lastRewardBlock) {\\\\n            return;\\\\n        }\\\\n        uint256 lpSupply;\\\\n        if (isMultLP(address(pool.lpToken))) {\\\\n            if (pool.totalAmount == 0) {\\\\n                pool.lastRewardBlock = block.number;\\\\n                return;\\\\n            }\\\\n            lpSupply = pool.totalAmount;\\\\n        } else {\\\\n            lpSupply = pool.lpToken.balanceOf(address(this));\\\\n            if (lpSupply == 0) {\\\\n                pool.lastRewardBlock = block.number;\\\\n                return;\\\\n            }\\\\n        }\\\\n        uint256 blockReward = getBlockReward(pool.lastRewardBlock);\\\\n        if (blockReward <= 0) {\\\\n            return;\\\\n        }\\\\n        uint256 coinReward = blockReward.mul(pool.allocPoint).div(totalAllocPoint);\\\\n\\\\n        pool.accPerShare = pool.accPerShare.add(coinReward.mul(1e12).div(lpSupply));\\\\n        pool.lastRewardBlock = block.number;\\\\n    }\\\\n\\\\n    // View function to see pending coins on frontend.\\\\n    function pending(uint256 _pid, address _user) external view returns (uint256, uint256){\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        if (isMultLP(address(pool.lpToken))) {\\\\n            (uint256 amount, uint256 tokenAmount) = pendingCoinAndToken(_pid, _user);\\\\n            return (amount, tokenAmount);\\\\n        } else {\\\\n            uint256 amount = pendingCoin(_pid, _user);\\\\n            return (amount, 0);\\\\n        }\\\\n    }\\\\n\\\\n    function pendingCoinAndToken(uint256 _pid, address _user) private view returns (uint256, uint256){\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        UserInfo storage user = userInfo[_pid][_user];\\\\n        uint256 accPerShare = pool.accPerShare;\\\\n        uint256 accMultLpPerShare = pool.accMultLpPerShare;\\\\n        if (user.amount > 0) {\\\\n            uint256 TokenPending = IMasterChefBSC(multLpChef).pendingCake(poolCorrespond[_pid], address(this));\\\\n            accMultLpPerShare = accMultLpPerShare.add(TokenPending.mul(1e12).div(pool.totalAmount));\\\\n            uint256 userPending = user.amount.mul(accMultLpPerShare).div(1e12).sub(user.multLpRewardDebt);\\\\n            if (block.number > pool.lastRewardBlock) {\\\\n                uint256 blockReward = getBlockReward(pool.lastRewardBlock);\\\\n                uint256 coinReward = blockReward.mul(pool.allocPoint).div(totalAllocPoint);\\\\n                accPerShare = accPerShare.add(coinReward.mul(1e12).div(pool.totalAmount));\\\\n                return (user.amount.mul(accPerShare).div(1e12).sub(user.rewardDebt), userPending);\\\\n            }\\\\n            if (block.number == pool.lastRewardBlock) {\\\\n                return (user.amount.mul(accPerShare).div(1e12).sub(user.rewardDebt), userPending);\\\\n            }\\\\n        }\\\\n        return (0, 0);\\\\n    }\\\\n\\\\n    function pendingCoin(uint256 _pid, address _user) private view returns (uint256){\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        UserInfo storage user = userInfo[_pid][_user];\\\\n        uint256 accPerShare = pool.accPerShare;\\\\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\\\\n        if (user.amount > 0) {\\\\n            if (block.number > pool.lastRewardBlock) {\\\\n                uint256 blockReward = getBlockReward(pool.lastRewardBlock);\\\\n                uint256 coinReward = blockReward.mul(pool.allocPoint).div(totalAllocPoint);\\\\n                accPerShare = accPerShare.add(coinReward.mul(1e12).div(lpSupply));\\\\n                return user.amount.mul(accPerShare).div(1e12).sub(user.rewardDebt);\\\\n            }\\\\n            if (block.number == pool.lastRewardBlock) {\\\\n                return user.amount.mul(accPerShare).div(1e12).sub(user.rewardDebt);\\\\n            }\\\\n        }\\\\n        return 0;\\\\n    }\\\\n\\\\n    // Deposit LP tokens to BSCPool for coin allocation.\\\\n    function deposit(uint256 _pid, uint256 _amount) public notPause {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        if (isMultLP(address(pool.lpToken))) {\\\\n            depositCoinAndToken(_pid, _amount, msg.sender);\\\\n        } else {\\\\n            depositCoin(_pid, _amount, msg.sender);\\\\n        }\\\\n    }\\\\n\\\\n    function depositCoinAndToken(uint256 _pid, uint256 _amount, address _user) private {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        UserInfo storage user = userInfo[_pid][_user];\\\\n        updatePool(_pid);\\\\n        if (user.amount > 0) {\\\\n            uint256 pendingAmount = user.amount.mul(pool.accPerShare).div(1e12).sub(user.rewardDebt);\\\\n            if (pendingAmount > 0) {\\\\n                safeCoinTransfer(_user, pendingAmount);\\\\n            }\\\\n            uint256 beforeToken = IERC20(multLpToken).balanceOf(address(this));\\\\n            IMasterChefBSC(multLpChef).deposit(poolCorrespond[_pid], 0);\\\\n            uint256 afterToken = IERC20(multLpToken).balanceOf(address(this));\\\\n            pool.accMultLpPerShare = pool.accMultLpPerShare.add(afterToken.sub(beforeToken).mul(1e12).div(pool.totalAmount));\\\\n            uint256 tokenPending = user.amount.mul(pool.accMultLpPerShare).div(1e12).sub(user.multLpRewardDebt);\\\\n            if (tokenPending > 0) {\\\\n                IERC20(multLpToken).safeTransfer(_user, tokenPending);\\\\n            }\\\\n        }\\\\n        if (_amount > 0) {\\\\n            pool.lpToken.safeTransferFrom(_user, address(this), _amount);\\\\n            if (pool.totalAmount == 0) {\\\\n                IMasterChefBSC(multLpChef).deposit(poolCorrespond[_pid], _amount);\\\\n                user.amount = user.amount.add(_amount);\\\\n                pool.totalAmount = pool.totalAmount.add(_amount);\\\\n            } else {\\\\n                uint256 beforeToken = IERC20(multLpToken).balanceOf(address(this));\\\\n                IMasterChefBSC(multLpChef).deposit(poolCorrespond[_pid], _amount);\\\\n                uint256 afterToken = IERC20(multLpToken).balanceOf(address(this));\\\\n                pool.accMultLpPerShare = pool.accMultLpPerShare.add(afterToken.sub(beforeToken).mul(1e12).div(pool.totalAmount));\\\\n                user.amount = user.amount.add(_amount);\\\\n                pool.totalAmount = pool.totalAmount.add(_amount);\\\\n            }\\\\n        }\\\\n        user.rewardDebt = user.amount.mul(pool.accPerShare).div(1e12);\\\\n        user.multLpRewardDebt = user.amount.mul(pool.accMultLpPerShare).div(1e12);\\\\n        emit Deposit(_user, _pid, _amount);\\\\n    }\\\\n\\\\n    function depositCoin(uint256 _pid, uint256 _amount, address _user) private {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        UserInfo storage user = userInfo[_pid][_user];\\\\n        updatePool(_pid);\\\\n        if (user.amount > 0) {\\\\n            uint256 pendingAmount = user.amount.mul(pool.accPerShare).div(1e12).sub(user.rewardDebt);\\\\n            if (pendingAmount > 0) {\\\\n                safeCoinTransfer(_user, pendingAmount);\\\\n            }\\\\n        }\\\\n        if (_amount > 0) {\\\\n            pool.lpToken.safeTransferFrom(_user, address(this), _amount);\\\\n            user.amount = user.amount.add(_amount);\\\\n            pool.totalAmount = pool.totalAmount.add(_amount);\\\\n        }\\\\n        user.rewardDebt = user.amount.mul(pool.accPerShare).div(1e12);\\\\n        emit Deposit(_user, _pid, _amount);\\\\n    }\\\\n\\\\n    // Withdraw LP tokens from BSCPool.\\\\n    function withdraw(uint256 _pid, uint256 _amount) public notPause {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        if (isMultLP(address(pool.lpToken))) {\\\\n            withdrawCoinAndToken(_pid, _amount, msg.sender);\\\\n        } else {\\\\n            withdrawCoin(_pid, _amount, msg.sender);\\\\n        }\\\\n    }\\\\n\\\\n    function withdrawCoinAndToken(uint256 _pid, uint256 _amount, address _user) private {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        UserInfo storage user = userInfo[_pid][_user];\\\\n        require(user.amount >= _amount, \\\\\\"withdrawCoinAndToken: not good\\\\\\");\\\\n        updatePool(_pid);\\\\n        uint256 pendingAmount = user.amount.mul(pool.accPerShare).div(1e12).sub(user.rewardDebt);\\\\n        if (pendingAmount > 0) {\\\\n            safeCoinTransfer(_user, pendingAmount);\\\\n        }\\\\n        if (_amount > 0) {\\\\n            uint256 beforeToken = IERC20(multLpToken).balanceOf(address(this));\\\\n            IMasterChefBSC(multLpChef).withdraw(poolCorrespond[_pid], _amount);\\\\n            uint256 afterToken = IERC20(multLpToken).balanceOf(address(this));\\\\n            pool.accMultLpPerShare = pool.accMultLpPerShare.add(afterToken.sub(beforeToken).mul(1e12).div(pool.totalAmount));\\\\n            uint256 tokenPending = user.amount.mul(pool.accMultLpPerShare).div(1e12).sub(user.multLpRewardDebt);\\\\n            if (tokenPending > 0) {\\\\n                IERC20(multLpToken).safeTransfer(_user, tokenPending);\\\\n            }\\\\n            user.amount = user.amount.sub(_amount);\\\\n            pool.totalAmount = pool.totalAmount.sub(_amount);\\\\n            pool.lpToken.safeTransfer(_user, _amount);\\\\n        }\\\\n        user.rewardDebt = user.amount.mul(pool.accPerShare).div(1e12);\\\\n        user.multLpRewardDebt = user.amount.mul(pool.accMultLpPerShare).div(1e12);\\\\n        emit Withdraw(_user, _pid, _amount);\\\\n    }\\\\n\\\\n    function withdrawCoin(uint256 _pid, uint256 _amount, address _user) private {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        UserInfo storage user = userInfo[_pid][_user];\\\\n        require(user.amount >= _amount, \\\\\\"withdrawCoin: not good\\\\\\");\\\\n        updatePool(_pid);\\\\n        uint256 pendingAmount = user.amount.mul(pool.accPerShare).div(1e12).sub(user.rewardDebt);\\\\n        if (pendingAmount > 0) {\\\\n            safeCoinTransfer(_user, pendingAmount);\\\\n        }\\\\n        if (_amount > 0) {\\\\n            user.amount = user.amount.sub(_amount);\\\\n            pool.totalAmount = pool.totalAmount.sub(_amount);\\\\n            pool.lpToken.safeTransfer(_user, _amount);\\\\n        }\\\\n        user.rewardDebt = user.amount.mul(pool.accPerShare).div(1e12);\\\\n        emit Withdraw(_user, _pid, _amount);\\\\n    }\\\\n\\\\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\\\\n    function emergencyWithdraw(uint256 _pid) public notPause {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        if (isMultLP(address(pool.lpToken))) {\\\\n            emergencyWithdrawCoinAndToken(_pid, msg.sender);\\\\n        } else {\\\\n            emergencyWithdrawCoin(_pid, msg.sender);\\\\n        }\\\\n    }\\\\n\\\\n    function emergencyWithdrawCoinAndToken(uint256 _pid, address _user) private {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        UserInfo storage user = userInfo[_pid][_user];\\\\n        uint256 amount = user.amount;\\\\n        uint256 beforeToken = IERC20(multLpToken).balanceOf(address(this));\\\\n        IMasterChefBSC(multLpChef).withdraw(poolCorrespond[_pid], amount);\\\\n        uint256 afterToken = IERC20(multLpToken).balanceOf(address(this));\\\\n        pool.accMultLpPerShare = pool.accMultLpPerShare.add(afterToken.sub(beforeToken).mul(1e12).div(pool.totalAmount));\\\\n        user.amount = 0;\\\\n        user.rewardDebt = 0;\\\\n        pool.lpToken.safeTransfer(_user, amount);\\\\n        pool.totalAmount = pool.totalAmount.sub(amount);\\\\n        emit EmergencyWithdraw(_user, _pid, amount);\\\\n    }\\\\n\\\\n    function emergencyWithdrawCoin(uint256 _pid, address _user) private {\\\\n        PoolInfo storage pool = poolInfo[_pid];\\\\n        UserInfo storage user = userInfo[_pid][_user];\\\\n        uint256 amount = user.amount;\\\\n        user.amount = 0;\\\\n        user.rewardDebt = 0;\\\\n        pool.lpToken.safeTransfer(_user, amount);\\\\n        pool.totalAmount = pool.totalAmount.sub(amount);\\\\n        emit EmergencyWithdraw(_user, _pid, amount);\\\\n    }\\\\n\\\\n    // Safe coin transfer function, just in case if rounding error causes pool to not have enough coins.\\\\n    function safeCoinTransfer(address _to, uint256 _amount) internal {\\\\n        uint256 coinBal = coin.balanceOf(address(this));\\\\n        if (_amount > coinBal) {\\\\n            coin.transfer(_to, coinBal);\\\\n        } else {\\\\n            coin.transfer(_to, _amount);\\\\n        }\\\\n    }\\\\n\\\\n    modifier notPause() {\\\\n        require(paused == false, \\\\\\"Mining has been suspended\\\\\\");\\\\n        _;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x4056ae2f24346379359c450941586796b56254206e08522c7f3a5197075d1d16\\",\\"license\\":\\"MIT\\"},\\"contracts/interfaces/IERC20.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity >=0.6.0 <0.8.0;\\\\n\\\\n/**\\\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\\\n */\\\\ninterface IERC20 {\\\\n    function name() external view returns (string memory);\\\\n    function symbol() external view returns (string memory);\\\\n    function decimals() external view returns (uint8);\\\\n    /**\\\\n     * @dev Returns the amount of tokens in existence.\\\\n     */\\\\n    function totalSupply() external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev Returns the amount of tokens owned by `account`.\\\\n     */\\\\n    function balanceOf(address account) external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev Moves `amount` tokens from the caller\'s account to `recipient`.\\\\n     *\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\\\n\\\\n    /**\\\\n     * @dev Returns the remaining number of tokens that `spender` will be\\\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\\\n     * zero by default.\\\\n     *\\\\n     * This value changes when {approve} or {transferFrom} are called.\\\\n     */\\\\n    function allowance(address owner, address spender) external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\\\n     *\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\n     *\\\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\\\n     * that someone may use both the old and the new allowance by unfortunate\\\\n     * transaction ordering. One possible solution to mitigate this race\\\\n     * condition is to first reduce the spender\'s allowance to 0 and set the\\\\n     * desired value afterwards:\\\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\\\n     *\\\\n     * Emits an {Approval} event.\\\\n     */\\\\n    function approve(address spender, uint256 amount) external returns (bool);\\\\n\\\\n    /**\\\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\\\n     * allowance mechanism. `amount` is then deducted from the caller\'s\\\\n     * allowance.\\\\n     *\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\\\n\\\\n    /**\\\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\\\n     * another (`to`).\\\\n     *\\\\n     * Note that `value` may be zero.\\\\n     */\\\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\\\n\\\\n    /**\\\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\\\n     * a call to {approve}. `value` is the new allowance.\\\\n     */\\\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\\\n}\\\\n\\",\\"keccak256\\":\\"0x2add72e4226a16fb58fb4bbf88bc5484a96f589a4b2f4dbb3aec7c8512aebc3d\\",\\"license\\":\\"MIT\\"},\\"contracts/interfaces/IMasterChefBSC.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\npragma solidity ^0.6.0;\\\\n\\\\ninterface IMasterChefBSC {\\\\n    function pendingCake(uint256 pid, address user) external view returns (uint256);\\\\n\\\\n    function deposit(uint256 pid, uint256 amount) external;\\\\n\\\\n    function withdraw(uint256 pid, uint256 amount) external;\\\\n\\\\n    function emergencyWithdraw(uint256 pid) external;\\\\n}\\\\n\\",\\"keccak256\\":\\"0x8e046f748290d736e41b61031587b79c417e388ad411ffdcbc92cab0ea66d05c\\",\\"license\\":\\"MIT\\"},\\"contracts/utils/Address.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity >=0.6.2 <0.8.0;\\\\n\\\\n/**\\\\n * @dev Collection of functions related to the address type\\\\n */\\\\nlibrary Address {\\\\n    /**\\\\n     * @dev Returns true if `account` is a contract.\\\\n     *\\\\n     * [IMPORTANT]\\\\n     * ====\\\\n     * It is unsafe to assume that an address for which this function returns\\\\n     * false is an externally-owned account (EOA) and not a contract.\\\\n     *\\\\n     * Among others, `isContract` will return false for the following\\\\n     * types of addresses:\\\\n     *\\\\n     *  - an externally-owned account\\\\n     *  - a contract in construction\\\\n     *  - an address where a contract will be created\\\\n     *  - an address where a contract lived, but was destroyed\\\\n     * ====\\\\n     */\\\\n    function isContract(address account) internal view returns (bool) {\\\\n        // This method relies on extcodesize, which returns 0 for contracts in\\\\n        // construction, since the code is only stored at the end of the\\\\n        // constructor execution.\\\\n\\\\n        uint256 size;\\\\n        // solhint-disable-next-line no-inline-assembly\\\\n        assembly { size := extcodesize(account) }\\\\n        return size > 0;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Replacement for Solidity\'s `transfer`: sends `amount` wei to\\\\n     * `recipient`, forwarding all available gas and reverting on errors.\\\\n     *\\\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\\\n     * imposed by `transfer`, making them unable to receive funds via\\\\n     * `transfer`. {sendValue} removes this limitation.\\\\n     *\\\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\\\n     *\\\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\\\n     * taken to not create reentrancy vulnerabilities. Consider using\\\\n     * {ReentrancyGuard} or the\\\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\\\n     */\\\\n    function sendValue(address payable recipient, uint256 amount) internal {\\\\n        require(address(this).balance >= amount, \\\\\\"Address: insufficient balance\\\\\\");\\\\n\\\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\\\n        (bool success, ) = recipient.call{ value: amount }(\\\\\\"\\\\\\");\\\\n        require(success, \\\\\\"Address: unable to send value, recipient may have reverted\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Performs a Solidity function call using a low level `call`. A\\\\n     * plain`call` is an unsafe replacement for a function call: use this\\\\n     * function instead.\\\\n     *\\\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\\\n     * function (like regular Solidity function calls).\\\\n     *\\\\n     * Returns the raw returned data. To convert to the expected return value,\\\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `target` must be a contract.\\\\n     * - calling `target` with `data` must not revert.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\\\n      return functionCall(target, data, \\\\\\"Address: low-level call failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\\\n        return functionCallWithValue(target, data, 0, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\n     * but also transferring `value` wei to `target`.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - the calling contract must have an ETH balance of at least `value`.\\\\n     * - the called Solidity function must be `payable`.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\\\n        return functionCallWithValue(target, data, value, \\\\\\"Address: low-level call with value failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\\\n        require(address(this).balance >= value, \\\\\\"Address: insufficient balance for call\\\\\\");\\\\n        require(isContract(target), \\\\\\"Address: call to non-contract\\\\\\");\\\\n\\\\n        // solhint-disable-next-line avoid-low-level-calls\\\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\\\n        return _verifyCallResult(success, returndata, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\n     * but performing a static call.\\\\n     *\\\\n     * _Available since v3.3._\\\\n     */\\\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\\\n        return functionStaticCall(target, data, \\\\\\"Address: low-level static call failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\\\n     * but performing a static call.\\\\n     *\\\\n     * _Available since v3.3._\\\\n     */\\\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\\\n        require(isContract(target), \\\\\\"Address: static call to non-contract\\\\\\");\\\\n\\\\n        // solhint-disable-next-line avoid-low-level-calls\\\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\\\n        return _verifyCallResult(success, returndata, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\n     * but performing a delegate call.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\\\n        return functionDelegateCall(target, data, \\\\\\"Address: low-level delegate call failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\\\n     * but performing a delegate call.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\\\n        require(isContract(target), \\\\\\"Address: delegate call to non-contract\\\\\\");\\\\n\\\\n        // solhint-disable-next-line avoid-low-level-calls\\\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\\\n        return _verifyCallResult(success, returndata, errorMessage);\\\\n    }\\\\n\\\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\\\n        if (success) {\\\\n            return returndata;\\\\n        } else {\\\\n            // Look for revert reason and bubble it up if present\\\\n            if (returndata.length > 0) {\\\\n                // The easiest way to bubble the revert reason is using memory via assembly\\\\n\\\\n                // solhint-disable-next-line no-inline-assembly\\\\n                assembly {\\\\n                    let returndata_size := mload(returndata)\\\\n                    revert(add(32, returndata), returndata_size)\\\\n                }\\\\n            } else {\\\\n                revert(errorMessage);\\\\n            }\\\\n        }\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\\",\\"license\\":\\"MIT\\"},\\"contracts/utils/SafeERC20.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity >=0.6.0 <0.8.0;\\\\n\\\\nimport \\\\\\"../interfaces/IERC20.sol\\\\\\";\\\\nimport \\\\\\"./SafeMath.sol\\\\\\";\\\\nimport \\\\\\"./Address.sol\\\\\\";\\\\n\\\\n/**\\\\n * @title SafeERC20\\\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\\\n * contract returns false). Tokens that return no value (and instead revert or\\\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\\\n * successful.\\\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\\\n */\\\\nlibrary SafeERC20 {\\\\n    using SafeMath for uint256;\\\\n    using Address for address;\\\\n\\\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\\\n    }\\\\n\\\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Deprecated. This function has issues similar to the ones found in\\\\n     * {IERC20-approve}, and its usage is discouraged.\\\\n     *\\\\n     * Whenever possible, use {safeIncreaseAllowance} and\\\\n     * {safeDecreaseAllowance} instead.\\\\n     */\\\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\\\n        // safeApprove should only be called when setting an initial allowance,\\\\n        // or when resetting it to zero. To increase and decrease it, use\\\\n        // \'safeIncreaseAllowance\' and \'safeDecreaseAllowance\'\\\\n        // solhint-disable-next-line max-line-length\\\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\\\n            \\\\\\"SafeERC20: approve from non-zero to non-zero allowance\\\\\\"\\\\n        );\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\\\n    }\\\\n\\\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\\\n    }\\\\n\\\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\\\\"SafeERC20: decreased allowance below zero\\\\\\");\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\\\n     * @param token The token targeted by the call.\\\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\\\n     */\\\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\\\n        // We need to perform a low level call here, to bypass Solidity\'s return data size checking mechanism, since\\\\n        // we\'re implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\\\n        // the target address contains contract code and also asserts for success in the low-level call.\\\\n\\\\n        bytes memory returndata = address(token).functionCall(data, \\\\\\"SafeERC20: low-level call failed\\\\\\");\\\\n        if (returndata.length > 0) { // Return data is optional\\\\n            // solhint-disable-next-line max-line-length\\\\n            require(abi.decode(returndata, (bool)), \\\\\\"SafeERC20: ERC20 operation did not succeed\\\\\\");\\\\n        }\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xab22aabcbc5ade018c1a86a701457795c52c33f33a4b61e0a12e008dd9d14b69\\",\\"license\\":\\"MIT\\"},\\"contracts/utils/SafeMath.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity >=0.6.0 <0.8.0;\\\\n\\\\n/**\\\\n * @dev Wrappers over Solidity\'s arithmetic operations with added overflow\\\\n * checks.\\\\n *\\\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\\\n * in bugs, because programmers usually assume that an overflow raises an\\\\n * error, which is the standard behavior in high level programming languages.\\\\n * `SafeMath` restores this intuition by reverting the transaction when an\\\\n * operation overflows.\\\\n *\\\\n * Using this library instead of the unchecked operations eliminates an entire\\\\n * class of bugs, so it\'s recommended to use it always.\\\\n */\\\\nlibrary SafeMath {\\\\n    /**\\\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\\\n        uint256 c = a + b;\\\\n        if (c < a) return (false, 0);\\\\n        return (true, c);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\\\n        if (b > a) return (false, 0);\\\\n        return (true, a - b);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\\\n        // Gas optimization: this is cheaper than requiring \'a\' not being zero, but the\\\\n        // benefit is lost if \'b\' is also tested.\\\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\\\n        if (a == 0) return (true, 0);\\\\n        uint256 c = a * b;\\\\n        if (c / a != b) return (false, 0);\\\\n        return (true, c);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\\\n        if (b == 0) return (false, 0);\\\\n        return (true, a / b);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\\\n        if (b == 0) return (false, 0);\\\\n        return (true, a % b);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the addition of two unsigned integers, reverting on\\\\n     * overflow.\\\\n     *\\\\n     * Counterpart to Solidity\'s `+` operator.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - Addition cannot overflow.\\\\n     */\\\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n        uint256 c = a + b;\\\\n        require(c >= a, \\\\\\"SafeMath: addition overflow\\\\\\");\\\\n        return c;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\\\n     * overflow (when the result is negative).\\\\n     *\\\\n     * Counterpart to Solidity\'s `-` operator.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - Subtraction cannot overflow.\\\\n     */\\\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n        require(b <= a, \\\\\\"SafeMath: subtraction overflow\\\\\\");\\\\n        return a - b;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\\\n     * overflow.\\\\n     *\\\\n     * Counterpart to Solidity\'s `*` operator.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - Multiplication cannot overflow.\\\\n     */\\\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n        if (a == 0) return 0;\\\\n        uint256 c = a * b;\\\\n        require(c / a == b, \\\\\\"SafeMath: multiplication overflow\\\\\\");\\\\n        return c;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\\\n     * division by zero. The result is rounded towards zero.\\\\n     *\\\\n     * Counterpart to Solidity\'s `/` operator. Note: this function uses a\\\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - The divisor cannot be zero.\\\\n     */\\\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n        require(b > 0, \\\\\\"SafeMath: division by zero\\\\\\");\\\\n        return a / b;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\\\n     * reverting when dividing by zero.\\\\n     *\\\\n     * Counterpart to Solidity\'s `%` operator. This function uses a `revert`\\\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\\\n     * invalid opcode to revert (consuming all remaining gas).\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - The divisor cannot be zero.\\\\n     */\\\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\\\n        require(b > 0, \\\\\\"SafeMath: modulo by zero\\\\\\");\\\\n        return a % b;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\\\n     * overflow (when the result is negative).\\\\n     *\\\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\\\n     *\\\\n     * Counterpart to Solidity\'s `-` operator.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - Subtraction cannot overflow.\\\\n     */\\\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\\\n        require(b <= a, errorMessage);\\\\n        return a - b;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\\\n     * division by zero. The result is rounded towards zero.\\\\n     *\\\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\\\n     *\\\\n     * Counterpart to Solidity\'s `/` operator. Note: this function uses a\\\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - The divisor cannot be zero.\\\\n     */\\\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\\\n        require(b > 0, errorMessage);\\\\n        return a / b;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\\\n     * reverting with custom message when dividing by zero.\\\\n     *\\\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\\\n     *\\\\n     * Counterpart to Solidity\'s `%` operator. This function uses a `revert`\\\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\\\n     * invalid opcode to revert (consuming all remaining gas).\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - The divisor cannot be zero.\\\\n     */\\\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\\\n        require(b > 0, errorMessage);\\\\n        return a % b;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\\",\\"license\\":\\"MIT\\"}},\\"version\\":1}","bytecode":"0x608060405266cd98cb94f23b606004556009805460ff191690556000600a55630140cd00600e553480156200003357600080fd5b506040516200358638038062003586833981810160405260408110156200005957600080fd5b50805160209091015160006200006e620000e2565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600380546001600160a01b0319166001600160a01b039390931692909217909155600b55620000e6565b3390565b61349080620000f66000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c80637fe6f5ac11610130578063b5ec5c99116100b8578063e2bbb1581161007c578063e2bbb158146105c6578063e4c75c27146105e9578063e6ab8d481461062e578063e715e23414610636578063f2fde38b1461066457610227565b8063b5ec5c9914610574578063cb4502c414610591578063d431b1ac146105ae578063dbd8e476146105b6578063dfc7b95b146105be57610227565b806394f7f62b116100ff57806394f7f62b146104c3578063a9fb763c146104e0578063aaae43cc146104fd578063b0c7044b1461052b578063b337d32c1461055157610227565b80637fe6f5ac1461042e57806381952c24146104545780638da5cb5b1461047157806393f1a40b1461047957610227565b806351eb05a6116101b35780635c975abb116101825780635c975abb146103e3578063630b5ba1146103eb57806364482f79146103f3578063705bbc011461041e578063715018a61461042657610227565b806351eb05a6146103675780635312ea8e1461038457806356c5867d146103a15780635a3e251f146103db57610227565b806317caf6f1116101fa57806317caf6f1146102e15780631eaaa045146102e9578063431549071461031f578063441a3e701461033c57806348cd4cb11461035f57610227565b8063081e3eda1461022c57806311df999514610246578063135f8aa71461026a5780631526fe2714610287575b600080fd5b61023461068a565b60408051918252519081900360200190f35b61024e610690565b604080516001600160a01b039092168252519081900360200190f35b6102346004803603602081101561028057600080fd5b503561069f565b6102a46004803603602081101561029d57600080fd5b50356106fa565b604080516001600160a01b0390971687526020870195909552858501939093526060850191909152608084015260a0830152519081900360c00190f35b610234610747565b61031d600480360360608110156102ff57600080fd5b508035906001600160a01b036020820135169060400135151561074d565b005b61024e6004803603602081101561033557600080fd5b50356109b5565b61031d6004803603604081101561035257600080fd5b5080359060200135610a1e565b610234610acd565b61031d6004803603602081101561037d57600080fd5b5035610ad3565b61031d6004803603602081101561039a57600080fd5b5035610c43565b6103c7600480360360208110156103b757600080fd5b50356001600160a01b0316610cef565b604080519115158252519081900360200190f35b610234610e36565b6103c7610e3c565b61031d610e45565b61031d6004803603606081101561040957600080fd5b50803590602081013590604001351515610e64565b61024e610f3f565b61031d610f4e565b6103c76004803603602081101561044457600080fd5b50356001600160a01b0316610ffa565b61031d6004803603602081101561046a57600080fd5b5035611007565b61024e611076565b6104a56004803603604081101561048f57600080fd5b50803590602001356001600160a01b0316611085565b60408051938452602084019290925282820152519081900360600190f35b610234600480360360208110156104d957600080fd5b50356110b1565b610234600480360360208110156104f657600080fd5b503561114f565b61031d6004803603604081101561051357600080fd5b506001600160a01b038135811691602001351661117c565b6102346004803603602081101561054157600080fd5b50356001600160a01b0316611386565b61031d6004803603604081101561056757600080fd5b5080359060200135611398565b61031d6004803603602081101561058a57600080fd5b5035611460565b610234600480360360208110156105a757600080fd5b50356114c7565b61031d6114d9565b61023461154f565b61024e611555565b61031d600480360360408110156105dc57600080fd5b5080359060200135611564565b610615600480360360408110156105ff57600080fd5b50803590602001356001600160a01b0316611609565b6040805192835260208301919091528051918290030190f35b610234611683565b61031d6004803603604081101561064c57600080fd5b506001600160a01b0381358116916020013516611694565b61031d6004803603602081101561067a57600080fd5b50356001600160a01b031661178b565b60055490565b6003546001600160a01b031681565b6000600e54600014156106b4575060006106f5565b600b548211156106f1576106ea600e546106e460016106de600b548761188d90919063ffffffff16565b9061188d565b906118ea565b90506106f5565b5060005b919050565b6005818154811061070757fe5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b0390941695509193909286565b600a5481565b610755611951565b6001600160a01b0316610766611076565b6001600160a01b0316146107af576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b03821661080a576040805162461bcd60e51b815260206004820152601c60248201527f5f6c70546f6b656e20697320746865207a65726f206164647265737300000000604482015290519081900360640190fd5b801561081857610818610e45565b6000600b54431161082b57600b5461082d565b435b600a5490915061083d9085611955565b600a556040805160c0810182526001600160a01b038581168252602082018781529282018481526000606084018181526080850182815260a0860183815260058054600180820183559190955296517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600690950294850180546001600160a01b031916919097161790955595517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db183015591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db282015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db382015592517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4840155517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db59092019190915561099261068a565b6001600160a01b0390941660009081526008602052604090209303909255505050565b600060016109c1611683565b03821115610a0d576040805162461bcd60e51b815260206004820152601460248201527306e6f742066696e642074686973206d756c744c560641b604482015290519081900360640190fd5b610a186001836119af565b92915050565b60095460ff1615610a72576040805162461bcd60e51b8152602060048201526019602482015278135a5b9a5b99c81a185cc81899595b881cdd5cdc195b991959603a1b604482015290519081900360640190fd5b600060058381548110610a8157fe5b600091825260209091206006909102018054909150610aa8906001600160a01b0316610ffa565b15610abd57610ab88383336119bb565b610ac8565b610ac8838333611d47565b505050565b600b5481565b600060058281548110610ae257fe5b9060005260206000209060060201905080600201544311610b035750610c40565b8054600090610b1a906001600160a01b0316610ffa565b15610b40576005820154610b35575043600290910155610c40565b506005810154610bca565b8154604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610b8a57600080fd5b505afa158015610b9e573d6000803e3d6000fd5b505050506040513d6020811015610bb457600080fd5b5051905080610bca575043600290910155610c40565b6000610bd983600201546110b1565b905060008111610beb57505050610c40565b6000610c0a600a546106e4866001015485611ec790919063ffffffff16565b9050610c2d610c22846106e48464e8d4a51000611ec7565b600386015490611955565b6003850155505043600290920191909155505b50565b60095460ff1615610c97576040805162461bcd60e51b8152602060048201526019602482015278135a5b9a5b99c81a185cc81899595b881cdd5cdc195b991959603a1b604482015290519081900360640190fd5b600060058281548110610ca657fe5b600091825260209091206006909102018054909150610ccd906001600160a01b0316610ffa565b15610ce157610cdc8233611f20565b610ceb565b610ceb8233612167565b5050565b6000610cf9611951565b6001600160a01b0316610d0a611076565b6001600160a01b031614610d53576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b038216610da7576040805162461bcd60e51b81526020600482015260166024820152754c5020697320746865207a65726f206164647265737360501b604482015290519081900360640190fd5b600c546040805163095ea7b360e01b81526001600160a01b039283166004820152600019602482015290519184169163095ea7b3916044808201926020929091908290030181600087803b158015610dfe57600080fd5b505af1158015610e12573d6000803e3d6000fd5b505050506040513d6020811015610e2857600080fd5b50610a18905060018361221d565b600e5481565b60095460ff1681565b60055460005b81811015610ceb57610e5c81610ad3565b600101610e4b565b610e6c611951565b6001600160a01b0316610e7d611076565b6001600160a01b031614610ec6576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b8015610ed457610ed4610e45565b610f1182610f0b60058681548110610ee857fe5b906000526020600020906006020160010154600a5461188d90919063ffffffff16565b90611955565b600a819055508160058481548110610f2557fe5b906000526020600020906006020160010181905550505050565b600d546001600160a01b031681565b610f56611951565b6001600160a01b0316610f67611076565b6001600160a01b031614610fb0576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610a18600183612232565b61100f611951565b6001600160a01b0316611020611076565b6001600160a01b031614611069576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b611071610e45565b600455565b6000546001600160a01b031690565b600660209081526000928352604080842090915290825290208054600182015460029092015490919083565b600080806110be8461069f565b905060006110cb4361069f565b90505b8082101561112657600b54600e546001909301926000916110f491610f0b908690611ec7565b905061111c6111156111058361114f565b61110f848a61188d565b90611ec7565b8590611955565b90955092506110ce565b61114661113f6111354361114f565b61110f438961188d565b8490611955565b95945050505050565b60008061115b8361069f565b90506111758160020a6004546118ea90919063ffffffff16565b9392505050565b611184611951565b6001600160a01b0316611195611076565b6001600160a01b0316146111de576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b038216158015906111fe57506001600160a01b03811615155b611245576040805162461bcd60e51b8152602060048201526013602482015272697320746865207a65726f206164647265737360681b604482015290519081900360640190fd5b60095460ff161515600114611298576040805162461bcd60e51b815260206004820152601460248201527327379036b4b734b7339039bab9b832b739b4b7b760611b604482015290519081900360640190fd5b600d80546001600160a01b038085166001600160a01b031992831617909255600c80549284169290911691909117905560006112d2611683565b90505b8015610ac85760006112e9600160006119af565b6001600160a01b03808216600090815260086020908152604080832054600c548185526007909352818420548251632989754760e11b815260048101919091529151959650949190931692635312ea8e92602480830193919282900301818387803b15801561135757600080fd5b505af115801561136b573d6000803e3d6000fd5b5050505061137a600183612247565b505050600019016112d5565b60086020526000908152604090205481565b6113a0611951565b6001600160a01b03166113b1611076565b6001600160a01b0316146113fa576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b600161140461068a565b0382111561144e576040805162461bcd60e51b81526020600482015260126024820152711b9bdd08199a5b99081d1a1a5cc81c1bdbdb60721b604482015290519081900360640190fd5b60009182526007602052604090912055565b611468611951565b6001600160a01b0316611479611076565b6001600160a01b0316146114c2576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b600e55565b60076020526000908152604090205481565b6114e1611951565b6001600160a01b03166114f2611076565b6001600160a01b03161461153b576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6009805460ff19811660ff90911615179055565b60045481565b600c546001600160a01b031681565b60095460ff16156115b8576040805162461bcd60e51b8152602060048201526019602482015278135a5b9a5b99c81a185cc81899595b881cdd5cdc195b991959603a1b604482015290519081900360640190fd5b6000600583815481106115c757fe5b6000918252602090912060069091020180549091506115ee906001600160a01b0316610ffa565b156115fe57610ab883833361225c565b610ac88383336127d6565b60008060006005858154811061161b57fe5b600091825260209091206006909102018054909150611642906001600160a01b0316610ffa565b1561166257600080611654878761290f565b909550935061167c92505050565b600061166e8686612b40565b93506000925061167c915050565b9250929050565b600061168f6001612cd6565b905090565b61169c611951565b6001600160a01b03166116ad611076565b6001600160a01b0316146116f6576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b0382161580159061171657506001600160a01b03811615155b61175d576040805162461bcd60e51b8152602060048201526013602482015272697320746865207a65726f206164647265737360681b604482015290519081900360640190fd5b600d80546001600160a01b039384166001600160a01b031991821617909155600c8054929093169116179055565b611793611951565b6001600160a01b03166117a4611076565b6001600160a01b0316146117ed576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b0381166118325760405162461bcd60e51b81526004018080602001828103825260268152602001806133a46026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828211156118e4576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000808211611940576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161194957fe5b049392505050565b3390565b600082820183811015611175576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60006111758383612ce1565b6000600584815481106119ca57fe5b60009182526020808320878452600680835260408086206001600160a01b0389168752909352919093208054929091029092019250841115611a53576040805162461bcd60e51b815260206004820152601e60248201527f7769746864726177436f696e416e64546f6b656e3a206e6f7420676f6f640000604482015290519081900360640190fd5b611a5c85610ad3565b6000611a8a82600101546106de64e8d4a510006106e487600301548760000154611ec790919063ffffffff16565b90508015611a9c57611a9c8482612d45565b8415611cbf57600d54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611aed57600080fd5b505afa158015611b01573d6000803e3d6000fd5b505050506040513d6020811015611b1757600080fd5b5051600c54600089815260076020526040808220548151630441a3e760e41b81526004810191909152602481018b905290519394506001600160a01b039092169263441a3e7092604480820193929182900301818387803b158015611b7b57600080fd5b505af1158015611b8f573d6000803e3d6000fd5b5050600d54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b158015611be057600080fd5b505afa158015611bf4573d6000803e3d6000fd5b505050506040513d6020811015611c0a57600080fd5b50516005860154909150611c3a90611c2f906106e464e8d4a5100061110f868861188d565b600487015490611955565b6004860181905560028501548554600092611c6492916106de9164e8d4a51000916106e491611ec7565b90508015611c8357600d54611c83906001600160a01b03168883612ed5565b8454611c8f908961188d565b85556005860154611ca0908961188d565b60058701558554611cbb906001600160a01b0316888a612ed5565b5050505b60038301548254611cda9164e8d4a51000916106e491611ec7565b600183015560048301548254611cfa9164e8d4a51000916106e491611ec7565b600283015560408051868152905187916001600160a01b038716917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a3505050505050565b600060058481548110611d5657fe5b60009182526020808320878452600680835260408086206001600160a01b0389168752909352919093208054929091029092019250841115611dd8576040805162461bcd60e51b81526020600482015260166024820152751dda5d1a191c985dd0dbda5b8e881b9bdd0819dbdbd960521b604482015290519081900360640190fd5b611de185610ad3565b6000611e0f82600101546106de64e8d4a510006106e487600301548760000154611ec790919063ffffffff16565b90508015611e2157611e218482612d45565b8415611e5f578154611e33908661188d565b82556005830154611e44908661188d565b60058401558254611e5f906001600160a01b03168587612ed5565b60038301548254611e7a9164e8d4a51000916106e491611ec7565b600183015560408051868152905187916001600160a01b038716917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a3505050505050565b600082611ed657506000610a18565b82820282848281611ee357fe5b04146111755760405162461bcd60e51b81526004018080602001828103825260218152602001806133f06021913960400191505060405180910390fd5b600060058381548110611f2f57fe5b60009182526020808320868452600680835260408086206001600160a01b03808a1688529085528187208054600d5484516370a0823160e01b8152306004820152945195909802909501985096939593949316926370a0823192602480840193829003018186803b158015611fa357600080fd5b505afa158015611fb7573d6000803e3d6000fd5b505050506040513d6020811015611fcd57600080fd5b5051600c54600088815260076020526040808220548151630441a3e760e41b815260048101919091526024810187905290519394506001600160a01b039092169263441a3e7092604480820193929182900301818387803b15801561203157600080fd5b505af1158015612045573d6000803e3d6000fd5b5050600d54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b15801561209657600080fd5b505afa1580156120aa573d6000803e3d6000fd5b505050506040513d60208110156120c057600080fd5b505160058601549091506120e590611c2f906106e464e8d4a5100061110f868861188d565b600486015560008085556001850155845461210a906001600160a01b03168785612ed5565b6005850154612119908461188d565b600586015560408051848152905188916001600160a01b038916917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a350505050505050565b60006005838154811061217657fe5b60009182526020808320868452600680835260408086206001600160a01b03808a168852945285208054868255600182019690965593020180549094509192916121c291168583612ed5565b60058301546121d1908261188d565b600584015560408051828152905186916001600160a01b038716917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a35050505050565b6000611175836001600160a01b038416612f27565b6000611175836001600160a01b038416612f71565b6000611175836001600160a01b038416612f89565b60006005848154811061226b57fe5b60009182526020808320878452600680835260408086206001600160a01b038916875290935291909320910290910191506122a585610ad3565b8054156124c75760006122da82600101546106de64e8d4a510006106e487600301548760000154611ec790919063ffffffff16565b905080156122ec576122ec8482612d45565b600d54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561233757600080fd5b505afa15801561234b573d6000803e3d6000fd5b505050506040513d602081101561236157600080fd5b5051600c54600089815260076020526040808220548151631c57762b60e31b815260048101919091526024810183905290519394506001600160a01b039092169263e2bbb15892604480820193929182900301818387803b1580156123c557600080fd5b505af11580156123d9573d6000803e3d6000fd5b5050600d54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b15801561242a57600080fd5b505afa15801561243e573d6000803e3d6000fd5b505050506040513d602081101561245457600080fd5b5051600586015490915061247990611c2f906106e464e8d4a5100061110f868861188d565b60048601819055600285015485546000926124a392916106de9164e8d4a51000916106e491611ec7565b905080156124c257600d546124c2906001600160a01b03168883612ed5565b505050505b831561274f5781546124e4906001600160a01b031684308761304f565b600582015461258d57600c54600086815260076020526040808220548151631c57762b60e31b815260048101919091526024810188905290516001600160a01b039093169263e2bbb1589260448084019391929182900301818387803b15801561254d57600080fd5b505af1158015612561573d6000803e3d6000fd5b505082546125729250905085611955565b815560058201546125839085611955565b600583015561274f565b600d54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156125d857600080fd5b505afa1580156125ec573d6000803e3d6000fd5b505050506040513d602081101561260257600080fd5b5051600c54600088815260076020526040808220548151631c57762b60e31b81526004810191909152602481018a905290519394506001600160a01b039092169263e2bbb15892604480820193929182900301818387803b15801561266657600080fd5b505af115801561267a573d6000803e3d6000fd5b5050600d54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b1580156126cb57600080fd5b505afa1580156126df573d6000803e3d6000fd5b505050506040513d60208110156126f557600080fd5b505160058501549091506127259061271a906106e464e8d4a5100061110f868861188d565b600486015490611955565b600485015582546127369087611955565b835560058401546127479087611955565b600585015550505b6003820154815461276a9164e8d4a51000916106e491611ec7565b60018201556004820154815461278a9164e8d4a51000916106e491611ec7565b600282015560408051858152905186916001600160a01b038616917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a35050505050565b6000600584815481106127e557fe5b60009182526020808320878452600680835260408086206001600160a01b0389168752909352919093209102909101915061281f85610ad3565b80541561286857600061285482600101546106de64e8d4a510006106e487600301548760000154611ec790919063ffffffff16565b90508015612866576128668482612d45565b505b83156128a8578154612885906001600160a01b031684308761304f565b80546128919085611955565b815560058201546128a29085611955565b60058301555b600382015481546128c39164e8d4a51000916106e491611ec7565b600182015560408051858152905186916001600160a01b038616917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a35050505050565b60008060006005858154811061292157fe5b60009182526020808320888452600680835260408086206001600160a01b038b168752909352919093209102909101600381015460048201548354929450909115612b3057600c546000898152600760209081526040808320548151631175a1dd60e01b81526004810191909152306024820152905192936001600160a01b031692631175a1dd92604480840193919291829003018186803b1580156129c657600080fd5b505afa1580156129da573d6000803e3d6000fd5b505050506040513d60208110156129f057600080fd5b50516005860154909150612a1890612a11906106e48464e8d4a51000611ec7565b8390611955565b91506000612a4485600201546106de64e8d4a510006106e4878a60000154611ec790919063ffffffff16565b90508560020154431115612aea576000612a6187600201546110b1565b90506000612a82600a546106e48a6001015485611ec790919063ffffffff16565b9050612aae612aa789600501546106e464e8d4a5100085611ec790919063ffffffff16565b8790611955565b9550612ad887600101546106de64e8d4a510006106e48a8c60000154611ec790919063ffffffff16565b8399509950505050505050505061167c565b8560020154431415612b2d57612b1e85600101546106de64e8d4a510006106e4888a60000154611ec790919063ffffffff16565b9750955061167c945050505050565b50505b5060009788975095505050505050565b60008060058481548110612b5057fe5b60009182526020808320878452600680835260408086206001600160a01b03808b16885290855281872060039390960290930191820154825482516370a0823160e01b815230600482015292519398509596909590949316926370a0823192602480840193829003018186803b158015612bc957600080fd5b505afa158015612bdd573d6000803e3d6000fd5b505050506040513d6020811015612bf357600080fd5b5051835490915015612cc9578360020154431115612c8a576000612c1a85600201546110b1565b90506000612c3b600a546106e4886001015485611ec790919063ffffffff16565b9050612c53611115846106e48464e8d4a51000611ec7565b9350612c7d85600101546106de64e8d4a510006106e4888a60000154611ec790919063ffffffff16565b9650505050505050610a18565b8360020154431415612cc957612cbe83600101546106de64e8d4a510006106e4868860000154611ec790919063ffffffff16565b945050505050610a18565b5060009695505050505050565b6000610a18826130af565b81546000908210612d235760405162461bcd60e51b81526004018080602001828103825260228152602001806133826022913960400191505060405180910390fd5b826000018281548110612d3257fe5b9060005260206000200154905092915050565b600354604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015612d9057600080fd5b505afa158015612da4573d6000803e3d6000fd5b505050506040513d6020811015612dba57600080fd5b5051905080821115612e4e576003546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b158015612e1c57600080fd5b505af1158015612e30573d6000803e3d6000fd5b505050506040513d6020811015612e4657600080fd5b50610ac89050565b6003546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b158015612ea457600080fd5b505af1158015612eb8573d6000803e3d6000fd5b505050506040513d6020811015612ece57600080fd5b5050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610ac89084906130b3565b6000612f338383612f71565b612f6957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a18565b506000610a18565b60009081526001919091016020526040902054151590565b600081815260018301602052604081205480156130455783546000198083019190810190600090879083908110612fbc57fe5b9060005260206000200154905080876000018481548110612fd957fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061300957fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610a18565b6000915050610a18565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526130a99085906130b3565b50505050565b5490565b6060613108826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166131649092919063ffffffff16565b805190915015610ac85780806020019051602081101561312757600080fd5b5051610ac85760405162461bcd60e51b815260040180806020018281038252602a815260200180613431602a913960400191505060405180910390fd5b6060613173848460008561317b565b949350505050565b6060824710156131bc5760405162461bcd60e51b81526004018080602001828103825260268152602001806133ca6026913960400191505060405180910390fd5b6131c5856132d7565b613216576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106132555780518252601f199092019160209182019101613236565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146132b7576040519150601f19603f3d011682016040523d82523d6000602084013e6132bc565b606091505b50915091506132cc8282866132dd565b979650505050505050565b3b151590565b606083156132ec575081611175565b8251156132fc5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561334657818101518382015260200161332e565b50505050905090810190601f1680156133735780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220ce5a843dffabf9129d1ca72d107973e00e964f7498a1a6f46548b0695bd8197464736f6c634300060c0033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106102275760003560e01c80637fe6f5ac11610130578063b5ec5c99116100b8578063e2bbb1581161007c578063e2bbb158146105c6578063e4c75c27146105e9578063e6ab8d481461062e578063e715e23414610636578063f2fde38b1461066457610227565b8063b5ec5c9914610574578063cb4502c414610591578063d431b1ac146105ae578063dbd8e476146105b6578063dfc7b95b146105be57610227565b806394f7f62b116100ff57806394f7f62b146104c3578063a9fb763c146104e0578063aaae43cc146104fd578063b0c7044b1461052b578063b337d32c1461055157610227565b80637fe6f5ac1461042e57806381952c24146104545780638da5cb5b1461047157806393f1a40b1461047957610227565b806351eb05a6116101b35780635c975abb116101825780635c975abb146103e3578063630b5ba1146103eb57806364482f79146103f3578063705bbc011461041e578063715018a61461042657610227565b806351eb05a6146103675780635312ea8e1461038457806356c5867d146103a15780635a3e251f146103db57610227565b806317caf6f1116101fa57806317caf6f1146102e15780631eaaa045146102e9578063431549071461031f578063441a3e701461033c57806348cd4cb11461035f57610227565b8063081e3eda1461022c57806311df999514610246578063135f8aa71461026a5780631526fe2714610287575b600080fd5b61023461068a565b60408051918252519081900360200190f35b61024e610690565b604080516001600160a01b039092168252519081900360200190f35b6102346004803603602081101561028057600080fd5b503561069f565b6102a46004803603602081101561029d57600080fd5b50356106fa565b604080516001600160a01b0390971687526020870195909552858501939093526060850191909152608084015260a0830152519081900360c00190f35b610234610747565b61031d600480360360608110156102ff57600080fd5b508035906001600160a01b036020820135169060400135151561074d565b005b61024e6004803603602081101561033557600080fd5b50356109b5565b61031d6004803603604081101561035257600080fd5b5080359060200135610a1e565b610234610acd565b61031d6004803603602081101561037d57600080fd5b5035610ad3565b61031d6004803603602081101561039a57600080fd5b5035610c43565b6103c7600480360360208110156103b757600080fd5b50356001600160a01b0316610cef565b604080519115158252519081900360200190f35b610234610e36565b6103c7610e3c565b61031d610e45565b61031d6004803603606081101561040957600080fd5b50803590602081013590604001351515610e64565b61024e610f3f565b61031d610f4e565b6103c76004803603602081101561044457600080fd5b50356001600160a01b0316610ffa565b61031d6004803603602081101561046a57600080fd5b5035611007565b61024e611076565b6104a56004803603604081101561048f57600080fd5b50803590602001356001600160a01b0316611085565b60408051938452602084019290925282820152519081900360600190f35b610234600480360360208110156104d957600080fd5b50356110b1565b610234600480360360208110156104f657600080fd5b503561114f565b61031d6004803603604081101561051357600080fd5b506001600160a01b038135811691602001351661117c565b6102346004803603602081101561054157600080fd5b50356001600160a01b0316611386565b61031d6004803603604081101561056757600080fd5b5080359060200135611398565b61031d6004803603602081101561058a57600080fd5b5035611460565b610234600480360360208110156105a757600080fd5b50356114c7565b61031d6114d9565b61023461154f565b61024e611555565b61031d600480360360408110156105dc57600080fd5b5080359060200135611564565b610615600480360360408110156105ff57600080fd5b50803590602001356001600160a01b0316611609565b6040805192835260208301919091528051918290030190f35b610234611683565b61031d6004803603604081101561064c57600080fd5b506001600160a01b0381358116916020013516611694565b61031d6004803603602081101561067a57600080fd5b50356001600160a01b031661178b565b60055490565b6003546001600160a01b031681565b6000600e54600014156106b4575060006106f5565b600b548211156106f1576106ea600e546106e460016106de600b548761188d90919063ffffffff16565b9061188d565b906118ea565b90506106f5565b5060005b919050565b6005818154811061070757fe5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b0390941695509193909286565b600a5481565b610755611951565b6001600160a01b0316610766611076565b6001600160a01b0316146107af576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b03821661080a576040805162461bcd60e51b815260206004820152601c60248201527f5f6c70546f6b656e20697320746865207a65726f206164647265737300000000604482015290519081900360640190fd5b801561081857610818610e45565b6000600b54431161082b57600b5461082d565b435b600a5490915061083d9085611955565b600a556040805160c0810182526001600160a01b038581168252602082018781529282018481526000606084018181526080850182815260a0860183815260058054600180820183559190955296517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600690950294850180546001600160a01b031916919097161790955595517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db183015591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db282015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db382015592517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4840155517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db59092019190915561099261068a565b6001600160a01b0390941660009081526008602052604090209303909255505050565b600060016109c1611683565b03821115610a0d576040805162461bcd60e51b815260206004820152601460248201527306e6f742066696e642074686973206d756c744c560641b604482015290519081900360640190fd5b610a186001836119af565b92915050565b60095460ff1615610a72576040805162461bcd60e51b8152602060048201526019602482015278135a5b9a5b99c81a185cc81899595b881cdd5cdc195b991959603a1b604482015290519081900360640190fd5b600060058381548110610a8157fe5b600091825260209091206006909102018054909150610aa8906001600160a01b0316610ffa565b15610abd57610ab88383336119bb565b610ac8565b610ac8838333611d47565b505050565b600b5481565b600060058281548110610ae257fe5b9060005260206000209060060201905080600201544311610b035750610c40565b8054600090610b1a906001600160a01b0316610ffa565b15610b40576005820154610b35575043600290910155610c40565b506005810154610bca565b8154604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610b8a57600080fd5b505afa158015610b9e573d6000803e3d6000fd5b505050506040513d6020811015610bb457600080fd5b5051905080610bca575043600290910155610c40565b6000610bd983600201546110b1565b905060008111610beb57505050610c40565b6000610c0a600a546106e4866001015485611ec790919063ffffffff16565b9050610c2d610c22846106e48464e8d4a51000611ec7565b600386015490611955565b6003850155505043600290920191909155505b50565b60095460ff1615610c97576040805162461bcd60e51b8152602060048201526019602482015278135a5b9a5b99c81a185cc81899595b881cdd5cdc195b991959603a1b604482015290519081900360640190fd5b600060058281548110610ca657fe5b600091825260209091206006909102018054909150610ccd906001600160a01b0316610ffa565b15610ce157610cdc8233611f20565b610ceb565b610ceb8233612167565b5050565b6000610cf9611951565b6001600160a01b0316610d0a611076565b6001600160a01b031614610d53576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b038216610da7576040805162461bcd60e51b81526020600482015260166024820152754c5020697320746865207a65726f206164647265737360501b604482015290519081900360640190fd5b600c546040805163095ea7b360e01b81526001600160a01b039283166004820152600019602482015290519184169163095ea7b3916044808201926020929091908290030181600087803b158015610dfe57600080fd5b505af1158015610e12573d6000803e3d6000fd5b505050506040513d6020811015610e2857600080fd5b50610a18905060018361221d565b600e5481565b60095460ff1681565b60055460005b81811015610ceb57610e5c81610ad3565b600101610e4b565b610e6c611951565b6001600160a01b0316610e7d611076565b6001600160a01b031614610ec6576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b8015610ed457610ed4610e45565b610f1182610f0b60058681548110610ee857fe5b906000526020600020906006020160010154600a5461188d90919063ffffffff16565b90611955565b600a819055508160058481548110610f2557fe5b906000526020600020906006020160010181905550505050565b600d546001600160a01b031681565b610f56611951565b6001600160a01b0316610f67611076565b6001600160a01b031614610fb0576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610a18600183612232565b61100f611951565b6001600160a01b0316611020611076565b6001600160a01b031614611069576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b611071610e45565b600455565b6000546001600160a01b031690565b600660209081526000928352604080842090915290825290208054600182015460029092015490919083565b600080806110be8461069f565b905060006110cb4361069f565b90505b8082101561112657600b54600e546001909301926000916110f491610f0b908690611ec7565b905061111c6111156111058361114f565b61110f848a61188d565b90611ec7565b8590611955565b90955092506110ce565b61114661113f6111354361114f565b61110f438961188d565b8490611955565b95945050505050565b60008061115b8361069f565b90506111758160020a6004546118ea90919063ffffffff16565b9392505050565b611184611951565b6001600160a01b0316611195611076565b6001600160a01b0316146111de576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b038216158015906111fe57506001600160a01b03811615155b611245576040805162461bcd60e51b8152602060048201526013602482015272697320746865207a65726f206164647265737360681b604482015290519081900360640190fd5b60095460ff161515600114611298576040805162461bcd60e51b815260206004820152601460248201527327379036b4b734b7339039bab9b832b739b4b7b760611b604482015290519081900360640190fd5b600d80546001600160a01b038085166001600160a01b031992831617909255600c80549284169290911691909117905560006112d2611683565b90505b8015610ac85760006112e9600160006119af565b6001600160a01b03808216600090815260086020908152604080832054600c548185526007909352818420548251632989754760e11b815260048101919091529151959650949190931692635312ea8e92602480830193919282900301818387803b15801561135757600080fd5b505af115801561136b573d6000803e3d6000fd5b5050505061137a600183612247565b505050600019016112d5565b60086020526000908152604090205481565b6113a0611951565b6001600160a01b03166113b1611076565b6001600160a01b0316146113fa576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b600161140461068a565b0382111561144e576040805162461bcd60e51b81526020600482015260126024820152711b9bdd08199a5b99081d1a1a5cc81c1bdbdb60721b604482015290519081900360640190fd5b60009182526007602052604090912055565b611468611951565b6001600160a01b0316611479611076565b6001600160a01b0316146114c2576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b600e55565b60076020526000908152604090205481565b6114e1611951565b6001600160a01b03166114f2611076565b6001600160a01b03161461153b576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6009805460ff19811660ff90911615179055565b60045481565b600c546001600160a01b031681565b60095460ff16156115b8576040805162461bcd60e51b8152602060048201526019602482015278135a5b9a5b99c81a185cc81899595b881cdd5cdc195b991959603a1b604482015290519081900360640190fd5b6000600583815481106115c757fe5b6000918252602090912060069091020180549091506115ee906001600160a01b0316610ffa565b156115fe57610ab883833361225c565b610ac88383336127d6565b60008060006005858154811061161b57fe5b600091825260209091206006909102018054909150611642906001600160a01b0316610ffa565b1561166257600080611654878761290f565b909550935061167c92505050565b600061166e8686612b40565b93506000925061167c915050565b9250929050565b600061168f6001612cd6565b905090565b61169c611951565b6001600160a01b03166116ad611076565b6001600160a01b0316146116f6576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b0382161580159061171657506001600160a01b03811615155b61175d576040805162461bcd60e51b8152602060048201526013602482015272697320746865207a65726f206164647265737360681b604482015290519081900360640190fd5b600d80546001600160a01b039384166001600160a01b031991821617909155600c8054929093169116179055565b611793611951565b6001600160a01b03166117a4611076565b6001600160a01b0316146117ed576040805162461bcd60e51b81526020600482018190526024820152600080516020613411833981519152604482015290519081900360640190fd5b6001600160a01b0381166118325760405162461bcd60e51b81526004018080602001828103825260268152602001806133a46026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828211156118e4576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000808211611940576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161194957fe5b049392505050565b3390565b600082820183811015611175576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60006111758383612ce1565b6000600584815481106119ca57fe5b60009182526020808320878452600680835260408086206001600160a01b0389168752909352919093208054929091029092019250841115611a53576040805162461bcd60e51b815260206004820152601e60248201527f7769746864726177436f696e416e64546f6b656e3a206e6f7420676f6f640000604482015290519081900360640190fd5b611a5c85610ad3565b6000611a8a82600101546106de64e8d4a510006106e487600301548760000154611ec790919063ffffffff16565b90508015611a9c57611a9c8482612d45565b8415611cbf57600d54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611aed57600080fd5b505afa158015611b01573d6000803e3d6000fd5b505050506040513d6020811015611b1757600080fd5b5051600c54600089815260076020526040808220548151630441a3e760e41b81526004810191909152602481018b905290519394506001600160a01b039092169263441a3e7092604480820193929182900301818387803b158015611b7b57600080fd5b505af1158015611b8f573d6000803e3d6000fd5b5050600d54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b158015611be057600080fd5b505afa158015611bf4573d6000803e3d6000fd5b505050506040513d6020811015611c0a57600080fd5b50516005860154909150611c3a90611c2f906106e464e8d4a5100061110f868861188d565b600487015490611955565b6004860181905560028501548554600092611c6492916106de9164e8d4a51000916106e491611ec7565b90508015611c8357600d54611c83906001600160a01b03168883612ed5565b8454611c8f908961188d565b85556005860154611ca0908961188d565b60058701558554611cbb906001600160a01b0316888a612ed5565b5050505b60038301548254611cda9164e8d4a51000916106e491611ec7565b600183015560048301548254611cfa9164e8d4a51000916106e491611ec7565b600283015560408051868152905187916001600160a01b038716917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a3505050505050565b600060058481548110611d5657fe5b60009182526020808320878452600680835260408086206001600160a01b0389168752909352919093208054929091029092019250841115611dd8576040805162461bcd60e51b81526020600482015260166024820152751dda5d1a191c985dd0dbda5b8e881b9bdd0819dbdbd960521b604482015290519081900360640190fd5b611de185610ad3565b6000611e0f82600101546106de64e8d4a510006106e487600301548760000154611ec790919063ffffffff16565b90508015611e2157611e218482612d45565b8415611e5f578154611e33908661188d565b82556005830154611e44908661188d565b60058401558254611e5f906001600160a01b03168587612ed5565b60038301548254611e7a9164e8d4a51000916106e491611ec7565b600183015560408051868152905187916001600160a01b038716917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a3505050505050565b600082611ed657506000610a18565b82820282848281611ee357fe5b04146111755760405162461bcd60e51b81526004018080602001828103825260218152602001806133f06021913960400191505060405180910390fd5b600060058381548110611f2f57fe5b60009182526020808320868452600680835260408086206001600160a01b03808a1688529085528187208054600d5484516370a0823160e01b8152306004820152945195909802909501985096939593949316926370a0823192602480840193829003018186803b158015611fa357600080fd5b505afa158015611fb7573d6000803e3d6000fd5b505050506040513d6020811015611fcd57600080fd5b5051600c54600088815260076020526040808220548151630441a3e760e41b815260048101919091526024810187905290519394506001600160a01b039092169263441a3e7092604480820193929182900301818387803b15801561203157600080fd5b505af1158015612045573d6000803e3d6000fd5b5050600d54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b15801561209657600080fd5b505afa1580156120aa573d6000803e3d6000fd5b505050506040513d60208110156120c057600080fd5b505160058601549091506120e590611c2f906106e464e8d4a5100061110f868861188d565b600486015560008085556001850155845461210a906001600160a01b03168785612ed5565b6005850154612119908461188d565b600586015560408051848152905188916001600160a01b038916917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a350505050505050565b60006005838154811061217657fe5b60009182526020808320868452600680835260408086206001600160a01b03808a168852945285208054868255600182019690965593020180549094509192916121c291168583612ed5565b60058301546121d1908261188d565b600584015560408051828152905186916001600160a01b038716917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a35050505050565b6000611175836001600160a01b038416612f27565b6000611175836001600160a01b038416612f71565b6000611175836001600160a01b038416612f89565b60006005848154811061226b57fe5b60009182526020808320878452600680835260408086206001600160a01b038916875290935291909320910290910191506122a585610ad3565b8054156124c75760006122da82600101546106de64e8d4a510006106e487600301548760000154611ec790919063ffffffff16565b905080156122ec576122ec8482612d45565b600d54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561233757600080fd5b505afa15801561234b573d6000803e3d6000fd5b505050506040513d602081101561236157600080fd5b5051600c54600089815260076020526040808220548151631c57762b60e31b815260048101919091526024810183905290519394506001600160a01b039092169263e2bbb15892604480820193929182900301818387803b1580156123c557600080fd5b505af11580156123d9573d6000803e3d6000fd5b5050600d54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b15801561242a57600080fd5b505afa15801561243e573d6000803e3d6000fd5b505050506040513d602081101561245457600080fd5b5051600586015490915061247990611c2f906106e464e8d4a5100061110f868861188d565b60048601819055600285015485546000926124a392916106de9164e8d4a51000916106e491611ec7565b905080156124c257600d546124c2906001600160a01b03168883612ed5565b505050505b831561274f5781546124e4906001600160a01b031684308761304f565b600582015461258d57600c54600086815260076020526040808220548151631c57762b60e31b815260048101919091526024810188905290516001600160a01b039093169263e2bbb1589260448084019391929182900301818387803b15801561254d57600080fd5b505af1158015612561573d6000803e3d6000fd5b505082546125729250905085611955565b815560058201546125839085611955565b600583015561274f565b600d54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156125d857600080fd5b505afa1580156125ec573d6000803e3d6000fd5b505050506040513d602081101561260257600080fd5b5051600c54600088815260076020526040808220548151631c57762b60e31b81526004810191909152602481018a905290519394506001600160a01b039092169263e2bbb15892604480820193929182900301818387803b15801561266657600080fd5b505af115801561267a573d6000803e3d6000fd5b5050600d54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b1580156126cb57600080fd5b505afa1580156126df573d6000803e3d6000fd5b505050506040513d60208110156126f557600080fd5b505160058501549091506127259061271a906106e464e8d4a5100061110f868861188d565b600486015490611955565b600485015582546127369087611955565b835560058401546127479087611955565b600585015550505b6003820154815461276a9164e8d4a51000916106e491611ec7565b60018201556004820154815461278a9164e8d4a51000916106e491611ec7565b600282015560408051858152905186916001600160a01b038616917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a35050505050565b6000600584815481106127e557fe5b60009182526020808320878452600680835260408086206001600160a01b0389168752909352919093209102909101915061281f85610ad3565b80541561286857600061285482600101546106de64e8d4a510006106e487600301548760000154611ec790919063ffffffff16565b90508015612866576128668482612d45565b505b83156128a8578154612885906001600160a01b031684308761304f565b80546128919085611955565b815560058201546128a29085611955565b60058301555b600382015481546128c39164e8d4a51000916106e491611ec7565b600182015560408051858152905186916001600160a01b038616917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a35050505050565b60008060006005858154811061292157fe5b60009182526020808320888452600680835260408086206001600160a01b038b168752909352919093209102909101600381015460048201548354929450909115612b3057600c546000898152600760209081526040808320548151631175a1dd60e01b81526004810191909152306024820152905192936001600160a01b031692631175a1dd92604480840193919291829003018186803b1580156129c657600080fd5b505afa1580156129da573d6000803e3d6000fd5b505050506040513d60208110156129f057600080fd5b50516005860154909150612a1890612a11906106e48464e8d4a51000611ec7565b8390611955565b91506000612a4485600201546106de64e8d4a510006106e4878a60000154611ec790919063ffffffff16565b90508560020154431115612aea576000612a6187600201546110b1565b90506000612a82600a546106e48a6001015485611ec790919063ffffffff16565b9050612aae612aa789600501546106e464e8d4a5100085611ec790919063ffffffff16565b8790611955565b9550612ad887600101546106de64e8d4a510006106e48a8c60000154611ec790919063ffffffff16565b8399509950505050505050505061167c565b8560020154431415612b2d57612b1e85600101546106de64e8d4a510006106e4888a60000154611ec790919063ffffffff16565b9750955061167c945050505050565b50505b5060009788975095505050505050565b60008060058481548110612b5057fe5b60009182526020808320878452600680835260408086206001600160a01b03808b16885290855281872060039390960290930191820154825482516370a0823160e01b815230600482015292519398509596909590949316926370a0823192602480840193829003018186803b158015612bc957600080fd5b505afa158015612bdd573d6000803e3d6000fd5b505050506040513d6020811015612bf357600080fd5b5051835490915015612cc9578360020154431115612c8a576000612c1a85600201546110b1565b90506000612c3b600a546106e4886001015485611ec790919063ffffffff16565b9050612c53611115846106e48464e8d4a51000611ec7565b9350612c7d85600101546106de64e8d4a510006106e4888a60000154611ec790919063ffffffff16565b9650505050505050610a18565b8360020154431415612cc957612cbe83600101546106de64e8d4a510006106e4868860000154611ec790919063ffffffff16565b945050505050610a18565b5060009695505050505050565b6000610a18826130af565b81546000908210612d235760405162461bcd60e51b81526004018080602001828103825260228152602001806133826022913960400191505060405180910390fd5b826000018281548110612d3257fe5b9060005260206000200154905092915050565b600354604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015612d9057600080fd5b505afa158015612da4573d6000803e3d6000fd5b505050506040513d6020811015612dba57600080fd5b5051905080821115612e4e576003546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b158015612e1c57600080fd5b505af1158015612e30573d6000803e3d6000fd5b505050506040513d6020811015612e4657600080fd5b50610ac89050565b6003546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b158015612ea457600080fd5b505af1158015612eb8573d6000803e3d6000fd5b505050506040513d6020811015612ece57600080fd5b5050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610ac89084906130b3565b6000612f338383612f71565b612f6957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a18565b506000610a18565b60009081526001919091016020526040902054151590565b600081815260018301602052604081205480156130455783546000198083019190810190600090879083908110612fbc57fe5b9060005260206000200154905080876000018481548110612fd957fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061300957fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610a18565b6000915050610a18565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526130a99085906130b3565b50505050565b5490565b6060613108826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166131649092919063ffffffff16565b805190915015610ac85780806020019051602081101561312757600080fd5b5051610ac85760405162461bcd60e51b815260040180806020018281038252602a815260200180613431602a913960400191505060405180910390fd5b6060613173848460008561317b565b949350505050565b6060824710156131bc5760405162461bcd60e51b81526004018080602001828103825260268152602001806133ca6026913960400191505060405180910390fd5b6131c5856132d7565b613216576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106132555780518252601f199092019160209182019101613236565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146132b7576040519150601f19603f3d011682016040523d82523d6000602084013e6132bc565b606091505b50915091506132cc8282866132dd565b979650505050505050565b3b151590565b606083156132ec575081611175565b8251156132fc5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561334657818101518382015260200161332e565b50505050905090810190601f1680156133735780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220ce5a843dffabf9129d1ca72d107973e00e964f7498a1a6f46548b0695bd8197464736f6c634300060c0033","devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":7,"contract":"contracts/MineStake.sol:MineStake","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":643,"contract":"contracts/MineStake.sol:MineStake","label":"_multLP","offset":0,"slot":"1","type":"t_struct(AddressSet)408_storage"},{"astId":665,"contract":"contracts/MineStake.sol:MineStake","label":"coin","offset":0,"slot":"3","type":"t_contract(IERC20)2949"},{"astId":668,"contract":"contracts/MineStake.sol:MineStake","label":"perBlock","offset":0,"slot":"4","type":"t_uint256"},{"astId":671,"contract":"contracts/MineStake.sol:MineStake","label":"poolInfo","offset":0,"slot":"5","type":"t_array(t_struct(PoolInfo)663_storage)dyn_storage"},{"astId":677,"contract":"contracts/MineStake.sol:MineStake","label":"userInfo","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)650_storage))"},{"astId":681,"contract":"contracts/MineStake.sol:MineStake","label":"poolCorrespond","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_uint256)"},{"astId":685,"contract":"contracts/MineStake.sol:MineStake","label":"LpOfPid","offset":0,"slot":"8","type":"t_mapping(t_address,t_uint256)"},{"astId":688,"contract":"contracts/MineStake.sol:MineStake","label":"paused","offset":0,"slot":"9","type":"t_bool"},{"astId":691,"contract":"contracts/MineStake.sol:MineStake","label":"totalAllocPoint","offset":0,"slot":"10","type":"t_uint256"},{"astId":693,"contract":"contracts/MineStake.sol:MineStake","label":"startBlock","offset":0,"slot":"11","type":"t_uint256"},{"astId":695,"contract":"contracts/MineStake.sol:MineStake","label":"multLpChef","offset":0,"slot":"12","type":"t_address"},{"astId":697,"contract":"contracts/MineStake.sol:MineStake","label":"multLpToken","offset":0,"slot":"13","type":"t_address"},{"astId":700,"contract":"contracts/MineStake.sol:MineStake","label":"halvingPeriod","offset":0,"slot":"14","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_array(t_struct(PoolInfo)663_storage)dyn_storage":{"base":"t_struct(PoolInfo)663_storage","encoding":"dynamic_array","label":"struct MineStake.PoolInfo[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(IERC20)2949":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_address,t_struct(UserInfo)650_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct MineStake.UserInfo)","numberOfBytes":"32","value":"t_struct(UserInfo)650_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)650_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => struct MineStake.UserInfo))","numberOfBytes":"32","value":"t_mapping(t_address,t_struct(UserInfo)650_storage)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(AddressSet)408_storage":{"encoding":"inplace","label":"struct EnumerableSet.AddressSet","members":[{"astId":407,"contract":"contracts/MineStake.sol:MineStake","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)143_storage"}],"numberOfBytes":"64"},"t_struct(PoolInfo)663_storage":{"encoding":"inplace","label":"struct MineStake.PoolInfo","members":[{"astId":652,"contract":"contracts/MineStake.sol:MineStake","label":"lpToken","offset":0,"slot":"0","type":"t_contract(IERC20)2949"},{"astId":654,"contract":"contracts/MineStake.sol:MineStake","label":"allocPoint","offset":0,"slot":"1","type":"t_uint256"},{"astId":656,"contract":"contracts/MineStake.sol:MineStake","label":"lastRewardBlock","offset":0,"slot":"2","type":"t_uint256"},{"astId":658,"contract":"contracts/MineStake.sol:MineStake","label":"accPerShare","offset":0,"slot":"3","type":"t_uint256"},{"astId":660,"contract":"contracts/MineStake.sol:MineStake","label":"accMultLpPerShare","offset":0,"slot":"4","type":"t_uint256"},{"astId":662,"contract":"contracts/MineStake.sol:MineStake","label":"totalAmount","offset":0,"slot":"5","type":"t_uint256"}],"numberOfBytes":"192"},"t_struct(Set)143_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":138,"contract":"contracts/MineStake.sol:MineStake","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":142,"contract":"contracts/MineStake.sol:MineStake","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_struct(UserInfo)650_storage":{"encoding":"inplace","label":"struct MineStake.UserInfo","members":[{"astId":645,"contract":"contracts/MineStake.sol:MineStake","label":"amount","offset":0,"slot":"0","type":"t_uint256"},{"astId":647,"contract":"contracts/MineStake.sol:MineStake","label":"rewardDebt","offset":0,"slot":"1","type":"t_uint256"},{"astId":649,"contract":"contracts/MineStake.sol:MineStake","label":"multLpRewardDebt","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}')},"71be":function(e,t,n){},"7b3b":function(e){e.exports=JSON.parse('{"v":"5.6.9","fr":30,"ip":0,"op":120,"w":1920,"h":500,"nm":"首页动画1","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"“图层 2”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[45.742,138.062,0],"to":[0,-1.76,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":61,"s":[45.742,127.5,0],"to":[0,0,0],"ti":[0,-1.76,0]},{"t":120,"s":[45.742,138.062,0]}],"ix":2},"a":{"a":0,"k":[16,16,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":61,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.038,0],[0,-3.038],[3.038,0],[0,3.038]],"o":[[3.038,0],[0,3.038],[-3.038,0],[0,-3.038]],"v":[[0,-5.5],[5.5,0],[0,5.5],[-5.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.284,0],[0,-8.284],[8.284,0],[0,8.284]],"o":[[8.284,0],[0,8.284],[-8.284,0],[0,-8.284]],"v":[[0,-15],[15,0],[0,15],[-15,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"“图层 3”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[128.742,397.25,0],"to":[0,2.542,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":61,"s":[128.742,412.5,0],"to":[0,0,0],"ti":[0,2.542,0]},{"t":120,"s":[128.742,397.25,0]}],"ix":2},"a":{"a":0,"k":[16,16,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":61,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.038,0],[0,-3.038],[3.038,0],[0,3.038]],"o":[[3.038,0],[0,3.038],[-3.038,0],[0,-3.038]],"v":[[0,-5.5],[5.5,0],[0,5.5],[-5.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.284,0],[0,-8.284],[8.284,0],[0,8.284]],"o":[[8.284,0],[0,8.284],[-8.284,0],[0,-8.284]],"v":[[0,-15],[15,0],[0,15],[-15,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"“图层 4”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[450.742,102.5,0],"to":[0,-3,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":61,"s":[450.742,84.5,0],"to":[0,0,0],"ti":[0,-3,0]},{"t":120,"s":[450.742,102.5,0]}],"ix":2},"a":{"a":0,"k":[16,16,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":61,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.038,0],[0,-3.038],[3.038,0],[0,3.038]],"o":[[3.038,0],[0,3.038],[-3.038,0],[0,-3.038]],"v":[[0,-5.5],[5.5,0],[0,5.5],[-5.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.284,0],[0,-8.284],[8.284,0],[0,8.284]],"o":[[8.284,0],[0,8.284],[-8.284,0],[0,-8.284]],"v":[[0,-15],[15,0],[0,15],[-15,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"“图层 5”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[507.742,301.625,0],"to":[0,0.812,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":61,"s":[507.742,306.5,0],"to":[0,0,0],"ti":[0,0.812,0]},{"t":120,"s":[507.742,301.625,0]}],"ix":2},"a":{"a":0,"k":[16,16,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":61,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.038,0],[0,-3.038],[3.038,0],[0,3.038]],"o":[[3.038,0],[0,3.038],[-3.038,0],[0,-3.038]],"v":[[0,-5.5],[5.5,0],[0,5.5],[-5.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.284,0],[0,-8.284],[8.284,0],[0,8.284]],"o":[[8.284,0],[0,8.284],[-8.284,0],[0,-8.284]],"v":[[0,-15],[15,0],[0,15],[-15,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"“图层 6”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[1219.742,391.75,0],"to":[0,2.292,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":61,"s":[1219.742,405.5,0],"to":[0,0,0],"ti":[0,2.292,0]},{"t":120,"s":[1219.742,391.75,0]}],"ix":2},"a":{"a":0,"k":[16,16,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":61,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.038,0],[0,-3.038],[3.038,0],[0,3.038]],"o":[[3.038,0],[0,3.038],[-3.038,0],[0,-3.038]],"v":[[0,-5.5],[5.5,0],[0,5.5],[-5.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.284,0],[0,-8.284],[8.284,0],[0,8.284]],"o":[[8.284,0],[0,8.284],[-8.284,0],[0,-8.284]],"v":[[0,-15],[15,0],[0,15],[-15,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"“图层 7”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[1000.867,184,0],"to":[-0.188,-1.083,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":61,"s":[999.742,177.5,0],"to":[0,0,0],"ti":[-0.188,-1.083,0]},{"t":120,"s":[1000.867,184,0]}],"ix":2},"a":{"a":0,"k":[16,16,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":61,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.038,0],[0,-3.038],[3.038,0],[0,3.038]],"o":[[3.038,0],[0,3.038],[-3.038,0],[0,-3.038]],"v":[[0,-5.5],[5.5,0],[0,5.5],[-5.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.284,0],[0,-8.284],[8.284,0],[0,8.284]],"o":[[8.284,0],[0,8.284],[-8.284,0],[0,-8.284]],"v":[[0,-15],[15,0],[0,15],[-15,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"“图层 8”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[1380.742,215.25,0],"to":[-0.167,-0.458,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":61,"s":[1379.742,212.5,0],"to":[0,0,0],"ti":[-0.167,-0.458,0]},{"t":120,"s":[1380.742,215.25,0]}],"ix":2},"a":{"a":0,"k":[16,16,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":61,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.038,0],[0,-3.038],[3.038,0],[0,3.038]],"o":[[3.038,0],[0,3.038],[-3.038,0],[0,-3.038]],"v":[[0,-5.5],[5.5,0],[0,5.5],[-5.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.284,0],[0,-8.284],[8.284,0],[0,8.284]],"o":[[8.284,0],[0,8.284],[-8.284,0],[0,-8.284]],"v":[[0,-15],[15,0],[0,15],[-15,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"“图层 9”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[1590.742,394.25,0],"to":[0,2.708,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":61,"s":[1590.742,410.5,0],"to":[0,0,0],"ti":[0,2.708,0]},{"t":120,"s":[1590.742,394.25,0]}],"ix":2},"a":{"a":0,"k":[21,21,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":61,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-4.017,0],[0,-4.017],[4.017,0],[0,4.017]],"o":[[4.017,0],[0,4.017],[-4.017,0],[0,-4.017]],"v":[[0,-7.274],[7.274,0],[0,7.274],[-7.274,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[20.999,21],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-11.046,0],[0,-11.046],[11.046,0],[0,11.046]],"o":[[11.046,0],[0,11.046],[-11.046,0],[0,-11.046]],"v":[[0,-20],[20,0],[0,20],[-20,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[21,21],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"“图层 10”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[1737.742,345,0],"to":[0,1.75,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":61,"s":[1737.742,355.5,0],"to":[0,0,0],"ti":[0,1.75,0]},{"t":120,"s":[1737.742,345,0]}],"ix":2},"a":{"a":0,"k":[16,16,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":61,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.038,0],[0,-3.038],[3.038,0],[0,3.038]],"o":[[3.038,0],[0,3.038],[-3.038,0],[0,-3.038]],"v":[[0,-5.5],[5.5,0],[0,5.5],[-5.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.284,0],[0,-8.284],[8.284,0],[0,8.284]],"o":[[8.284,0],[0,8.284],[-8.284,0],[0,-8.284]],"v":[[0,-15],[15,0],[0,15],[-15,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"“图层 11”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[1865.742,101.5,0],"to":[0,-2.5,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":61,"s":[1865.742,86.5,0],"to":[0,0,0],"ti":[0,-2.5,0]},{"t":120,"s":[1865.742,101.5,0]}],"ix":2},"a":{"a":0,"k":[16,16,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":61,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.038,0],[0,-3.038],[3.038,0],[0,3.038]],"o":[[3.038,0],[0,3.038],[-3.038,0],[0,-3.038]],"v":[[0,-5.5],[5.5,0],[0,5.5],[-5.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-8.284,0],[0,-8.284],[8.284,0],[0,8.284]],"o":[[8.284,0],[0,8.284],[-8.284,0],[0,-8.284]],"v":[[0,-15],[15,0],[0,15],[-15,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[16,16],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"“图层 12”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[1633.743,133.75,0],"to":[0,-2.042,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":61,"s":[1633.743,121.5,0],"to":[0,0,0],"ti":[0,-2.042,0]},{"t":120,"s":[1633.743,133.75,0]}],"ix":2},"a":{"a":0,"k":[22,22,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":61,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-4.142,0],[0,-4.142],[4.142,0],[0,4.142]],"o":[[4.142,0],[0,4.142],[-4.142,0],[0,-4.142]],"v":[[0,-7.5],[7.5,0],[0,7.5],[-7.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[22,22],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-11.598,0],[0,-11.598],[11.598,0],[0,11.598]],"o":[[11.598,0],[0,11.598],[-11.598,0],[0,-11.598]],"v":[[0,-21],[21,0],[0,21],[-21,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[22,22],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"“图层 13”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[877.743,332.5,0],"to":[0,1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":61,"s":[877.743,342.5,0],"to":[0,0,0],"ti":[0,1.667,0]},{"t":120,"s":[877.743,332.5,0]}],"ix":2},"a":{"a":0,"k":[22,22,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":61,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-4.142,0],[0,-4.142],[4.142,0],[0,4.142]],"o":[[4.142,0],[0,4.142],[-4.142,0],[0,-4.142]],"v":[[0,-7.5],[7.5,0],[0,7.5],[-7.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[22,22],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-11.598,0],[0,-11.598],[11.598,0],[0,11.598]],"o":[[11.598,0],[0,11.598],[-11.598,0],[0,-11.598]],"v":[[0,-21],[21,0],[0,21],[-21,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[22,22],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"“图层 14”轮廓","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[293.743,187.75,0],"to":[0,-1.042,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":61,"s":[293.743,181.5,0],"to":[0,0,0],"ti":[0,-1.042,0]},{"t":120,"s":[293.743,187.75,0]}],"ix":2},"a":{"a":0,"k":[22,22,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[80,80,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":61,"s":[100,100,100]},{"t":120,"s":[80,80,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-4.142,0],[0,-4.142],[4.142,0],[0,4.142]],"o":[[4.142,0],[0,4.142],[-4.142,0],[0,-4.142]],"v":[[0,-7.5],[7.5,0],[0,7.5],[-7.5,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[22,22],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-11.598,0],[0,-11.598],[11.598,0],[0,11.598]],"o":[[11.598,0],[0,11.598],[-11.598,0],[0,-11.598]],"v":[[0,-21],[21,0],[0,21],[-21,0]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.215686289469,0.447058853449,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"描边 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[22,22],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0},{"ddd":0,"ind":14,"ty":4,"nm":"“图层 15”轮廓","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[20]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":61,"s":[100]},{"t":120,"s":[20]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[960,248.783,0],"ix":2},"a":{"a":0,"k":[960.25,164.572,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[100,90.872,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":61,"s":[100,100,100]},{"t":120,"s":[100,90.872,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[905.118,-162.559],[675.615,-127.823],[674.573,-127.452],[674.553,-127.498],[673.958,-127.233],[422.4,-37.657],[421.672,-38.348],[421.284,-38.715],[419.888,-37.04],[41.208,-71.809],[40.931,-71.835],[-82.885,92.747],[-83.372,92.872],[-83.62,92.848],[-508.68,-162.64],[-509.067,-164.129],[-510.036,-163.877],[-509.905,-163.377],[-510.162,-163.531],[-665.297,-67.883],[-666.204,-68.417],[-666.272,-68.458],[-913.35,-122.651],[-913.614,-122.71],[-960,-77.188],[-960,-76.973],[-959.407,-76.368],[-913.3,-121.617],[-666.642,-67.515],[-666.259,-67.289],[-666.362,-67.226],[-959.956,60.76],[-959.557,61.676],[-666.521,-66.071],[-831.662,163.166],[-832.496,164.322],[-452.538,58.358],[-83.943,93.822],[-83.295,94.21],[-82.909,94.443],[-82.295,93.627],[418.457,-35.32],[258.88,156.321],[259.648,156.962],[420.113,-35.746],[421.115,-36.005],[423.834,-34.916],[631.514,162.306],[631.741,162.522],[779.709,107.129],[779.357,106.193],[778.763,106.415],[778.45,105.713],[905.792,-161.65],[905.834,-161.656],[960,-109.002],[960,-110.397],[906.262,-162.636],[906.859,-163.892],[905.958,-164.321]],"c":true},"ix":2},"nm":"路径 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-664.326,-67.312],[-510.154,-162.36],[-509.545,-161.994],[-452.439,57.292],[-452.557,57.325]],"c":true},"ix":2},"nm":"路径 2","mn":"ADBE Vector Shape - Group","hd":false},{"ind":2,"ty":"sh","ix":3,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[674.978,-126.545],[675.858,-126.858],[904.599,-161.47],[777.914,104.511]],"c":true},"ix":2},"nm":"路径 3","mn":"ADBE Vector Shape - Group","hd":false},{"ind":3,"ty":"sh","ix":4,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-508.319,-161.257],[-85.933,92.625],[-451.073,57.493],[-451.223,56.952],[-451.476,57.023]],"c":true},"ix":2},"nm":"路径 4","mn":"ADBE Vector Shape - Group","hd":false},{"ind":4,"ty":"sh","ix":5,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[424.384,-35.773],[423.214,-36.885],[674.032,-126.207],[777.256,105.491]],"c":true},"ix":2},"nm":"路径 5","mn":"ADBE Vector Shape - Group","hd":false},{"ind":5,"ty":"sh","ix":6,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[41.395,-70.788],[417.927,-36.215],[-81.332,92.347]],"c":true},"ix":2},"nm":"路径 6","mn":"ADBE Vector Shape - Group","hd":false},{"ind":6,"ty":"sh","ix":7,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-665,-66.47],[-665.319,-66.7],[-665.288,-66.719],[-453.895,57.698],[-830.017,162.594]],"c":true},"ix":2},"nm":"路径 7","mn":"ADBE Vector Shape - Group","hd":false},{"ind":7,"ty":"sh","ix":8,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[426.345,-33.91],[777.481,106.658],[777.786,106.78],[631.976,161.365]],"c":true},"ix":2},"nm":"路径 8","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"合并路径 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.454901990704,0.717647058824,0.964705942191,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"填充 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[960.25,164.572],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"组 1","np":10,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":900,"st":0,"bm":0}],"markers":[]}')},"7f67":function(e){e.exports=JSON.parse('{"address":"0x4aaad68be1a2ac9886b72b9dae474f3edd2132d9","abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"transactionHash":"0x5c257f2d6e9d257375d69ad165a3a053c2b75dffb0d0f1ecee55fe69371db8ca","receipt":{"to":null,"from":"0x3A2d206A01DFE9f27D5CC915AbC8bA7504B1ec02","contractAddress":"0xD17534B8EA7E8DAbdd19235b25Fb2cAd52C07674","transactionIndex":0,"gasUsed":"759660","logsBloom":"0xblockHash":"0x4bf8e1b86f5da32f17f77011f79e795f50739c01b1bea96c671937020210ab84","transactionHash":"0x5c257f2d6e9d257375d69ad165a3a053c2b75dffb0d0f1ecee55fe69371db8ca","logs":[{"transactionIndex":0,"blockNumber":16132549,"transactionHash":"0x5c257f2d6e9d257375d69ad165a3a053c2b75dffb0d0f1ecee55fe69371db8ca","address":"0xD17534B8EA7E8DAbdd19235b25Fb2cAd52C07674","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000003a2d206a01dfe9f27d5cc915abc8ba7504b1ec02"],"data":"0x000000000000000000000000000000000000629b8c891b267182b61400000000","logIndex":0,"blockHash":"0x4bf8e1b86f5da32f17f77011f79e795f50739c01b1bea96c671937020210ab84"},{"transactionIndex":0,"blockNumber":16132549,"transactionHash":"0x5c257f2d6e9d257375d69ad165a3a053c2b75dffb0d0f1ecee55fe69371db8ca","address":"0xD17534B8EA7E8DAbdd19235b25Fb2cAd52C07674","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x0000000000000000000000003a2d206a01dfe9f27d5cc915abc8ba7504b1ec02","0x0000000000000000000000000000000000000000000000000000000000000000"],"data":"0x00000000000000000000000000000000000045067bf993014f75190e00000000","logIndex":1,"blockHash":"0x4bf8e1b86f5da32f17f77011f79e795f50739c01b1bea96c671937020210ab84"}],"blockNumber":16132549,"cumulativeGasUsed":"759660","status":1,"byzantium":true},"args":["BtcPi","BtcPi",18,"2000000000000000000000000000000000"],"solcInputHash":"4f03a8701660bd6b4b44ecfcfde7744b","metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.16+commit.9c3226ce\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"name\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"string\\",\\"name\\":\\"symbol\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"uint8\\",\\"name\\":\\"decimals\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"totalSupply\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"burn\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"internalType\\":\\"uint8\\",\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"subtractedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"decreaseAllowance\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"addedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"increaseAllowance\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"recipient\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"recipient\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"author\\":\\"TokenMint (visit https://tokenmint.io) \\",\\"details\\":\\"Standard ERC20 token with burning and optional functions implemented. For full specification of ERC-20 standard see: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\\",\\"methods\\":{\\"allowance(address,address)\\":{\\"details\\":\\"See `IERC20.allowance`.\\"},\\"approve(address,uint256)\\":{\\"details\\":\\"See `IERC20.approve`.      * Requirements:      * - `spender` cannot be the zero address.\\"},\\"balanceOf(address)\\":{\\"details\\":\\"See `IERC20.balanceOf`.\\"},\\"burn(uint256)\\":{\\"details\\":\\"Burns a specific amount of tokens.\\",\\"params\\":{\\"value\\":\\"The amount of lowest token units to be burned.\\"}},\\"constructor\\":{\\"details\\":\\"Constructor.\\",\\"params\\":{\\"decimals\\":\\"number of decimal places of one token unit, 18 is widely used\\",\\"name\\":\\"name of the token\\",\\"symbol\\":\\"symbol of the token, 3-4 chars is recommended\\",\\"totalSupply\\":\\"total supply of tokens in lowest units (depending on decimals)\\"}},\\"decimals()\\":{\\"return\\":\\"the number of decimals of the token.\\"},\\"decreaseAllowance(address,uint256)\\":{\\"details\\":\\"Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.      * Emits an `Approval` event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\\"},\\"increaseAllowance(address,uint256)\\":{\\"details\\":\\"Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.      * Emits an `Approval` event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address.\\"},\\"name()\\":{\\"return\\":\\"the name of the token.\\"},\\"symbol()\\":{\\"return\\":\\"the symbol of the token.\\"},\\"totalSupply()\\":{\\"details\\":\\"See `IERC20.totalSupply`.\\"},\\"transfer(address,uint256)\\":{\\"details\\":\\"See `IERC20.transfer`.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\\"},\\"transferFrom(address,address,uint256)\\":{\\"details\\":\\"See `IERC20.transferFrom`.      * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`\'s tokens of at least `amount`.\\"}},\\"title\\":\\"TokenMintERC20Token\\"},\\"userdoc\\":{\\"methods\\":{}}},\\"settings\\":{\\"compilationTarget\\":{\\"contracts/tokens/btcpi.sol\\":\\"BtcPi\\"},\\"evmVersion\\":\\"istanbul\\",\\"libraries\\":{},\\"metadata\\":{\\"useLiteralContent\\":true},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"contracts/tokens/btcpi.sol\\":{\\"content\\":\\"/**\\\\r\\\\n *Submitted for verification at BscScan.com on 2022-03-15\\\\r\\\\n*/\\\\r\\\\n\\\\r\\\\npragma solidity ^0.5.0;\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\\\r\\\\n * the optional functions; to access them see `ERC20Detailed`.\\\\r\\\\n */\\\\r\\\\ninterface IERC20 {\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the amount of tokens in existence.\\\\r\\\\n     */\\\\r\\\\n    function totalSupply() external view returns (uint256);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the amount of tokens owned by `account`.\\\\r\\\\n     */\\\\r\\\\n    function balanceOf(address account) external view returns (uint256);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Moves `amount` tokens from the caller\'s account to `recipient`.\\\\r\\\\n     *\\\\r\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\r\\\\n     *\\\\r\\\\n     * Emits a `Transfer` event.\\\\r\\\\n     */\\\\r\\\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the remaining number of tokens that `spender` will be\\\\r\\\\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\\\\r\\\\n     * zero by default.\\\\r\\\\n     *\\\\r\\\\n     * This value changes when `approve` or `transferFrom` are called.\\\\r\\\\n     */\\\\r\\\\n    function allowance(address owner, address spender) external view returns (uint256);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\\\r\\\\n     *\\\\r\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\r\\\\n     *\\\\r\\\\n     * > Beware that changing an allowance with this method brings the risk\\\\r\\\\n     * that someone may use both the old and the new allowance by unfortunate\\\\r\\\\n     * transaction ordering. One possible solution to mitigate this race\\\\r\\\\n     * condition is to first reduce the spender\'s allowance to 0 and set the\\\\r\\\\n     * desired value afterwards:\\\\r\\\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\\\r\\\\n     *\\\\r\\\\n     * Emits an `Approval` event.\\\\r\\\\n     */\\\\r\\\\n    function approve(address spender, uint256 amount) external returns (bool);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\\\r\\\\n     * allowance mechanism. `amount` is then deducted from the caller\'s\\\\r\\\\n     * allowance.\\\\r\\\\n     *\\\\r\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\r\\\\n     *\\\\r\\\\n     * Emits a `Transfer` event.\\\\r\\\\n     */\\\\r\\\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\\\r\\\\n     * another (`to`).\\\\r\\\\n     *\\\\r\\\\n     * Note that `value` may be zero.\\\\r\\\\n     */\\\\r\\\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\\\r\\\\n     * a call to `approve`. `value` is the new allowance.\\\\r\\\\n     */\\\\r\\\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n// File: contracts\\\\\\\\open-zeppelin-contracts\\\\\\\\math\\\\\\\\SafeMath.sol\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n * @dev Wrappers over Solidity\'s arithmetic operations with added overflow\\\\r\\\\n * checks.\\\\r\\\\n *\\\\r\\\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\\\r\\\\n * in bugs, because programmers usually assume that an overflow raises an\\\\r\\\\n * error, which is the standard behavior in high level programming languages.\\\\r\\\\n * `SafeMath` restores this intuition by reverting the transaction when an\\\\r\\\\n * operation overflows.\\\\r\\\\n *\\\\r\\\\n * Using this library instead of the unchecked operations eliminates an entire\\\\r\\\\n * class of bugs, so it\'s recommended to use it always.\\\\r\\\\n */\\\\r\\\\nlibrary SafeMath {\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the addition of two unsigned integers, reverting on\\\\r\\\\n     * overflow.\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `+` operator.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     * - Addition cannot overflow.\\\\r\\\\n     */\\\\r\\\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        uint256 c = a + b;\\\\r\\\\n        require(c >= a, \\\\\\"SafeMath: addition overflow\\\\\\");\\\\r\\\\n\\\\r\\\\n        return c;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\\\r\\\\n     * overflow (when the result is negative).\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `-` operator.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     * - Subtraction cannot overflow.\\\\r\\\\n     */\\\\r\\\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        require(b <= a, \\\\\\"SafeMath: subtraction overflow\\\\\\");\\\\r\\\\n        uint256 c = a - b;\\\\r\\\\n\\\\r\\\\n        return c;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\\\r\\\\n     * overflow.\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `*` operator.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     * - Multiplication cannot overflow.\\\\r\\\\n     */\\\\r\\\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        // Gas optimization: this is cheaper than requiring \'a\' not being zero, but the\\\\r\\\\n        // benefit is lost if \'b\' is also tested.\\\\r\\\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\\\r\\\\n        if (a == 0) {\\\\r\\\\n            return 0;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        uint256 c = a * b;\\\\r\\\\n        require(c / a == b, \\\\\\"SafeMath: multiplication overflow\\\\\\");\\\\r\\\\n\\\\r\\\\n        return c;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\\\r\\\\n     * division by zero. The result is rounded towards zero.\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `/` operator. Note: this function uses a\\\\r\\\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\\\r\\\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     * - The divisor cannot be zero.\\\\r\\\\n     */\\\\r\\\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        // Solidity only automatically asserts when dividing by 0\\\\r\\\\n        require(b > 0, \\\\\\"SafeMath: division by zero\\\\\\");\\\\r\\\\n        uint256 c = a / b;\\\\r\\\\n        // assert(a == b * c + a % b); // There is no case in which this doesn\'t hold\\\\r\\\\n\\\\r\\\\n        return c;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\\\r\\\\n     * Reverts when dividing by zero.\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `%` operator. This function uses a `revert`\\\\r\\\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\\\r\\\\n     * invalid opcode to revert (consuming all remaining gas).\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     * - The divisor cannot be zero.\\\\r\\\\n     */\\\\r\\\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        require(b != 0, \\\\\\"SafeMath: modulo by zero\\\\\\");\\\\r\\\\n        return a % b;\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n// File: contracts\\\\\\\\open-zeppelin-contracts\\\\\\\\token\\\\\\\\ERC20\\\\\\\\ERC20.sol\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n * @dev Implementation of the `IERC20` interface.\\\\r\\\\n *\\\\r\\\\n * This implementation is agnostic to the way tokens are created. This means\\\\r\\\\n * that a supply mechanism has to be added in a derived contract using `_mint`.\\\\r\\\\n * For a generic mechanism see `ERC20Mintable`.\\\\r\\\\n *\\\\r\\\\n * *For a detailed writeup see our guide [How to implement supply\\\\r\\\\n * mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\\\\r\\\\n *\\\\r\\\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\\\r\\\\n * of returning `false` on failure. This behavior is nonetheless conventional\\\\r\\\\n * and does not conflict with the expectations of ERC20 applications.\\\\r\\\\n *\\\\r\\\\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\\\\r\\\\n * This allows applications to reconstruct the allowance for all accounts just\\\\r\\\\n * by listening to said events. Other implementations of the EIP may not emit\\\\r\\\\n * these events, as it isn\'t required by the specification.\\\\r\\\\n *\\\\r\\\\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\\\\r\\\\n * functions have been added to mitigate the well-known issues around setting\\\\r\\\\n * allowances. See `IERC20.approve`.\\\\r\\\\n */\\\\r\\\\ncontract ERC20 is IERC20 {\\\\r\\\\n    using SafeMath for uint256;\\\\r\\\\n\\\\r\\\\n    mapping (address => uint256) private _balances;\\\\r\\\\n\\\\r\\\\n    mapping (address => mapping (address => uint256)) private _allowances;\\\\r\\\\n\\\\r\\\\n    uint256 private _totalSupply;\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See `IERC20.totalSupply`.\\\\r\\\\n     */\\\\r\\\\n    function totalSupply() public view returns (uint256) {\\\\r\\\\n        return _totalSupply;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See `IERC20.balanceOf`.\\\\r\\\\n     */\\\\r\\\\n    function balanceOf(address account) public view returns (uint256) {\\\\r\\\\n        return _balances[account];\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See `IERC20.transfer`.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - `recipient` cannot be the zero address.\\\\r\\\\n     * - the caller must have a balance of at least `amount`.\\\\r\\\\n     */\\\\r\\\\n    function transfer(address recipient, uint256 amount) public returns (bool) {\\\\r\\\\n        _transfer(msg.sender, recipient, amount);\\\\r\\\\n        return true;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See `IERC20.allowance`.\\\\r\\\\n     */\\\\r\\\\n    function allowance(address owner, address spender) public view returns (uint256) {\\\\r\\\\n        return _allowances[owner][spender];\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See `IERC20.approve`.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - `spender` cannot be the zero address.\\\\r\\\\n     */\\\\r\\\\n    function approve(address spender, uint256 value) public returns (bool) {\\\\r\\\\n        _approve(msg.sender, spender, value);\\\\r\\\\n        return true;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See `IERC20.transferFrom`.\\\\r\\\\n     *\\\\r\\\\n     * Emits an `Approval` event indicating the updated allowance. This is not\\\\r\\\\n     * required by the EIP. See the note at the beginning of `ERC20`;\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     * - `sender` and `recipient` cannot be the zero address.\\\\r\\\\n     * - `sender` must have a balance of at least `value`.\\\\r\\\\n     * - the caller must have allowance for `sender`\'s tokens of at least\\\\r\\\\n     * `amount`.\\\\r\\\\n     */\\\\r\\\\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\\\\r\\\\n        _transfer(sender, recipient, amount);\\\\r\\\\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\\\\r\\\\n        return true;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\\\r\\\\n     *\\\\r\\\\n     * This is an alternative to `approve` that can be used as a mitigation for\\\\r\\\\n     * problems described in `IERC20.approve`.\\\\r\\\\n     *\\\\r\\\\n     * Emits an `Approval` event indicating the updated allowance.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - `spender` cannot be the zero address.\\\\r\\\\n     */\\\\r\\\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\\\r\\\\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\\\\r\\\\n        return true;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\\\r\\\\n     *\\\\r\\\\n     * This is an alternative to `approve` that can be used as a mitigation for\\\\r\\\\n     * problems described in `IERC20.approve`.\\\\r\\\\n     *\\\\r\\\\n     * Emits an `Approval` event indicating the updated allowance.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - `spender` cannot be the zero address.\\\\r\\\\n     * - `spender` must have allowance for the caller of at least\\\\r\\\\n     * `subtractedValue`.\\\\r\\\\n     */\\\\r\\\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\\\r\\\\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\\\\r\\\\n        return true;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\\\r\\\\n     *\\\\r\\\\n     * This is internal function is equivalent to `transfer`, and can be used to\\\\r\\\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\\\r\\\\n     *\\\\r\\\\n     * Emits a `Transfer` event.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - `sender` cannot be the zero address.\\\\r\\\\n     * - `recipient` cannot be the zero address.\\\\r\\\\n     * - `sender` must have a balance of at least `amount`.\\\\r\\\\n     */\\\\r\\\\n    function _transfer(address sender, address recipient, uint256 amount) internal {\\\\r\\\\n        require(sender != address(0), \\\\\\"ERC20: transfer from the zero address\\\\\\");\\\\r\\\\n        require(recipient != address(0), \\\\\\"ERC20: transfer to the zero address\\\\\\");\\\\r\\\\n\\\\r\\\\n        _balances[sender] = _balances[sender].sub(amount);\\\\r\\\\n        _balances[recipient] = _balances[recipient].add(amount);\\\\r\\\\n        emit Transfer(sender, recipient, amount);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\\\r\\\\n     * the total supply.\\\\r\\\\n     *\\\\r\\\\n     * Emits a `Transfer` event with `from` set to the zero address.\\\\r\\\\n     *\\\\r\\\\n     * Requirements\\\\r\\\\n     *\\\\r\\\\n     * - `to` cannot be the zero address.\\\\r\\\\n     */\\\\r\\\\n    function _mint(address account, uint256 amount) internal {\\\\r\\\\n        require(account != address(0), \\\\\\"ERC20: mint to the zero address\\\\\\");\\\\r\\\\n\\\\r\\\\n        _totalSupply = _totalSupply.add(amount);\\\\r\\\\n        _balances[account] = _balances[account].add(amount);\\\\r\\\\n        emit Transfer(address(0), account, amount);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n    * @dev Destroys `amount` tokens from `account`, reducing the\\\\r\\\\n     * total supply.\\\\r\\\\n     *\\\\r\\\\n     * Emits a `Transfer` event with `to` set to the zero address.\\\\r\\\\n     *\\\\r\\\\n     * Requirements\\\\r\\\\n     *\\\\r\\\\n     * - `account` cannot be the zero address.\\\\r\\\\n     * - `account` must have at least `amount` tokens.\\\\r\\\\n     */\\\\r\\\\n    function _burn(address account, uint256 value) internal {\\\\r\\\\n        require(account != address(0), \\\\\\"ERC20: burn from the zero address\\\\\\");\\\\r\\\\n\\\\r\\\\n        _totalSupply = _totalSupply.sub(value);\\\\r\\\\n        _balances[account] = _balances[account].sub(value);\\\\r\\\\n        emit Transfer(account, address(0), value);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\\\r\\\\n     *\\\\r\\\\n     * This is internal function is equivalent to `approve`, and can be used to\\\\r\\\\n     * e.g. set automatic allowances for certain subsystems, etc.\\\\r\\\\n     *\\\\r\\\\n     * Emits an `Approval` event.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - `owner` cannot be the zero address.\\\\r\\\\n     * - `spender` cannot be the zero address.\\\\r\\\\n     */\\\\r\\\\n    function _approve(address owner, address spender, uint256 value) internal {\\\\r\\\\n        require(owner != address(0), \\\\\\"ERC20: approve from the zero address\\\\\\");\\\\r\\\\n        require(spender != address(0), \\\\\\"ERC20: approve to the zero address\\\\\\");\\\\r\\\\n\\\\r\\\\n        _allowances[owner][spender] = value;\\\\r\\\\n        emit Approval(owner, spender, value);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Destoys `amount` tokens from `account`.`amount` is then deducted\\\\r\\\\n     * from the caller\'s allowance.\\\\r\\\\n     *\\\\r\\\\n     * See `_burn` and `_approve`.\\\\r\\\\n     */\\\\r\\\\n    function _burnFrom(address account, uint256 amount) internal {\\\\r\\\\n        _burn(account, amount);\\\\r\\\\n        _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n// File: contracts\\\\\\\\ERC20\\\\\\\\TokenMintERC20Token.sol\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n * @title TokenMintERC20Token\\\\r\\\\n * @author TokenMint (visit https://tokenmint.io)\\\\r\\\\n *\\\\r\\\\n * @dev Standard ERC20 token with burning and optional functions implemented.\\\\r\\\\n * For full specification of ERC-20 standard see:\\\\r\\\\n * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\\\\r\\\\n */\\\\r\\\\ncontract BtcPi is ERC20 {\\\\r\\\\n\\\\r\\\\n    string private _name;\\\\r\\\\n    string private _symbol;\\\\r\\\\n    uint8 private _decimals;\\\\r\\\\n    uint256 private burnFee = 70;\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Constructor.\\\\r\\\\n     * @param name name of the token\\\\r\\\\n     * @param symbol symbol of the token, 3-4 chars is recommended\\\\r\\\\n     * @param decimals number of decimal places of one token unit, 18 is widely used\\\\r\\\\n     * @param totalSupply total supply of tokens in lowest units (depending on decimals)\\\\r\\\\n     */\\\\r\\\\n    constructor(string memory name, string memory symbol, uint8 decimals, uint256 totalSupply) public {\\\\r\\\\n        _name = name;\\\\r\\\\n        _symbol = symbol;\\\\r\\\\n        _decimals = decimals;\\\\r\\\\n\\\\r\\\\n        // set tokenOwnerAddress as owner of all tokens\\\\r\\\\n        _mint(msg.sender, totalSupply);\\\\r\\\\n\\\\r\\\\n        // pay the service fee for contract deployment\\\\r\\\\n//        feeReceiver.transfer(msg.value);\\\\r\\\\n\\\\r\\\\n        // burn on bsc chain\\\\r\\\\n        _burn(msg.sender, totalSupply * burnFee / 100);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Burns a specific amount of tokens.\\\\r\\\\n     * @param value The amount of lowest token units to be burned.\\\\r\\\\n     */\\\\r\\\\n    function burn(uint256 value) public {\\\\r\\\\n        _burn(msg.sender, value);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    // optional functions from ERC20 stardard\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @return the name of the token.\\\\r\\\\n     */\\\\r\\\\n    function name() public view returns (string memory) {\\\\r\\\\n        return _name;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @return the symbol of the token.\\\\r\\\\n     */\\\\r\\\\n    function symbol() public view returns (string memory) {\\\\r\\\\n        return _symbol;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @return the number of decimals of the token.\\\\r\\\\n     */\\\\r\\\\n    function decimals() public view returns (uint8) {\\\\r\\\\n        return _decimals;\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\",\\"keccak256\\":\\"0x9d05aa17557644b920f30c3040b4d7ee805bfba59561a0c23d21ffb3097e0733\\"}},\\"version\\":1}","bytecode":"0x608060405260466006553480156200001657600080fd5b5060405162000f7d38038062000f7d833981810160405260808110156200003c57600080fd5b81019080805160405193929190846401000000008211156200005d57600080fd5b9083019060208201858111156200007357600080fd5b82516401000000008111828201881017156200008e57600080fd5b82525081516020918201929091019080838360005b83811015620000bd578181015183820152602001620000a3565b50505050905090810190601f168015620000eb5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010f57600080fd5b9083019060208201858111156200012557600080fd5b82516401000000008111828201881017156200014057600080fd5b82525081516020918201929091019080838360005b838110156200016f57818101518382015260200162000155565b50505050905090810190601f1680156200019d5780820380516001836020036101000a031916815260200191505b506040908152602082810151929091015186519294509250620001c691600391870190620004b0565b508251620001dc906004906020860190620004b0565b506005805460ff191660ff8416179055620001f8338262000226565b6200021c3360646006548402816200020c57fe5b046001600160e01b036200031616565b5050505062000555565b6001600160a01b03821662000282576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200029e81600254620003f060201b620007b91790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620002d1918390620007b9620003f0821b17901c565b6001600160a01b03831660008181526020818152604080832094909455835185815293519293919260008051602062000f3c8339815191529281900390910190a35050565b6001600160a01b0382166200035d5760405162461bcd60e51b815260040180806020018281038252602181526020018062000f5c6021913960400191505060405180910390fd5b62000379816002546200045260201b6200075c1790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620003ac9183906200075c62000452821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351919360008051602062000f3c833981519152929081900390910190a35050565b6000828201838110156200044b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600082821115620004aa576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004f357805160ff191683800117855562000523565b8280016001018555821562000523579182015b828111156200052357825182559160200191906001019062000506565b506200053192915062000535565b5090565b6200055291905b808211156200053157600081556001016200053c565b90565b6109d780620005656000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806342966c681161007157806342966c681461021057806370a082311461022f57806395d89b4114610255578063a457c2d71461025d578063a9059cbb14610289578063dd62ed3e146102b5576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101e4575b600080fd5b6100c16102e3565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610379565b604080519115158252519081900360200190f35b61017e61038f565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b03813581169160208101359091169060400135610395565b6101ce6103ec565b6040805160ff9092168252519081900360200190f35b610162600480360360408110156101fa57600080fd5b506001600160a01b0381351690602001356103f5565b61022d6004803603602081101561022657600080fd5b5035610431565b005b61017e6004803603602081101561024557600080fd5b50356001600160a01b031661043e565b6100c1610459565b6101626004803603604081101561027357600080fd5b506001600160a01b0381351690602001356104ba565b6101626004803603604081101561029f57600080fd5b506001600160a01b0381351690602001356104f6565b61017e600480360360408110156102cb57600080fd5b506001600160a01b0381358116916020013516610503565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561036f5780601f106103445761010080835404028352916020019161036f565b820191906000526020600020905b81548152906001019060200180831161035257829003601f168201915b5050505050905090565b600061038633848461052e565b50600192915050565b60025490565b60006103a284848461061a565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546103e29186916103dd908663ffffffff61075c16565b61052e565b5060019392505050565b60055460ff1690565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103869185906103dd908663ffffffff6107b916565b61043b338261081a565b50565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561036f5780601f106103445761010080835404028352916020019161036f565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103869185906103dd908663ffffffff61075c16565b600061038633848461061a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105735760405162461bcd60e51b815260040180806020018281038252602481526020018061097f6024913960400191505060405180910390fd5b6001600160a01b0382166105b85760405162461bcd60e51b81526004018080602001828103825260228152602001806109176022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661065f5760405162461bcd60e51b815260040180806020018281038252602581526020018061095a6025913960400191505060405180910390fd5b6001600160a01b0382166106a45760405162461bcd60e51b81526004018080602001828103825260238152602001806108f46023913960400191505060405180910390fd5b6001600160a01b0383166000908152602081905260409020546106cd908263ffffffff61075c16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610702908263ffffffff6107b916565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156107b3576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610813576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b03821661085f5760405162461bcd60e51b81526004018080602001828103825260218152602001806109396021913960400191505060405180910390fd5b600254610872908263ffffffff61075c16565b6002556001600160a01b03821660009081526020819052604090205461089e908263ffffffff61075c16565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a7231582033126165de7214c82a30eb63e0b0f83d195ea98b544fdc2444fd0083179df6f464736f6c63430005100032ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806342966c681161007157806342966c681461021057806370a082311461022f57806395d89b4114610255578063a457c2d71461025d578063a9059cbb14610289578063dd62ed3e146102b5576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101e4575b600080fd5b6100c16102e3565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610379565b604080519115158252519081900360200190f35b61017e61038f565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b03813581169160208101359091169060400135610395565b6101ce6103ec565b6040805160ff9092168252519081900360200190f35b610162600480360360408110156101fa57600080fd5b506001600160a01b0381351690602001356103f5565b61022d6004803603602081101561022657600080fd5b5035610431565b005b61017e6004803603602081101561024557600080fd5b50356001600160a01b031661043e565b6100c1610459565b6101626004803603604081101561027357600080fd5b506001600160a01b0381351690602001356104ba565b6101626004803603604081101561029f57600080fd5b506001600160a01b0381351690602001356104f6565b61017e600480360360408110156102cb57600080fd5b506001600160a01b0381358116916020013516610503565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561036f5780601f106103445761010080835404028352916020019161036f565b820191906000526020600020905b81548152906001019060200180831161035257829003601f168201915b5050505050905090565b600061038633848461052e565b50600192915050565b60025490565b60006103a284848461061a565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546103e29186916103dd908663ffffffff61075c16565b61052e565b5060019392505050565b60055460ff1690565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103869185906103dd908663ffffffff6107b916565b61043b338261081a565b50565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561036f5780601f106103445761010080835404028352916020019161036f565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103869185906103dd908663ffffffff61075c16565b600061038633848461061a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105735760405162461bcd60e51b815260040180806020018281038252602481526020018061097f6024913960400191505060405180910390fd5b6001600160a01b0382166105b85760405162461bcd60e51b81526004018080602001828103825260228152602001806109176022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661065f5760405162461bcd60e51b815260040180806020018281038252602581526020018061095a6025913960400191505060405180910390fd5b6001600160a01b0382166106a45760405162461bcd60e51b81526004018080602001828103825260238152602001806108f46023913960400191505060405180910390fd5b6001600160a01b0383166000908152602081905260409020546106cd908263ffffffff61075c16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610702908263ffffffff6107b916565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156107b3576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610813576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b03821661085f5760405162461bcd60e51b81526004018080602001828103825260218152602001806109396021913960400191505060405180910390fd5b600254610872908263ffffffff61075c16565b6002556001600160a01b03821660009081526020819052604090205461089e908263ffffffff61075c16565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a7231582033126165de7214c82a30eb63e0b0f83d195ea98b544fdc2444fd0083179df6f464736f6c63430005100032","devdoc":{"author":"TokenMint (visit https://tokenmint.io) ","details":"Standard ERC20 token with burning and optional functions implemented. For full specification of ERC-20 standard see: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md","methods":{"allowance(address,address)":{"details":"See `IERC20.allowance`."},"approve(address,uint256)":{"details":"See `IERC20.approve`.      * Requirements:      * - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See `IERC20.balanceOf`."},"burn(uint256)":{"details":"Burns a specific amount of tokens.","params":{"value":"The amount of lowest token units to be burned."}},"constructor":{"details":"Constructor.","params":{"decimals":"number of decimal places of one token unit, 18 is widely used","name":"name of the token","symbol":"symbol of the token, 3-4 chars is recommended","totalSupply":"total supply of tokens in lowest units (depending on decimals)"}},"decimals()":{"return":"the number of decimals of the token."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.      * Emits an `Approval` event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.      * Emits an `Approval` event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address."},"name()":{"return":"the name of the token."},"symbol()":{"return":"the symbol of the token."},"totalSupply()":{"details":"See `IERC20.totalSupply`."},"transfer(address,uint256)":{"details":"See `IERC20.transfer`.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See `IERC20.transferFrom`.      * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`\'s tokens of at least `amount`."}},"title":"TokenMintERC20Token"},"userdoc":{"methods":{}},"storageLayout":{"storage":[{"astId":208,"contract":"contracts/tokens/btcpi.sol:BtcPi","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":214,"contract":"contracts/tokens/btcpi.sol:BtcPi","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":216,"contract":"contracts/tokens/btcpi.sol:BtcPi","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":596,"contract":"contracts/tokens/btcpi.sol:BtcPi","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":598,"contract":"contracts/tokens/btcpi.sol:BtcPi","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":600,"contract":"contracts/tokens/btcpi.sol:BtcPi","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"},{"astId":603,"contract":"contracts/tokens/btcpi.sol:BtcPi","label":"burnFee","offset":0,"slot":"6","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}')},8:function(e,t){},8405:function(e,t,n){"use strict";n("08ef")},"89df":function(e,t,n){e.exports=n.p+"img/3.83f29d8d.svg"},9:function(e,t){},"90d7":function(e){e.exports=JSON.parse('{"address":"0x69b14e8D3CEBfDD8196Bfe530954A0C226E5008E","abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"transactionHash":"0xf46ee7a2cbc8ef6d0d767d02f5dc8d42a8f3953a25a869f51fa7d95bfdd0356d","receipt":{"to":null,"from":"0x3A2d206A01DFE9f27D5CC915AbC8bA7504B1ec02","contractAddress":"0x6E0e02cB6fF349fa8C14639d110ae911A80b9EEb","transactionIndex":0,"gasUsed":"759720","logsBloom":"0xblockHash":"0x05a0732b41a1955c53c850f1dcb022090d0a92e3832799965a137d292c5c1420","transactionHash":"0xf46ee7a2cbc8ef6d0d767d02f5dc8d42a8f3953a25a869f51fa7d95bfdd0356d","logs":[{"transactionIndex":0,"blockNumber":16132547,"transactionHash":"0xf46ee7a2cbc8ef6d0d767d02f5dc8d42a8f3953a25a869f51fa7d95bfdd0356d","address":"0x6E0e02cB6fF349fa8C14639d110ae911A80b9EEb","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000003a2d206a01dfe9f27d5cc915abc8ba7504b1ec02"],"data":"0x000000000000000000000000000000000000629b8c891b267182b61400000000","logIndex":0,"blockHash":"0x05a0732b41a1955c53c850f1dcb022090d0a92e3832799965a137d292c5c1420"},{"transactionIndex":0,"blockNumber":16132547,"transactionHash":"0xf46ee7a2cbc8ef6d0d767d02f5dc8d42a8f3953a25a869f51fa7d95bfdd0356d","address":"0x6E0e02cB6fF349fa8C14639d110ae911A80b9EEb","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x0000000000000000000000003a2d206a01dfe9f27d5cc915abc8ba7504b1ec02","0x0000000000000000000000000000000000000000000000000000000000000000"],"data":"0x00000000000000000000000000000000000045067bf993014f75190e00000000","logIndex":1,"blockHash":"0x05a0732b41a1955c53c850f1dcb022090d0a92e3832799965a137d292c5c1420"}],"blockNumber":16132547,"cumulativeGasUsed":"759720","status":1,"byzantium":true},"args":["SpacePi","SpacePi",9,"2000000000000000000000000000000000"],"solcInputHash":"c542930bde56a1a0cf9bba487ab2420d","metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.16+commit.9c3226ce\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"name\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"string\\",\\"name\\":\\"symbol\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"uint8\\",\\"name\\":\\"decimals\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"totalSupply\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"burn\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"internalType\\":\\"uint8\\",\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"subtractedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"decreaseAllowance\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"addedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"increaseAllowance\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"recipient\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"recipient\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"author\\":\\"TokenMint (visit https://tokenmint.io) \\",\\"details\\":\\"Standard ERC20 token with burning and optional functions implemented. For full specification of ERC-20 standard see: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\\",\\"methods\\":{\\"allowance(address,address)\\":{\\"details\\":\\"See `IERC20.allowance`.\\"},\\"approve(address,uint256)\\":{\\"details\\":\\"See `IERC20.approve`.      * Requirements:      * - `spender` cannot be the zero address.\\"},\\"balanceOf(address)\\":{\\"details\\":\\"See `IERC20.balanceOf`.\\"},\\"burn(uint256)\\":{\\"details\\":\\"Burns a specific amount of tokens.\\",\\"params\\":{\\"value\\":\\"The amount of lowest token units to be burned.\\"}},\\"constructor\\":{\\"details\\":\\"Constructor.\\",\\"params\\":{\\"decimals\\":\\"number of decimal places of one token unit, 18 is widely used\\",\\"name\\":\\"name of the token\\",\\"symbol\\":\\"symbol of the token, 3-4 chars is recommended\\",\\"totalSupply\\":\\"total supply of tokens in lowest units (depending on decimals)\\"}},\\"decimals()\\":{\\"return\\":\\"the number of decimals of the token.\\"},\\"decreaseAllowance(address,uint256)\\":{\\"details\\":\\"Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.      * Emits an `Approval` event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\\"},\\"increaseAllowance(address,uint256)\\":{\\"details\\":\\"Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.      * Emits an `Approval` event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address.\\"},\\"name()\\":{\\"return\\":\\"the name of the token.\\"},\\"symbol()\\":{\\"return\\":\\"the symbol of the token.\\"},\\"totalSupply()\\":{\\"details\\":\\"See `IERC20.totalSupply`.\\"},\\"transfer(address,uint256)\\":{\\"details\\":\\"See `IERC20.transfer`.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\\"},\\"transferFrom(address,address,uint256)\\":{\\"details\\":\\"See `IERC20.transferFrom`.      * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`\'s tokens of at least `amount`.\\"}},\\"title\\":\\"TokenMintERC20Token\\"},\\"userdoc\\":{\\"methods\\":{}}},\\"settings\\":{\\"compilationTarget\\":{\\"contracts/tokens/spacepi.sol\\":\\"SpacePi\\"},\\"evmVersion\\":\\"istanbul\\",\\"libraries\\":{},\\"metadata\\":{\\"useLiteralContent\\":true},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"contracts/tokens/spacepi.sol\\":{\\"content\\":\\"/**\\\\r\\\\n *Submitted for verification at BscScan.com on 2022-03-15\\\\r\\\\n*/\\\\r\\\\n\\\\r\\\\npragma solidity ^0.5.0;\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\\\r\\\\n * the optional functions; to access them see `ERC20Detailed`.\\\\r\\\\n */\\\\r\\\\ninterface IERC20 {\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the amount of tokens in existence.\\\\r\\\\n     */\\\\r\\\\n    function totalSupply() external view returns (uint256);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the amount of tokens owned by `account`.\\\\r\\\\n     */\\\\r\\\\n    function balanceOf(address account) external view returns (uint256);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Moves `amount` tokens from the caller\'s account to `recipient`.\\\\r\\\\n     *\\\\r\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\r\\\\n     *\\\\r\\\\n     * Emits a `Transfer` event.\\\\r\\\\n     */\\\\r\\\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the remaining number of tokens that `spender` will be\\\\r\\\\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\\\\r\\\\n     * zero by default.\\\\r\\\\n     *\\\\r\\\\n     * This value changes when `approve` or `transferFrom` are called.\\\\r\\\\n     */\\\\r\\\\n    function allowance(address owner, address spender) external view returns (uint256);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\\\r\\\\n     *\\\\r\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\r\\\\n     *\\\\r\\\\n     * > Beware that changing an allowance with this method brings the risk\\\\r\\\\n     * that someone may use both the old and the new allowance by unfortunate\\\\r\\\\n     * transaction ordering. One possible solution to mitigate this race\\\\r\\\\n     * condition is to first reduce the spender\'s allowance to 0 and set the\\\\r\\\\n     * desired value afterwards:\\\\r\\\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\\\r\\\\n     *\\\\r\\\\n     * Emits an `Approval` event.\\\\r\\\\n     */\\\\r\\\\n    function approve(address spender, uint256 amount) external returns (bool);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\\\r\\\\n     * allowance mechanism. `amount` is then deducted from the caller\'s\\\\r\\\\n     * allowance.\\\\r\\\\n     *\\\\r\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\r\\\\n     *\\\\r\\\\n     * Emits a `Transfer` event.\\\\r\\\\n     */\\\\r\\\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\\\r\\\\n     * another (`to`).\\\\r\\\\n     *\\\\r\\\\n     * Note that `value` may be zero.\\\\r\\\\n     */\\\\r\\\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\\\r\\\\n     * a call to `approve`. `value` is the new allowance.\\\\r\\\\n     */\\\\r\\\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n// File: contracts\\\\\\\\open-zeppelin-contracts\\\\\\\\math\\\\\\\\SafeMath.sol\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n * @dev Wrappers over Solidity\'s arithmetic operations with added overflow\\\\r\\\\n * checks.\\\\r\\\\n *\\\\r\\\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\\\r\\\\n * in bugs, because programmers usually assume that an overflow raises an\\\\r\\\\n * error, which is the standard behavior in high level programming languages.\\\\r\\\\n * `SafeMath` restores this intuition by reverting the transaction when an\\\\r\\\\n * operation overflows.\\\\r\\\\n *\\\\r\\\\n * Using this library instead of the unchecked operations eliminates an entire\\\\r\\\\n * class of bugs, so it\'s recommended to use it always.\\\\r\\\\n */\\\\r\\\\nlibrary SafeMath {\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the addition of two unsigned integers, reverting on\\\\r\\\\n     * overflow.\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `+` operator.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     * - Addition cannot overflow.\\\\r\\\\n     */\\\\r\\\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        uint256 c = a + b;\\\\r\\\\n        require(c >= a, \\\\\\"SafeMath: addition overflow\\\\\\");\\\\r\\\\n\\\\r\\\\n        return c;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\\\r\\\\n     * overflow (when the result is negative).\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `-` operator.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     * - Subtraction cannot overflow.\\\\r\\\\n     */\\\\r\\\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        require(b <= a, \\\\\\"SafeMath: subtraction overflow\\\\\\");\\\\r\\\\n        uint256 c = a - b;\\\\r\\\\n\\\\r\\\\n        return c;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\\\r\\\\n     * overflow.\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `*` operator.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     * - Multiplication cannot overflow.\\\\r\\\\n     */\\\\r\\\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        // Gas optimization: this is cheaper than requiring \'a\' not being zero, but the\\\\r\\\\n        // benefit is lost if \'b\' is also tested.\\\\r\\\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\\\r\\\\n        if (a == 0) {\\\\r\\\\n            return 0;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        uint256 c = a * b;\\\\r\\\\n        require(c / a == b, \\\\\\"SafeMath: multiplication overflow\\\\\\");\\\\r\\\\n\\\\r\\\\n        return c;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\\\r\\\\n     * division by zero. The result is rounded towards zero.\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `/` operator. Note: this function uses a\\\\r\\\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\\\r\\\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     * - The divisor cannot be zero.\\\\r\\\\n     */\\\\r\\\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        // Solidity only automatically asserts when dividing by 0\\\\r\\\\n        require(b > 0, \\\\\\"SafeMath: division by zero\\\\\\");\\\\r\\\\n        uint256 c = a / b;\\\\r\\\\n        // assert(a == b * c + a % b); // There is no case in which this doesn\'t hold\\\\r\\\\n\\\\r\\\\n        return c;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\\\r\\\\n     * Reverts when dividing by zero.\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `%` operator. This function uses a `revert`\\\\r\\\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\\\r\\\\n     * invalid opcode to revert (consuming all remaining gas).\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     * - The divisor cannot be zero.\\\\r\\\\n     */\\\\r\\\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        require(b != 0, \\\\\\"SafeMath: modulo by zero\\\\\\");\\\\r\\\\n        return a % b;\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n// File: contracts\\\\\\\\open-zeppelin-contracts\\\\\\\\token\\\\\\\\ERC20\\\\\\\\ERC20.sol\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n * @dev Implementation of the `IERC20` interface.\\\\r\\\\n *\\\\r\\\\n * This implementation is agnostic to the way tokens are created. This means\\\\r\\\\n * that a supply mechanism has to be added in a derived contract using `_mint`.\\\\r\\\\n * For a generic mechanism see `ERC20Mintable`.\\\\r\\\\n *\\\\r\\\\n * *For a detailed writeup see our guide [How to implement supply\\\\r\\\\n * mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\\\\r\\\\n *\\\\r\\\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\\\r\\\\n * of returning `false` on failure. This behavior is nonetheless conventional\\\\r\\\\n * and does not conflict with the expectations of ERC20 applications.\\\\r\\\\n *\\\\r\\\\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\\\\r\\\\n * This allows applications to reconstruct the allowance for all accounts just\\\\r\\\\n * by listening to said events. Other implementations of the EIP may not emit\\\\r\\\\n * these events, as it isn\'t required by the specification.\\\\r\\\\n *\\\\r\\\\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\\\\r\\\\n * functions have been added to mitigate the well-known issues around setting\\\\r\\\\n * allowances. See `IERC20.approve`.\\\\r\\\\n */\\\\r\\\\ncontract ERC20 is IERC20 {\\\\r\\\\n    using SafeMath for uint256;\\\\r\\\\n\\\\r\\\\n    mapping (address => uint256) private _balances;\\\\r\\\\n\\\\r\\\\n    mapping (address => mapping (address => uint256)) private _allowances;\\\\r\\\\n\\\\r\\\\n    uint256 private _totalSupply;\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See `IERC20.totalSupply`.\\\\r\\\\n     */\\\\r\\\\n    function totalSupply() public view returns (uint256) {\\\\r\\\\n        return _totalSupply;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See `IERC20.balanceOf`.\\\\r\\\\n     */\\\\r\\\\n    function balanceOf(address account) public view returns (uint256) {\\\\r\\\\n        return _balances[account];\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See `IERC20.transfer`.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - `recipient` cannot be the zero address.\\\\r\\\\n     * - the caller must have a balance of at least `amount`.\\\\r\\\\n     */\\\\r\\\\n    function transfer(address recipient, uint256 amount) public returns (bool) {\\\\r\\\\n        _transfer(msg.sender, recipient, amount);\\\\r\\\\n        return true;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See `IERC20.allowance`.\\\\r\\\\n     */\\\\r\\\\n    function allowance(address owner, address spender) public view returns (uint256) {\\\\r\\\\n        return _allowances[owner][spender];\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See `IERC20.approve`.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - `spender` cannot be the zero address.\\\\r\\\\n     */\\\\r\\\\n    function approve(address spender, uint256 value) public returns (bool) {\\\\r\\\\n        _approve(msg.sender, spender, value);\\\\r\\\\n        return true;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev See `IERC20.transferFrom`.\\\\r\\\\n     *\\\\r\\\\n     * Emits an `Approval` event indicating the updated allowance. This is not\\\\r\\\\n     * required by the EIP. See the note at the beginning of `ERC20`;\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     * - `sender` and `recipient` cannot be the zero address.\\\\r\\\\n     * - `sender` must have a balance of at least `value`.\\\\r\\\\n     * - the caller must have allowance for `sender`\'s tokens of at least\\\\r\\\\n     * `amount`.\\\\r\\\\n     */\\\\r\\\\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\\\\r\\\\n        _transfer(sender, recipient, amount);\\\\r\\\\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\\\\r\\\\n        return true;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\\\r\\\\n     *\\\\r\\\\n     * This is an alternative to `approve` that can be used as a mitigation for\\\\r\\\\n     * problems described in `IERC20.approve`.\\\\r\\\\n     *\\\\r\\\\n     * Emits an `Approval` event indicating the updated allowance.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - `spender` cannot be the zero address.\\\\r\\\\n     */\\\\r\\\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\\\r\\\\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\\\\r\\\\n        return true;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\\\r\\\\n     *\\\\r\\\\n     * This is an alternative to `approve` that can be used as a mitigation for\\\\r\\\\n     * problems described in `IERC20.approve`.\\\\r\\\\n     *\\\\r\\\\n     * Emits an `Approval` event indicating the updated allowance.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - `spender` cannot be the zero address.\\\\r\\\\n     * - `spender` must have allowance for the caller of at least\\\\r\\\\n     * `subtractedValue`.\\\\r\\\\n     */\\\\r\\\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\\\r\\\\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\\\\r\\\\n        return true;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\\\r\\\\n     *\\\\r\\\\n     * This is internal function is equivalent to `transfer`, and can be used to\\\\r\\\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\\\r\\\\n     *\\\\r\\\\n     * Emits a `Transfer` event.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - `sender` cannot be the zero address.\\\\r\\\\n     * - `recipient` cannot be the zero address.\\\\r\\\\n     * - `sender` must have a balance of at least `amount`.\\\\r\\\\n     */\\\\r\\\\n    function _transfer(address sender, address recipient, uint256 amount) internal {\\\\r\\\\n        require(sender != address(0), \\\\\\"ERC20: transfer from the zero address\\\\\\");\\\\r\\\\n        require(recipient != address(0), \\\\\\"ERC20: transfer to the zero address\\\\\\");\\\\r\\\\n\\\\r\\\\n        _balances[sender] = _balances[sender].sub(amount);\\\\r\\\\n        _balances[recipient] = _balances[recipient].add(amount);\\\\r\\\\n        emit Transfer(sender, recipient, amount);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\\\r\\\\n     * the total supply.\\\\r\\\\n     *\\\\r\\\\n     * Emits a `Transfer` event with `from` set to the zero address.\\\\r\\\\n     *\\\\r\\\\n     * Requirements\\\\r\\\\n     *\\\\r\\\\n     * - `to` cannot be the zero address.\\\\r\\\\n     */\\\\r\\\\n    function _mint(address account, uint256 amount) internal {\\\\r\\\\n        require(account != address(0), \\\\\\"ERC20: mint to the zero address\\\\\\");\\\\r\\\\n\\\\r\\\\n        _totalSupply = _totalSupply.add(amount);\\\\r\\\\n        _balances[account] = _balances[account].add(amount);\\\\r\\\\n        emit Transfer(address(0), account, amount);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n    * @dev Destroys `amount` tokens from `account`, reducing the\\\\r\\\\n     * total supply.\\\\r\\\\n     *\\\\r\\\\n     * Emits a `Transfer` event with `to` set to the zero address.\\\\r\\\\n     *\\\\r\\\\n     * Requirements\\\\r\\\\n     *\\\\r\\\\n     * - `account` cannot be the zero address.\\\\r\\\\n     * - `account` must have at least `amount` tokens.\\\\r\\\\n     */\\\\r\\\\n    function _burn(address account, uint256 value) internal {\\\\r\\\\n        require(account != address(0), \\\\\\"ERC20: burn from the zero address\\\\\\");\\\\r\\\\n\\\\r\\\\n        _totalSupply = _totalSupply.sub(value);\\\\r\\\\n        _balances[account] = _balances[account].sub(value);\\\\r\\\\n        emit Transfer(account, address(0), value);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\\\r\\\\n     *\\\\r\\\\n     * This is internal function is equivalent to `approve`, and can be used to\\\\r\\\\n     * e.g. set automatic allowances for certain subsystems, etc.\\\\r\\\\n     *\\\\r\\\\n     * Emits an `Approval` event.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - `owner` cannot be the zero address.\\\\r\\\\n     * - `spender` cannot be the zero address.\\\\r\\\\n     */\\\\r\\\\n    function _approve(address owner, address spender, uint256 value) internal {\\\\r\\\\n        require(owner != address(0), \\\\\\"ERC20: approve from the zero address\\\\\\");\\\\r\\\\n        require(spender != address(0), \\\\\\"ERC20: approve to the zero address\\\\\\");\\\\r\\\\n\\\\r\\\\n        _allowances[owner][spender] = value;\\\\r\\\\n        emit Approval(owner, spender, value);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Destoys `amount` tokens from `account`.`amount` is then deducted\\\\r\\\\n     * from the caller\'s allowance.\\\\r\\\\n     *\\\\r\\\\n     * See `_burn` and `_approve`.\\\\r\\\\n     */\\\\r\\\\n    function _burnFrom(address account, uint256 amount) internal {\\\\r\\\\n        _burn(account, amount);\\\\r\\\\n        _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n// File: contracts\\\\\\\\ERC20\\\\\\\\TokenMintERC20Token.sol\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n * @title TokenMintERC20Token\\\\r\\\\n * @author TokenMint (visit https://tokenmint.io)\\\\r\\\\n *\\\\r\\\\n * @dev Standard ERC20 token with burning and optional functions implemented.\\\\r\\\\n * For full specification of ERC-20 standard see:\\\\r\\\\n * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\\\\r\\\\n */\\\\r\\\\ncontract SpacePi is ERC20 {\\\\r\\\\n\\\\r\\\\n    string private _name;\\\\r\\\\n    string private _symbol;\\\\r\\\\n    uint8 private _decimals;\\\\r\\\\n    uint256 private burnFee = 70;\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Constructor.\\\\r\\\\n     * @param name name of the token\\\\r\\\\n     * @param symbol symbol of the token, 3-4 chars is recommended\\\\r\\\\n     * @param decimals number of decimal places of one token unit, 18 is widely used\\\\r\\\\n     * @param totalSupply total supply of tokens in lowest units (depending on decimals)\\\\r\\\\n     */\\\\r\\\\n    constructor(string memory name, string memory symbol, uint8 decimals, uint256 totalSupply) public {\\\\r\\\\n        _name = name;\\\\r\\\\n        _symbol = symbol;\\\\r\\\\n        _decimals = decimals;\\\\r\\\\n\\\\r\\\\n        // set tokenOwnerAddress as owner of all tokens\\\\r\\\\n        _mint(msg.sender, totalSupply);\\\\r\\\\n\\\\r\\\\n        // pay the service fee for contract deployment\\\\r\\\\n//        feeReceiver.transfer(msg.value);\\\\r\\\\n\\\\r\\\\n        // burn on bsc chain\\\\r\\\\n        _burn(msg.sender, totalSupply * burnFee / 100);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Burns a specific amount of tokens.\\\\r\\\\n     * @param value The amount of lowest token units to be burned.\\\\r\\\\n     */\\\\r\\\\n    function burn(uint256 value) public {\\\\r\\\\n        _burn(msg.sender, value);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    // optional functions from ERC20 stardard\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @return the name of the token.\\\\r\\\\n     */\\\\r\\\\n    function name() public view returns (string memory) {\\\\r\\\\n        return _name;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @return the symbol of the token.\\\\r\\\\n     */\\\\r\\\\n    function symbol() public view returns (string memory) {\\\\r\\\\n        return _symbol;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @return the number of decimals of the token.\\\\r\\\\n     */\\\\r\\\\n    function decimals() public view returns (uint8) {\\\\r\\\\n        return _decimals;\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\",\\"keccak256\\":\\"0x4854500f3dcc733c8c6ca25b0b2b2b5115bc1a1d5846e5ef6d4c4363d05d02c5\\"}},\\"version\\":1}","bytecode":"0x608060405260466006553480156200001657600080fd5b5060405162000f7d38038062000f7d833981810160405260808110156200003c57600080fd5b81019080805160405193929190846401000000008211156200005d57600080fd5b9083019060208201858111156200007357600080fd5b82516401000000008111828201881017156200008e57600080fd5b82525081516020918201929091019080838360005b83811015620000bd578181015183820152602001620000a3565b50505050905090810190601f168015620000eb5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010f57600080fd5b9083019060208201858111156200012557600080fd5b82516401000000008111828201881017156200014057600080fd5b82525081516020918201929091019080838360005b838110156200016f57818101518382015260200162000155565b50505050905090810190601f1680156200019d5780820380516001836020036101000a031916815260200191505b506040908152602082810151929091015186519294509250620001c691600391870190620004b0565b508251620001dc906004906020860190620004b0565b506005805460ff191660ff8416179055620001f8338262000226565b6200021c3360646006548402816200020c57fe5b046001600160e01b036200031616565b5050505062000555565b6001600160a01b03821662000282576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200029e81600254620003f060201b620007b91790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620002d1918390620007b9620003f0821b17901c565b6001600160a01b03831660008181526020818152604080832094909455835185815293519293919260008051602062000f3c8339815191529281900390910190a35050565b6001600160a01b0382166200035d5760405162461bcd60e51b815260040180806020018281038252602181526020018062000f5c6021913960400191505060405180910390fd5b62000379816002546200045260201b6200075c1790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620003ac9183906200075c62000452821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351919360008051602062000f3c833981519152929081900390910190a35050565b6000828201838110156200044b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600082821115620004aa576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004f357805160ff191683800117855562000523565b8280016001018555821562000523579182015b828111156200052357825182559160200191906001019062000506565b506200053192915062000535565b5090565b6200055291905b808211156200053157600081556001016200053c565b90565b6109d780620005656000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806342966c681161007157806342966c681461021057806370a082311461022f57806395d89b4114610255578063a457c2d71461025d578063a9059cbb14610289578063dd62ed3e146102b5576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101e4575b600080fd5b6100c16102e3565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610379565b604080519115158252519081900360200190f35b61017e61038f565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b03813581169160208101359091169060400135610395565b6101ce6103ec565b6040805160ff9092168252519081900360200190f35b610162600480360360408110156101fa57600080fd5b506001600160a01b0381351690602001356103f5565b61022d6004803603602081101561022657600080fd5b5035610431565b005b61017e6004803603602081101561024557600080fd5b50356001600160a01b031661043e565b6100c1610459565b6101626004803603604081101561027357600080fd5b506001600160a01b0381351690602001356104ba565b6101626004803603604081101561029f57600080fd5b506001600160a01b0381351690602001356104f6565b61017e600480360360408110156102cb57600080fd5b506001600160a01b0381358116916020013516610503565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561036f5780601f106103445761010080835404028352916020019161036f565b820191906000526020600020905b81548152906001019060200180831161035257829003601f168201915b5050505050905090565b600061038633848461052e565b50600192915050565b60025490565b60006103a284848461061a565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546103e29186916103dd908663ffffffff61075c16565b61052e565b5060019392505050565b60055460ff1690565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103869185906103dd908663ffffffff6107b916565b61043b338261081a565b50565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561036f5780601f106103445761010080835404028352916020019161036f565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103869185906103dd908663ffffffff61075c16565b600061038633848461061a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105735760405162461bcd60e51b815260040180806020018281038252602481526020018061097f6024913960400191505060405180910390fd5b6001600160a01b0382166105b85760405162461bcd60e51b81526004018080602001828103825260228152602001806109176022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661065f5760405162461bcd60e51b815260040180806020018281038252602581526020018061095a6025913960400191505060405180910390fd5b6001600160a01b0382166106a45760405162461bcd60e51b81526004018080602001828103825260238152602001806108f46023913960400191505060405180910390fd5b6001600160a01b0383166000908152602081905260409020546106cd908263ffffffff61075c16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610702908263ffffffff6107b916565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156107b3576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610813576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b03821661085f5760405162461bcd60e51b81526004018080602001828103825260218152602001806109396021913960400191505060405180910390fd5b600254610872908263ffffffff61075c16565b6002556001600160a01b03821660009081526020819052604090205461089e908263ffffffff61075c16565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820e0dffff56db9d9377fce690d34470c2d0ed354e46ed40ebcf52fb023a5ecf30864736f6c63430005100032ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806342966c681161007157806342966c681461021057806370a082311461022f57806395d89b4114610255578063a457c2d71461025d578063a9059cbb14610289578063dd62ed3e146102b5576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101e4575b600080fd5b6100c16102e3565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610379565b604080519115158252519081900360200190f35b61017e61038f565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b03813581169160208101359091169060400135610395565b6101ce6103ec565b6040805160ff9092168252519081900360200190f35b610162600480360360408110156101fa57600080fd5b506001600160a01b0381351690602001356103f5565b61022d6004803603602081101561022657600080fd5b5035610431565b005b61017e6004803603602081101561024557600080fd5b50356001600160a01b031661043e565b6100c1610459565b6101626004803603604081101561027357600080fd5b506001600160a01b0381351690602001356104ba565b6101626004803603604081101561029f57600080fd5b506001600160a01b0381351690602001356104f6565b61017e600480360360408110156102cb57600080fd5b506001600160a01b0381358116916020013516610503565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561036f5780601f106103445761010080835404028352916020019161036f565b820191906000526020600020905b81548152906001019060200180831161035257829003601f168201915b5050505050905090565b600061038633848461052e565b50600192915050565b60025490565b60006103a284848461061a565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546103e29186916103dd908663ffffffff61075c16565b61052e565b5060019392505050565b60055460ff1690565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103869185906103dd908663ffffffff6107b916565b61043b338261081a565b50565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561036f5780601f106103445761010080835404028352916020019161036f565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103869185906103dd908663ffffffff61075c16565b600061038633848461061a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105735760405162461bcd60e51b815260040180806020018281038252602481526020018061097f6024913960400191505060405180910390fd5b6001600160a01b0382166105b85760405162461bcd60e51b81526004018080602001828103825260228152602001806109176022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661065f5760405162461bcd60e51b815260040180806020018281038252602581526020018061095a6025913960400191505060405180910390fd5b6001600160a01b0382166106a45760405162461bcd60e51b81526004018080602001828103825260238152602001806108f46023913960400191505060405180910390fd5b6001600160a01b0383166000908152602081905260409020546106cd908263ffffffff61075c16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610702908263ffffffff6107b916565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156107b3576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610813576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b03821661085f5760405162461bcd60e51b81526004018080602001828103825260218152602001806109396021913960400191505060405180910390fd5b600254610872908263ffffffff61075c16565b6002556001600160a01b03821660009081526020819052604090205461089e908263ffffffff61075c16565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820e0dffff56db9d9377fce690d34470c2d0ed354e46ed40ebcf52fb023a5ecf30864736f6c63430005100032","devdoc":{"author":"TokenMint (visit https://tokenmint.io) ","details":"Standard ERC20 token with burning and optional functions implemented. For full specification of ERC-20 standard see: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md","methods":{"allowance(address,address)":{"details":"See `IERC20.allowance`."},"approve(address,uint256)":{"details":"See `IERC20.approve`.      * Requirements:      * - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See `IERC20.balanceOf`."},"burn(uint256)":{"details":"Burns a specific amount of tokens.","params":{"value":"The amount of lowest token units to be burned."}},"constructor":{"details":"Constructor.","params":{"decimals":"number of decimal places of one token unit, 18 is widely used","name":"name of the token","symbol":"symbol of the token, 3-4 chars is recommended","totalSupply":"total supply of tokens in lowest units (depending on decimals)"}},"decimals()":{"return":"the number of decimals of the token."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.      * Emits an `Approval` event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.      * Emits an `Approval` event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address."},"name()":{"return":"the name of the token."},"symbol()":{"return":"the symbol of the token."},"totalSupply()":{"details":"See `IERC20.totalSupply`."},"transfer(address,uint256)":{"details":"See `IERC20.transfer`.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See `IERC20.transferFrom`.      * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`\'s tokens of at least `amount`."}},"title":"TokenMintERC20Token"},"userdoc":{"methods":{}},"storageLayout":{"storage":[{"astId":208,"contract":"contracts/tokens/spacepi.sol:SpacePi","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":214,"contract":"contracts/tokens/spacepi.sol:SpacePi","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":216,"contract":"contracts/tokens/spacepi.sol:SpacePi","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":596,"contract":"contracts/tokens/spacepi.sol:SpacePi","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":598,"contract":"contracts/tokens/spacepi.sol:SpacePi","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":600,"contract":"contracts/tokens/spacepi.sol:SpacePi","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"},{"astId":603,"contract":"contracts/tokens/spacepi.sol:SpacePi","label":"burnFee","offset":0,"slot":"6","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}')},"91de":function(e,t,n){"use strict";n("9bbb")},9662:function(e,t,n){},"9a9d":function(e,t,n){e.exports=n.p+"img/downArrow.39fa7302.svg"},"9bbb":function(e,t,n){},"9bc7":function(e,t,n){e.exports=n.p+"img/setopen.9c335dc9.svg"},"9e1b":function(e,t,n){e.exports=n.p+"img/do.63aa7490.svg"},a5d6:function(e,t,n){e.exports=n.p+"img/up.d7d789a0.svg"},a638:function(e,t,n){"use strict";n.r(t);var a={address:"0x4aaad68be1a2ac9886b72b9dae474f3edd2132d9",currency:{spacePi:"SpacePi",btcPi:"BTCPi",usdt:"USD",usd:"USD"},public:{connect:"Connect",disconnect:"Disconnect",balance:"Balance",min:"Min",max:"Max",buy:"Convert",get:"GET",authorize:"Authorize",receive:"Receive",copy:"Copy",is_receive:"Received",my:"My ",tooltip:"Each of your transactions (add, remove, withdraw) will directly transfer earnings to your wallet, and restart the calculation of earnings.",cancel:"Cancel",confirm:"Confirm"},alert:{connect:{success:"Connect Success",error:"Connect Fail"},presale:{min0:"Cannot have a balance of 0",min:"Balance cannot be less than",max:"This presale maximum limit",buySuccess:"Convert Success",buyError:"Convert Fail",receiveSuccess:"Receive Success",receiveError:"Receive Fail",authorizeSuccess:"Authorize Success",authorizeAdd:"Authorize loding...",authorizeError:"Authorize Fail",balanceError:"Insufficient Balance",balanceError1:"This presale can only",withdrawerror:"Failed to receive, please confirm whether the network is normal"},home:{copySuccess:"Copy Success"},earn:{lodingAdd:"Trading in progress...",harvestSuccess:"Harvest Success",harvestError:"Harvest Fail",StakingSuccess:"Staking Success",StakingError:"Staking Fail",LpwithdrawnSuccess:"Withdrawn Success",LpwithdrawnError:"Withdrawn Fail",LpAddSuccess:"Add Success",LpAddError:"Add Fail"}},top:{home:"HOME",presale:"PRESALE",earn:"MINE"},home:{title:"BTCPi is a global experiment based on",bitcoinTitle:"Bitcoin",bitcoinOrpiNetwork:"&",piNetworkTitle:"Pi Network",endTitle:"",text:"What is BTCPi?",getCar:{title:"BTCPi Empowers The Future",individuals:{title:"Individuals",bnt:"Payment instrument"},businesses:{title:"Businesses",bnt:"Commodity circulation"},developers:{title:"Developers",bnt:"Application development"}},getIntroduce:{title:"BTCPi Economic Model",text:"The birth of BTCPi is to pay tribute to BTC and Pi Network - the total amount of BTCPi is 21 million, of which 5.25 million are issued on the BSC chain. 2 million BTCPi is released through DeFi mining. The total mining time is 8 years, and it is halved every two years.",list:["Fast peer-to-peer transactions","Worldwide payments","Low processing fees"],bnt:"Start BTCPi Mining"},bnt:[{title:"Buy BTCPi",url:"https://pancakeswap.finance/swap?inputCurrency=BNB&outputCurrency=0x4aaad68be1a2ac9886b72b9dae474f3edd2132d9"},{title:"SpacePi",url:"https://space-pi.com"},{title:"Security Audit",url:"https://app.staysafu.org/scan/free?a=0x4aaad68be1a2ac9886b72b9dae474f3edd2132d9"},{title:"BTCPi Trend",url:"https://dexscreener.com/bsc/0x5d41418a006587038c4740c75c1d688cbaa6427e"}],partners:{title:"BTCPi Partners",text:"BTCPi is a global experiment based on Bitcoin & Pi Network"}},presale:{presaleCountdown:"Presale Countdown",presaleEnd:"BTCPI PRESALE ERFECT END!",yourExchangeAmount:"Participate in BTCPi Presale",myPresale:"My Presale",buyExplain:"BTCPi will be distributed after the presale ends",exchangeRatio:"Ratio",presaleRule:{title:"Presale Rules",text:["1. The maximum convert limit for each address of the presale BTCPi is 25 billion SpacePi & 25 USDT, which will be added to the PancakeSwap liquidity pool after the presale.","2. After the presale is over, you can manually collect the presale BTCPi.","3. The presale BTCPi will be unlocked manually 48 hours after the launch of PancakeSwap."]}},earn:{farmsTitle:"Farms",farmsText:"Stake LP tokens to earn.",currentBlockOutput:"OutPut/Block",currentBlockOutputTips:"Output quantity of each block, about 1500 BTCPi/Day",halvingCountdown:"Halving Countdown",halvingCountdownTips:"The halving countdown is the estimated halving time based on the current block height. Because the time of each block may be slightly different, the specific halving time needs to be based on the halving block height.",apr:"APR",earn:"Earn",earned:"Earned",harvest:"Harvest",staked:"Staked",stake:"Stake",stakeLp:"Stake LP",details:"Details",hide:"Hide",totalLiquidity:"Total Staked",seeTokenInfo:"Get",viewTutorial:"View Contract",viewContract:"Token Info",unstakeLPTokens:"Stake",unstake:"Unstake",unstake1:"stake",earnUrl1:["https://pancakeswap.finance/swap?inputCurrency=BNB&outputCurrency=0x69b14e8D3CEBfDD8196Bfe530954A0C226E5008E","https://bscscan.com/address/0x69b14e8D3CEBfDD8196Bfe530954A0C226E5008E#code","https://bscscan.com/token/0x69b14e8D3CEBfDD8196Bfe530954A0C226E5008E"],earnUrl2:["https://pancakeswap.finance/add/0x69b14e8D3CEBfDD8196Bfe530954A0C226E5008E/0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d","https://bscscan.com/address/0xc736D81C0D96e21FAFDf30083FD812a3DE41A203#code","https://bscscan.com/token/0xc736D81C0D96e21FAFDf30083FD812a3DE41A203"],earnUrl3:["https://pancakeswap.finance/add/0x4aAAD68BE1A2Ac9886B72b9DaE474F3eDd2132D9/0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d","https://bscscan.com/address/0x5d41418a006587038c4740c75c1d688cbaa6427e#code","https://bscscan.com/token/0x5d41418a006587038c4740c75c1d688cbaa6427e"],earnUrl4:["https://pancakeswap.finance/add/0x4aAAD68BE1A2Ac9886B72b9DaE474F3eDd2132D9/0x69b14e8D3CEBfDD8196Bfe530954A0C226E5008E","https://bscscan.com/address/0xbca91e8842408f00577ee80db8dcfa24d7c1e627#code","https://bscscan.com/token/0xbca91e8842408f00577ee80db8dcfa24d7c1e627"],earnUrl5:["https://fstswap.finance/#/add/v2/0xC9882dEF23bc42D53895b8361D0b1EDC7570Bc6A/0x69b14e8D3CEBfDD8196Bfe530954A0C226E5008E","https://bscscan.com/address/0x295fcf5d8c8de480324f59cd29c93a8072741867#code","https://bscscan.com/token/0x295fcf5d8c8de480324f59cd29c93a8072741867"]},footer:{title:"SpacePi SubProject - BTCPi",text:"BTCPi is a global experiment based on Bitcoin & Pi Network",bnt:"SpacePi Website",copyright:"Copyright © 2022 BTCPI. All rights reserved"}};t["default"]=a},a86f:function(e,t,n){"use strict";n("9662")},b0c9:function(e,t,n){},b1df:function(e,t,n){},b6dd:function(e,t,n){},bac9:function(e,t,n){e.exports=n.p+"img/get-r.a17f0b24.svg"},bc38:function(e,t,n){e.exports=n.p+"img/wallet.0f4d722d.svg"},bd3f:function(e,t,n){e.exports=n.p+"img/BTCPI-LP.5f24fe16.svg"},c0e9:function(e,t,n){e.exports=n.p+"img/info.0b5a9237.svg"},c2ee:function(e,t,n){"use strict";n("f0697")},c798:function(e,t,n){},c7a2:function(e,t,n){e.exports=n.p+"img/spacepi1.ad111173.svg"},c92b:function(e){e.exports=JSON.parse('{"address":"0x4b6B0173D44392811AfD160D3aB22d66a2e4808d","abi":[{"inputs":[{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"},{"internalType":"address","name":"_cashier","type":"address"},{"internalType":"uint256","name":"_unlockedBlock","type":"uint256"},{"internalType":"contract IERC20","name":"_saleToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"inviter","type":"address"},{"indexed":true,"internalType":"address","name":"invitee","type":"address"},{"indexed":false,"internalType":"bytes","name":"code","type":"bytes"}],"name":"Binding","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Reverse","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"perPrice","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"uint256","name":"min","type":"uint256"}],"name":"addCurrency","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"beginsTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"c","type":"bytes"}],"name":"binding","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cashier","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currencies","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"name":"currencyExistence","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultCode","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"endsTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"player","type":"address"}],"name":"getInviteCode","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"player","type":"address"}],"name":"getInviteeList","outputs":[{"components":[{"internalType":"address","name":"invitee","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"internalType":"struct IRelationship.Invitee[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"player","type":"address"}],"name":"getParent","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"code","type":"bytes"}],"name":"getPlayerByCode","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"player","type":"address"}],"name":"isInvited","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"cid","type":"uint256"},{"internalType":"uint256","name":"share","type":"uint256"}],"name":"reversed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"saleToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"supportedCurrency","outputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"perShare","type":"uint256"},{"internalType":"uint256","name":"limitPerShare","type":"uint256"},{"internalType":"uint256","name":"minPerShare","type":"uint256"},{"internalType":"uint256","name":"sold","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalReverse","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockedBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_cashier","type":"address"}],"name":"updateCashier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"currencyID","type":"uint256"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"perPrice","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"uint256","name":"min","type":"uint256"}],"name":"updateCurrency","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"time","type":"uint256"}],"name":"updateEndTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"updateSaleToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"time","type":"uint256"}],"name":"updateStartTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_block","type":"uint256"}],"name":"updateUnlockedBlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"contract IERC20","name":"","type":"address"}],"name":"userInfo","outputs":[{"internalType":"uint256","name":"locked","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"cid","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawRemaining","outputs":[],"stateMutability":"nonpayable","type":"function"}],"transactionHash":"0x8038a0b8fb6e6453e55bada7ce9506828fd909773e8ec8cca0d8ed1952158fd8","receipt":{"to":null,"from":"0x3A2d206A01DFE9f27D5CC915AbC8bA7504B1ec02","contractAddress":"0x12e620E1e17D2370a1a2AB551960Ae5b8E07C28a","transactionIndex":0,"gasUsed":"2262111","logsBloom":"0xblockHash":"0x91f8239bd842ee3f4d480a8bf833066f80ffe799a69b38b18a06267e5f39d529","transactionHash":"0x8038a0b8fb6e6453e55bada7ce9506828fd909773e8ec8cca0d8ed1952158fd8","logs":[{"transactionIndex":0,"blockNumber":16132562,"transactionHash":"0x8038a0b8fb6e6453e55bada7ce9506828fd909773e8ec8cca0d8ed1952158fd8","address":"0x12e620E1e17D2370a1a2AB551960Ae5b8E07C28a","topics":["0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000003a2d206a01dfe9f27d5cc915abc8ba7504b1ec02"],"data":"0x","logIndex":0,"blockHash":"0x91f8239bd842ee3f4d480a8bf833066f80ffe799a69b38b18a06267e5f39d529"}],"blockNumber":16132562,"cumulativeGasUsed":"2262111","status":1,"byzantium":true},"args":[1654938000,1655287200,"0x3A2d206A01DFE9f27D5CC915AbC8bA7504B1ec02","16025293","0xD17534B8EA7E8DAbdd19235b25Fb2cAd52C07674"],"solcInputHash":"27857bb39ab5755e6bcb59e2a27de804","metadata":"{\\"compiler\\":{\\"version\\":\\"0.7.6+commit.7338295f\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"start\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"end\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_cashier\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_unlockedBlock\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"_saleToken\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"inviter\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"invitee\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"bytes\\",\\"name\\":\\"code\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"Binding\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"previousOwner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Reverse\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Withdraw\\",\\"type\\":\\"event\\"},{\\"inputs\\":[{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"token\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"perPrice\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"limit\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"min\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"addCurrency\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"beginsTime\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"c\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"binding\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"cashier\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"currencies\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"currencyExistence\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"defaultCode\\",\\"outputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"endsTime\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"player\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getInviteCode\\",\\"outputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"player\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getInviteeList\\",\\"outputs\\":[{\\"components\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"invitee\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"timestamp\\",\\"type\\":\\"uint256\\"}],\\"internalType\\":\\"struct IRelationship.Invitee[]\\",\\"name\\":\\"\\",\\"type\\":\\"tuple[]\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"player\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getParent\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"code\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"getPlayerByCode\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"player\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isInvited\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"owner\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"renounceOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"cid\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"share\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"reversed\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"saleToken\\",\\"outputs\\":[{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"supportedCurrency\\",\\"outputs\\":[{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"token\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"perShare\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"limitPerShare\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"minPerShare\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"sold\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"totalReverse\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"unlockedBlock\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_cashier\\",\\"type\\":\\"address\\"}],\\"name\\":\\"updateCashier\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"currencyID\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"token\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"perPrice\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"limit\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"min\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"updateCurrency\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"time\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"updateEndTime\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"token\\",\\"type\\":\\"address\\"}],\\"name\\":\\"updateSaleToken\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"time\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"updateStartTime\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_block\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"updateUnlockedBlock\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"userInfo\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"locked\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"cost\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"cid\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdraw\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"withdrawRemaining\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{\\"owner()\\":{\\"details\\":\\"Returns the address of the current owner.\\"},\\"renounceOwnership()\\":{\\"details\\":\\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\\"},\\"transferOwnership(address)\\":{\\"details\\":\\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\\"}},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"contracts/MultiPresale.sol\\":\\"MultiPresale\\"},\\"evmVersion\\":\\"istanbul\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\",\\"useLiteralContent\\":true},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"@openzeppelin/contracts/access/Ownable.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity >=0.6.0 <0.8.0;\\\\n\\\\nimport \\\\\\"../utils/Context.sol\\\\\\";\\\\n/**\\\\n * @dev Contract module which provides a basic access control mechanism, where\\\\n * there is an account (an owner) that can be granted exclusive access to\\\\n * specific functions.\\\\n *\\\\n * By default, the owner account will be the one that deploys the contract. This\\\\n * can later be changed with {transferOwnership}.\\\\n *\\\\n * This module is used through inheritance. It will make available the modifier\\\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\\\n * the owner.\\\\n */\\\\nabstract contract Ownable is Context {\\\\n    address private _owner;\\\\n\\\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\\\n\\\\n    /**\\\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\\\n     */\\\\n    constructor () internal {\\\\n        address msgSender = _msgSender();\\\\n        _owner = msgSender;\\\\n        emit OwnershipTransferred(address(0), msgSender);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the address of the current owner.\\\\n     */\\\\n    function owner() public view virtual returns (address) {\\\\n        return _owner;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Throws if called by any account other than the owner.\\\\n     */\\\\n    modifier onlyOwner() {\\\\n        require(owner() == _msgSender(), \\\\\\"Ownable: caller is not the owner\\\\\\");\\\\n        _;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Leaves the contract without owner. It will not be possible to call\\\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\\\n     *\\\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\\\n     * thereby removing any functionality that is only available to the owner.\\\\n     */\\\\n    function renounceOwnership() public virtual onlyOwner {\\\\n        emit OwnershipTransferred(_owner, address(0));\\\\n        _owner = address(0);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\\\n     * Can only be called by the current owner.\\\\n     */\\\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\\\n        require(newOwner != address(0), \\\\\\"Ownable: new owner is the zero address\\\\\\");\\\\n        emit OwnershipTransferred(_owner, newOwner);\\\\n        _owner = newOwner;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/Context.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity >=0.6.0 <0.8.0;\\\\n\\\\n/*\\\\n * @dev Provides information about the current execution context, including the\\\\n * sender of the transaction and its data. While these are generally available\\\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\\\n * manner, since when dealing with GSN meta-transactions the account sending and\\\\n * paying for execution may not be the actual sender (as far as an application\\\\n * is concerned).\\\\n *\\\\n * This contract is only required for intermediate, library-like contracts.\\\\n */\\\\nabstract contract Context {\\\\n    function _msgSender() internal view virtual returns (address payable) {\\\\n        return msg.sender;\\\\n    }\\\\n\\\\n    function _msgData() internal view virtual returns (bytes memory) {\\\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\\\n        return msg.data;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n\\\\npragma solidity >=0.6.0 <0.8.0;\\\\n\\\\n/**\\\\n * @dev Contract module that helps prevent reentrant calls to a function.\\\\n *\\\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\\\n * available, which can be applied to functions to make sure there are no nested\\\\n * (reentrant) calls to them.\\\\n *\\\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\\\n * `nonReentrant` may not call one another. This can be worked around by making\\\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\\\n * points to them.\\\\n *\\\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\\\n * to protect against it, check out our blog post\\\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\\\n */\\\\nabstract contract ReentrancyGuard {\\\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\\\n    // word because each write operation emits an extra SLOAD to first read the\\\\n    // slot\'s contents, replace the bits taken up by the boolean, and then write\\\\n    // back. This is the compiler\'s defense against contract upgrades and\\\\n    // pointer aliasing, and it cannot be disabled.\\\\n\\\\n    // The values being non-zero value makes deployment a bit more expensive,\\\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\\\n    // amount. Since refunds are capped to a percentage of the total\\\\n    // transaction\'s gas, it is best to keep them low in cases like this one, to\\\\n    // increase the likelihood of the full refund coming into effect.\\\\n    uint256 private constant _NOT_ENTERED = 1;\\\\n    uint256 private constant _ENTERED = 2;\\\\n\\\\n    uint256 private _status;\\\\n\\\\n    constructor () internal {\\\\n        _status = _NOT_ENTERED;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\\\n     * function is not supported. It is possible to prevent this from happening\\\\n     * by making the `nonReentrant` function external, and make it call a\\\\n     * `private` function that does the actual work.\\\\n     */\\\\n    modifier nonReentrant() {\\\\n        // On the first call to nonReentrant, _notEntered will be true\\\\n        require(_status != _ENTERED, \\\\\\"ReentrancyGuard: reentrant call\\\\\\");\\\\n\\\\n        // Any calls to nonReentrant after this point will fail\\\\n        _status = _ENTERED;\\\\n\\\\n        _;\\\\n\\\\n        // By storing the original value once again, a refund is triggered (see\\\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\\\n        _status = _NOT_ENTERED;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\\",\\"license\\":\\"MIT\\"},\\"contracts/MultiPresale.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\r\\\\npragma solidity ^0.7.0;\\\\r\\\\npragma abicoder v2;\\\\r\\\\n\\\\r\\\\nimport \\\\\\"@openzeppelin/contracts/access/Ownable.sol\\\\\\";\\\\r\\\\nimport \\\\\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\\\\";\\\\r\\\\nimport \\\\\\"./utils/SafeERC20.sol\\\\\\";\\\\r\\\\nimport \\\\\\"./Relationship.sol\\\\\\";\\\\r\\\\n\\\\r\\\\ncontract MultiPresale is Ownable, ReentrancyGuard, Relationship {\\\\r\\\\n    using SafeERC20 for IERC20;\\\\r\\\\n    using SafeMath for uint256;\\\\r\\\\n\\\\r\\\\n    struct Currency {\\\\r\\\\n        IERC20 token;\\\\r\\\\n        uint256 amount;\\\\r\\\\n        uint256 perShare;\\\\r\\\\n        uint256 limitPerShare;\\\\r\\\\n        uint256 minPerShare;\\\\r\\\\n        uint256 sold;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    struct Player {\\\\r\\\\n        uint256 locked;\\\\r\\\\n        uint256 cost;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n//    uint256 public saleAmount;\\\\r\\\\n    Currency[] public supportedCurrency;\\\\r\\\\n\\\\r\\\\n    IERC20 public saleToken;\\\\r\\\\n\\\\r\\\\n    address public cashier;\\\\r\\\\n\\\\r\\\\n    uint256 public unlockedBlock;\\\\r\\\\n    uint256 public totalReverse;\\\\r\\\\n\\\\r\\\\n    mapping(IERC20 => uint256)public currencyExistence;\\\\r\\\\n\\\\r\\\\n    mapping(address => mapping(IERC20 => Player))public userInfo;\\\\r\\\\n\\\\r\\\\n    //    IRelationship public relationship;\\\\r\\\\n\\\\r\\\\n    event Reverse(address indexed sender, uint256 indexed amount);\\\\r\\\\n    event Withdraw(address indexed sender, uint256 indexed amount);\\\\r\\\\n\\\\r\\\\n    constructor(\\\\r\\\\n        uint256 start,\\\\r\\\\n        uint256 end,\\\\r\\\\n        address _cashier,\\\\r\\\\n        uint256 _unlockedBlock,\\\\r\\\\n        IERC20 _saleToken\\\\r\\\\n    )\\\\r\\\\n    Relationship(start, end)\\\\r\\\\n    {\\\\r\\\\n        cashier = _cashier;\\\\r\\\\n        unlockedBlock = _unlockedBlock;\\\\r\\\\n        saleToken = _saleToken;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    modifier nonDuplicated(IERC20 currency) {\\\\r\\\\n        require(currencyExistence[currency] == 0, \\\\\\"nonDuplicated: duplicated lpToken\\\\\\");\\\\r\\\\n        _;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function currencies() public view returns (uint256){\\\\r\\\\n        return supportedCurrency.length;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function addCurrency(IERC20 token, uint256 amount, uint256 perPrice, uint256 limit, uint256 min) public onlyOwner nonDuplicated(token) {\\\\r\\\\n        supportedCurrency.push(Currency(token, amount, perPrice, limit, min, 0));\\\\r\\\\n        currencyExistence[token] = supportedCurrency.length - 1;\\\\r\\\\n        totalReverse = totalReverse.add(amount.mul(perPrice));\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function updateCurrency(uint256 currencyID, IERC20 token, uint256 amount, uint256 perPrice, uint256 limit, uint256 min) public onlyOwner {\\\\r\\\\n        supportedCurrency[currencyID].token = token;\\\\r\\\\n        supportedCurrency[currencyID].amount = amount;\\\\r\\\\n        supportedCurrency[currencyID].perShare = perPrice;\\\\r\\\\n        supportedCurrency[currencyID].limitPerShare = limit;\\\\r\\\\n        supportedCurrency[currencyID].minPerShare = min;\\\\r\\\\n        supportedCurrency[currencyID].sold = 0;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function updateStartTime(uint256 time) external onlyOwner {\\\\r\\\\n        beginsTime = time;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function updateEndTime(uint256 time) external onlyOwner {\\\\r\\\\n        endsTime = time;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function updateSaleToken(IERC20 token) external onlyOwner {\\\\r\\\\n        saleToken = token;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function updateCashier(address _cashier) external onlyOwner {\\\\r\\\\n        cashier = _cashier;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function updateUnlockedBlock(uint256 _block) external onlyOwner {\\\\r\\\\n        unlockedBlock = _block;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function reversed(uint256 cid, uint256 share) public nonReentrant {\\\\r\\\\n        address msgSender = msg.sender;\\\\r\\\\n        Currency storage currency = supportedCurrency[cid];\\\\r\\\\n        //        address inviter = relationship.getParent(msgSender);\\\\r\\\\n        //        address inviter = getParent(msgSender);\\\\r\\\\n        require(block.timestamp > beginsTime && block.timestamp < endsTime, \\\\\\"reversed:not in time\\\\\\");\\\\r\\\\n        require(share >= currency.minPerShare, \\\\\\"reversed:share is too small\\\\\\");\\\\r\\\\n        require(address(currency.token) != address(0), \\\\\\"reversed: no supported currency\\\\\\");\\\\r\\\\n\\\\r\\\\n        uint256 tokenAmount = share.mul(currency.perShare).div(10**currency.token.decimals());\\\\r\\\\n        require(currency.amount <= currency.sold + share, \\\\\\"reversed: not enough currency\\\\\\");\\\\r\\\\n//        require(saleAmount.add(tokenAmount) <= totalReverse, \\\\\\"reversed: saleAmount <= totalReverse\\\\\\");\\\\r\\\\n        require(userInfo[msgSender][currency.token].cost.add(share) <= currency.limitPerShare, \\\\\\"reversed: exceed limit\\\\\\");\\\\r\\\\n        userInfo[msgSender][currency.token].locked = userInfo[msgSender][currency.token].locked.add(tokenAmount);\\\\r\\\\n        userInfo[msgSender][currency.token].cost = userInfo[msgSender][currency.token].cost.add(share);\\\\r\\\\n//        saleAmount = saleAmount.add(tokenAmount);\\\\r\\\\n        //        if (inviter == address(0)) {\\\\r\\\\n        currency.sold = currency.sold.add(share);\\\\r\\\\n        currency.token.safeTransferFrom(msgSender, cashier, share);\\\\r\\\\n        //        } else {\\\\r\\\\n        //            currency.token.safeTransferFrom(msgSender, cashier, share.mul(9).div(10));\\\\r\\\\n        //            currency.token.safeTransferFrom(msgSender, inviter, share.div(10));\\\\r\\\\n        //        }\\\\r\\\\n        emit Reverse(msgSender, tokenAmount);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function withdraw(uint256 cid) public nonReentrant {\\\\r\\\\n        address msgSender = msg.sender;\\\\r\\\\n        require(block.number > unlockedBlock, \\\\\\"withdraw: block number is not unlocked\\\\\\");\\\\r\\\\n        Currency storage currency = supportedCurrency[cid];\\\\r\\\\n        saleToken.safeTransfer(msgSender, userInfo[msgSender][currency.token].locked);\\\\r\\\\n        userInfo[msgSender][currency.token].locked = 0;\\\\r\\\\n        emit Withdraw(msgSender, userInfo[msgSender][currency.token].locked);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function withdrawRemaining() public onlyOwner {\\\\r\\\\n        uint256 bal = saleToken.balanceOf(address(this));\\\\r\\\\n        require(bal > 0 && address(cashier) != address(0), \\\\\\"no remaining\\\\\\");\\\\r\\\\n        saleToken.safeTransfer(cashier, bal);\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\",\\"keccak256\\":\\"0xe508235e235453b08683ec66ab0645bd9509036feb47e2550a4231fc1abd3807\\",\\"license\\":\\"MIT\\"},\\"contracts/Relationship.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: Unlicense\\\\r\\\\npragma solidity ^0.7.0;\\\\r\\\\npragma abicoder v2;\\\\r\\\\n\\\\r\\\\nimport \\\\\\"@openzeppelin/contracts/access/Ownable.sol\\\\\\";\\\\r\\\\nimport \\\\\\"./interfaces/IRelationship.sol\\\\\\";\\\\r\\\\n\\\\r\\\\n/* @title Relationship\\\\r\\\\n * @author jonescyna@gmail.com\\\\r\\\\n * @dev This contract is used to manage the invitation relationship.\\\\r\\\\n *\\\\r\\\\n * @rules can\'t invite someone who has already invited you\\\\r\\\\n * @rules can\'t invite someone who has already been invited\\\\r\\\\n * @rules maximum of invitees is limited by gas\\\\r\\\\n*/\\\\r\\\\ncontract Relationship is Ownable,IRelationship {\\\\r\\\\n\\\\r\\\\n    bytes public defaultCode = \\\\\\"space0\\\\\\";\\\\r\\\\n    uint256 public beginsTime;\\\\r\\\\n    uint256 public endsTime;\\\\r\\\\n    // User is the address of the person who is invited\\\\r\\\\n    mapping(address => User) private _relations;\\\\r\\\\n    // code used to invite\\\\r\\\\n    mapping(bytes => address) private _codeUsed;\\\\r\\\\n\\\\r\\\\n    event Binding(address indexed inviter, address indexed invitee, bytes code);\\\\r\\\\n\\\\r\\\\n    constructor(uint256 begins, uint256 ends) {\\\\r\\\\n        beginsTime = begins;\\\\r\\\\n        endsTime = ends;\\\\r\\\\n        _relations[msg.sender].code = defaultCode;\\\\r\\\\n        _codeUsed[defaultCode] = msg.sender;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    modifier inDuration {\\\\r\\\\n        require(block.timestamp > beginsTime && block.timestamp < endsTime);\\\\r\\\\n        _;\\\\r\\\\n    }\\\\r\\\\n    // @param inviter address of the person who is inviting\\\\r\\\\n    function binding(bytes memory c) public override inDuration {\\\\r\\\\n        address sender = msg.sender;\\\\r\\\\n        address inviter = _codeUsed[c];\\\\r\\\\n        require(inviter != address(0), \\\\\\"code not found\\\\\\");\\\\r\\\\n        require(inviter != sender, \\\\\\"Not allow inviter by self\\\\\\");\\\\r\\\\n        // invitee address info\\\\r\\\\n        User storage self = _relations[sender];\\\\r\\\\n        // inviter address info\\\\r\\\\n        User storage parent = _relations[inviter];\\\\r\\\\n\\\\r\\\\n        require(parent.indexes[sender] == 0, \\\\\\"Can not accept child invitation\\\\\\");\\\\r\\\\n        require(self.inviter == address(0), \\\\\\"Already bond invite\\\\\\");\\\\r\\\\n        parent.inviteeList.push(Invitee(sender, block.timestamp));\\\\r\\\\n        parent.indexes[sender] = self.inviteeList.length;\\\\r\\\\n\\\\r\\\\n        self.inviter = inviter;\\\\r\\\\n        bytes memory code = _genCode(sender);\\\\r\\\\n        require(_codeUsed[code] == address(0), \\\\\\"please try again\\\\\\");\\\\r\\\\n        self.code = code;\\\\r\\\\n\\\\r\\\\n        _codeUsed[code] = sender;\\\\r\\\\n        emit Binding(inviter, sender, code);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    // @param player address if not invited\\\\r\\\\n    function isInvited(address player) public view override returns (bool){\\\\r\\\\n        if (_relations[player].inviter != address(0)) return true;\\\\r\\\\n        return false;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    // @param get player address invitee list\\\\r\\\\n    function getInviteeList(address player) public view override returns (Invitee[] memory){\\\\r\\\\n        return _relations[player].inviteeList;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    // @param get player address inviter\\\\r\\\\n    function getParent(address player) public view override returns (address){\\\\r\\\\n        return _relations[player].inviter;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    // @param get player address invitation code\\\\r\\\\n    function getInviteCode(address player) public view override returns (bytes memory){\\\\r\\\\n        return _relations[player].code;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    // @param get player address by invitation code\\\\r\\\\n    function getPlayerByCode(bytes memory code) public view override returns (address){\\\\r\\\\n        return _codeUsed[code];\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function _genCode(address player) private view  returns (bytes memory){\\\\r\\\\n        bytes32 hash = keccak256(abi.encode(player, block.number));\\\\r\\\\n        bytes memory code = new bytes(6);\\\\r\\\\n        for (uint256 i = 0; i < code.length; i++) {\\\\r\\\\n            code[i] = hash[i];\\\\r\\\\n        }\\\\r\\\\n        return code;\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\",\\"keccak256\\":\\"0x0b24e3763b9764e1749f6e345b21f5e5af3001800713ab2bbe3046449166ad0f\\",\\"license\\":\\"Unlicense\\"},\\"contracts/interfaces/IERC20.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\r\\\\n\\\\r\\\\npragma solidity >=0.6.0 <0.8.0;\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\\\r\\\\n */\\\\r\\\\ninterface IERC20 {\\\\r\\\\n    function name() external view returns (string memory);\\\\r\\\\n    function symbol() external view returns (string memory);\\\\r\\\\n    function decimals() external view returns (uint8);\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the amount of tokens in existence.\\\\r\\\\n     */\\\\r\\\\n    function totalSupply() external view returns (uint256);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the amount of tokens owned by `account`.\\\\r\\\\n     */\\\\r\\\\n    function balanceOf(address account) external view returns (uint256);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Moves `amount` tokens from the caller\'s account to `recipient`.\\\\r\\\\n     *\\\\r\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\r\\\\n     *\\\\r\\\\n     * Emits a {Transfer} event.\\\\r\\\\n     */\\\\r\\\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the remaining number of tokens that `spender` will be\\\\r\\\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\\\r\\\\n     * zero by default.\\\\r\\\\n     *\\\\r\\\\n     * This value changes when {approve} or {transferFrom} are called.\\\\r\\\\n     */\\\\r\\\\n    function allowance(address owner, address spender) external view returns (uint256);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\\\r\\\\n     *\\\\r\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\r\\\\n     *\\\\r\\\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\\\r\\\\n     * that someone may use both the old and the new allowance by unfortunate\\\\r\\\\n     * transaction ordering. One possible solution to mitigate this race\\\\r\\\\n     * condition is to first reduce the spender\'s allowance to 0 and set the\\\\r\\\\n     * desired value afterwards:\\\\r\\\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\\\r\\\\n     *\\\\r\\\\n     * Emits an {Approval} event.\\\\r\\\\n     */\\\\r\\\\n    function approve(address spender, uint256 amount) external returns (bool);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\\\r\\\\n     * allowance mechanism. `amount` is then deducted from the caller\'s\\\\r\\\\n     * allowance.\\\\r\\\\n     *\\\\r\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\r\\\\n     *\\\\r\\\\n     * Emits a {Transfer} event.\\\\r\\\\n     */\\\\r\\\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\\\r\\\\n     * another (`to`).\\\\r\\\\n     *\\\\r\\\\n     * Note that `value` may be zero.\\\\r\\\\n     */\\\\r\\\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\\\r\\\\n     * a call to {approve}. `value` is the new allowance.\\\\r\\\\n     */\\\\r\\\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\\\r\\\\n}\\\\r\\\\n\\",\\"keccak256\\":\\"0x392355d13b22174433aa33791f4b4c39bef7ef26b8d9c3892964a27522c32adc\\",\\"license\\":\\"MIT\\"},\\"contracts/interfaces/IRelationship.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\r\\\\npragma solidity ^0.7.0;\\\\r\\\\npragma abicoder v2;\\\\r\\\\n\\\\r\\\\ninterface IRelationship {\\\\r\\\\n    // Invitee is the address of the person being invited\\\\r\\\\n    struct Invitee {\\\\r\\\\n        address invitee;\\\\r\\\\n        uint256 timestamp;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    // User is the address of the person who is inviting\\\\r\\\\n    struct User {\\\\r\\\\n        Invitee[] inviteeList;\\\\r\\\\n        address inviter;\\\\r\\\\n        bytes code;\\\\r\\\\n        mapping(address => uint256) indexes;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function binding(bytes memory c) external;\\\\r\\\\n\\\\r\\\\n    function isInvited(address player) external view returns (bool);\\\\r\\\\n\\\\r\\\\n    function getInviteeList(address player) external view returns (Invitee[] memory);\\\\r\\\\n\\\\r\\\\n    function getParent(address player) external view returns (address);\\\\r\\\\n\\\\r\\\\n    function getInviteCode(address player) external view returns (bytes memory);\\\\r\\\\n\\\\r\\\\n    function getPlayerByCode(bytes memory code) external view returns (address);\\\\r\\\\n}\\\\r\\\\n\\",\\"keccak256\\":\\"0x973384b474704d33942df546dce096de2505aa1542edeff87f333fd549c2449e\\",\\"license\\":\\"MIT\\"},\\"contracts/utils/Address.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\r\\\\n\\\\r\\\\npragma solidity >=0.6.2 <0.8.0;\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n * @dev Collection of functions related to the address type\\\\r\\\\n */\\\\r\\\\nlibrary Address {\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns true if `account` is a contract.\\\\r\\\\n     *\\\\r\\\\n     * [IMPORTANT]\\\\r\\\\n     * ====\\\\r\\\\n     * It is unsafe to assume that an address for which this function returns\\\\r\\\\n     * false is an externally-owned account (EOA) and not a contract.\\\\r\\\\n     *\\\\r\\\\n     * Among others, `isContract` will return false for the following\\\\r\\\\n     * types of addresses:\\\\r\\\\n     *\\\\r\\\\n     *  - an externally-owned account\\\\r\\\\n     *  - a contract in construction\\\\r\\\\n     *  - an address where a contract will be created\\\\r\\\\n     *  - an address where a contract lived, but was destroyed\\\\r\\\\n     * ====\\\\r\\\\n     */\\\\r\\\\n    function isContract(address account) internal view returns (bool) {\\\\r\\\\n        // This method relies on extcodesize, which returns 0 for contracts in\\\\r\\\\n        // construction, since the code is only stored at the end of the\\\\r\\\\n        // constructor execution.\\\\r\\\\n\\\\r\\\\n        uint256 size;\\\\r\\\\n        // solhint-disable-next-line no-inline-assembly\\\\r\\\\n        assembly { size := extcodesize(account) }\\\\r\\\\n        return size > 0;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Replacement for Solidity\'s `transfer`: sends `amount` wei to\\\\r\\\\n     * `recipient`, forwarding all available gas and reverting on errors.\\\\r\\\\n     *\\\\r\\\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\\\r\\\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\\\r\\\\n     * imposed by `transfer`, making them unable to receive funds via\\\\r\\\\n     * `transfer`. {sendValue} removes this limitation.\\\\r\\\\n     *\\\\r\\\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\\\r\\\\n     *\\\\r\\\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\\\r\\\\n     * taken to not create reentrancy vulnerabilities. Consider using\\\\r\\\\n     * {ReentrancyGuard} or the\\\\r\\\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\\\r\\\\n     */\\\\r\\\\n    function sendValue(address payable recipient, uint256 amount) internal {\\\\r\\\\n        require(address(this).balance >= amount, \\\\\\"Address: insufficient balance\\\\\\");\\\\r\\\\n\\\\r\\\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\\\r\\\\n        (bool success, ) = recipient.call{ value: amount }(\\\\\\"\\\\\\");\\\\r\\\\n        require(success, \\\\\\"Address: unable to send value, recipient may have reverted\\\\\\");\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Performs a Solidity function call using a low level `call`. A\\\\r\\\\n     * plain`call` is an unsafe replacement for a function call: use this\\\\r\\\\n     * function instead.\\\\r\\\\n     *\\\\r\\\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\\\r\\\\n     * function (like regular Solidity function calls).\\\\r\\\\n     *\\\\r\\\\n     * Returns the raw returned data. To convert to the expected return value,\\\\r\\\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - `target` must be a contract.\\\\r\\\\n     * - calling `target` with `data` must not revert.\\\\r\\\\n     *\\\\r\\\\n     * _Available since v3.1._\\\\r\\\\n     */\\\\r\\\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\\\r\\\\n      return functionCall(target, data, \\\\\\"Address: low-level call failed\\\\\\");\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\\\r\\\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\\\r\\\\n     *\\\\r\\\\n     * _Available since v3.1._\\\\r\\\\n     */\\\\r\\\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\\\r\\\\n        return functionCallWithValue(target, data, 0, errorMessage);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\r\\\\n     * but also transferring `value` wei to `target`.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - the calling contract must have an ETH balance of at least `value`.\\\\r\\\\n     * - the called Solidity function must be `payable`.\\\\r\\\\n     *\\\\r\\\\n     * _Available since v3.1._\\\\r\\\\n     */\\\\r\\\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\\\r\\\\n        return functionCallWithValue(target, data, value, \\\\\\"Address: low-level call with value failed\\\\\\");\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\\\r\\\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\\\r\\\\n     *\\\\r\\\\n     * _Available since v3.1._\\\\r\\\\n     */\\\\r\\\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\\\r\\\\n        require(address(this).balance >= value, \\\\\\"Address: insufficient balance for call\\\\\\");\\\\r\\\\n        require(isContract(target), \\\\\\"Address: call to non-contract\\\\\\");\\\\r\\\\n\\\\r\\\\n        // solhint-disable-next-line avoid-low-level-calls\\\\r\\\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\\\r\\\\n        return _verifyCallResult(success, returndata, errorMessage);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\r\\\\n     * but performing a static call.\\\\r\\\\n     *\\\\r\\\\n     * _Available since v3.3._\\\\r\\\\n     */\\\\r\\\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\\\r\\\\n        return functionStaticCall(target, data, \\\\\\"Address: low-level static call failed\\\\\\");\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\\\r\\\\n     * but performing a static call.\\\\r\\\\n     *\\\\r\\\\n     * _Available since v3.3._\\\\r\\\\n     */\\\\r\\\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\\\r\\\\n        require(isContract(target), \\\\\\"Address: static call to non-contract\\\\\\");\\\\r\\\\n\\\\r\\\\n        // solhint-disable-next-line avoid-low-level-calls\\\\r\\\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\\\r\\\\n        return _verifyCallResult(success, returndata, errorMessage);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\r\\\\n     * but performing a delegate call.\\\\r\\\\n     *\\\\r\\\\n     * _Available since v3.4._\\\\r\\\\n     */\\\\r\\\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\\\r\\\\n        return functionDelegateCall(target, data, \\\\\\"Address: low-level delegate call failed\\\\\\");\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\\\r\\\\n     * but performing a delegate call.\\\\r\\\\n     *\\\\r\\\\n     * _Available since v3.4._\\\\r\\\\n     */\\\\r\\\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\\\r\\\\n        require(isContract(target), \\\\\\"Address: delegate call to non-contract\\\\\\");\\\\r\\\\n\\\\r\\\\n        // solhint-disable-next-line avoid-low-level-calls\\\\r\\\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\\\r\\\\n        return _verifyCallResult(success, returndata, errorMessage);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\\\r\\\\n        if (success) {\\\\r\\\\n            return returndata;\\\\r\\\\n        } else {\\\\r\\\\n            // Look for revert reason and bubble it up if present\\\\r\\\\n            if (returndata.length > 0) {\\\\r\\\\n                // The easiest way to bubble the revert reason is using memory via assembly\\\\r\\\\n\\\\r\\\\n                // solhint-disable-next-line no-inline-assembly\\\\r\\\\n                assembly {\\\\r\\\\n                    let returndata_size := mload(returndata)\\\\r\\\\n                    revert(add(32, returndata), returndata_size)\\\\r\\\\n                }\\\\r\\\\n            } else {\\\\r\\\\n                revert(errorMessage);\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\",\\"keccak256\\":\\"0x9b8db55dbef46e5400b0fc1e82b225ca6d8b4eef8d47d82a4e317787b1cc3d07\\",\\"license\\":\\"MIT\\"},\\"contracts/utils/SafeERC20.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\r\\\\n\\\\r\\\\npragma solidity >=0.6.0 <0.8.0;\\\\r\\\\n\\\\r\\\\nimport \\\\\\"../interfaces/IERC20.sol\\\\\\";\\\\r\\\\nimport \\\\\\"./SafeMath.sol\\\\\\";\\\\r\\\\nimport \\\\\\"./Address.sol\\\\\\";\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n * @title SafeERC20\\\\r\\\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\\\r\\\\n * contract returns false). Tokens that return no value (and instead revert or\\\\r\\\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\\\r\\\\n * successful.\\\\r\\\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\\\r\\\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\\\r\\\\n */\\\\r\\\\nlibrary SafeERC20 {\\\\r\\\\n    using SafeMath for uint256;\\\\r\\\\n    using Address for address;\\\\r\\\\n\\\\r\\\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\\\r\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\\\r\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Deprecated. This function has issues similar to the ones found in\\\\r\\\\n     * {IERC20-approve}, and its usage is discouraged.\\\\r\\\\n     *\\\\r\\\\n     * Whenever possible, use {safeIncreaseAllowance} and\\\\r\\\\n     * {safeDecreaseAllowance} instead.\\\\r\\\\n     */\\\\r\\\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\\\r\\\\n        // safeApprove should only be called when setting an initial allowance,\\\\r\\\\n        // or when resetting it to zero. To increase and decrease it, use\\\\r\\\\n        // \'safeIncreaseAllowance\' and \'safeDecreaseAllowance\'\\\\r\\\\n        // solhint-disable-next-line max-line-length\\\\r\\\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\\\r\\\\n            \\\\\\"SafeERC20: approve from non-zero to non-zero allowance\\\\\\"\\\\r\\\\n        );\\\\r\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\\\r\\\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\\\r\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\\\r\\\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\\\\"SafeERC20: decreased allowance below zero\\\\\\");\\\\r\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\\\r\\\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\\\r\\\\n     * @param token The token targeted by the call.\\\\r\\\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\\\r\\\\n     */\\\\r\\\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\\\r\\\\n        // We need to perform a low level call here, to bypass Solidity\'s return data size checking mechanism, since\\\\r\\\\n        // we\'re implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\\\r\\\\n        // the target address contains contract code and also asserts for success in the low-level call.\\\\r\\\\n\\\\r\\\\n        bytes memory returndata = address(token).functionCall(data, \\\\\\"SafeERC20: low-level call failed\\\\\\");\\\\r\\\\n        if (returndata.length > 0) { // Return data is optional\\\\r\\\\n            // solhint-disable-next-line max-line-length\\\\r\\\\n            require(abi.decode(returndata, (bool)), \\\\\\"SafeERC20: ERC20 operation did not succeed\\\\\\");\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\",\\"keccak256\\":\\"0xc6498c3509de275ea22b06b92969906af9705f48df9d25826eaa2ff2f0513879\\",\\"license\\":\\"MIT\\"},\\"contracts/utils/SafeMath.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\r\\\\n\\\\r\\\\npragma solidity >=0.6.0 <0.8.0;\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n * @dev Wrappers over Solidity\'s arithmetic operations with added overflow\\\\r\\\\n * checks.\\\\r\\\\n *\\\\r\\\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\\\r\\\\n * in bugs, because programmers usually assume that an overflow raises an\\\\r\\\\n * error, which is the standard behavior in high level programming languages.\\\\r\\\\n * `SafeMath` restores this intuition by reverting the transaction when an\\\\r\\\\n * operation overflows.\\\\r\\\\n *\\\\r\\\\n * Using this library instead of the unchecked operations eliminates an entire\\\\r\\\\n * class of bugs, so it\'s recommended to use it always.\\\\r\\\\n */\\\\r\\\\nlibrary SafeMath {\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\\\r\\\\n     *\\\\r\\\\n     * _Available since v3.4._\\\\r\\\\n     */\\\\r\\\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\\\r\\\\n        uint256 c = a + b;\\\\r\\\\n        if (c < a) return (false, 0);\\\\r\\\\n        return (true, c);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\\\r\\\\n     *\\\\r\\\\n     * _Available since v3.4._\\\\r\\\\n     */\\\\r\\\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\\\r\\\\n        if (b > a) return (false, 0);\\\\r\\\\n        return (true, a - b);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\\\r\\\\n     *\\\\r\\\\n     * _Available since v3.4._\\\\r\\\\n     */\\\\r\\\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\\\r\\\\n        // Gas optimization: this is cheaper than requiring \'a\' not being zero, but the\\\\r\\\\n        // benefit is lost if \'b\' is also tested.\\\\r\\\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\\\r\\\\n        if (a == 0) return (true, 0);\\\\r\\\\n        uint256 c = a * b;\\\\r\\\\n        if (c / a != b) return (false, 0);\\\\r\\\\n        return (true, c);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\\\r\\\\n     *\\\\r\\\\n     * _Available since v3.4._\\\\r\\\\n     */\\\\r\\\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\\\r\\\\n        if (b == 0) return (false, 0);\\\\r\\\\n        return (true, a / b);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\\\r\\\\n     *\\\\r\\\\n     * _Available since v3.4._\\\\r\\\\n     */\\\\r\\\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\\\r\\\\n        if (b == 0) return (false, 0);\\\\r\\\\n        return (true, a % b);\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the addition of two unsigned integers, reverting on\\\\r\\\\n     * overflow.\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `+` operator.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - Addition cannot overflow.\\\\r\\\\n     */\\\\r\\\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        uint256 c = a + b;\\\\r\\\\n        require(c >= a, \\\\\\"SafeMath: addition overflow\\\\\\");\\\\r\\\\n        return c;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\\\r\\\\n     * overflow (when the result is negative).\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `-` operator.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - Subtraction cannot overflow.\\\\r\\\\n     */\\\\r\\\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        require(b <= a, \\\\\\"SafeMath: subtraction overflow\\\\\\");\\\\r\\\\n        return a - b;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\\\r\\\\n     * overflow.\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `*` operator.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - Multiplication cannot overflow.\\\\r\\\\n     */\\\\r\\\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        if (a == 0) return 0;\\\\r\\\\n        uint256 c = a * b;\\\\r\\\\n        require(c / a == b, \\\\\\"SafeMath: multiplication overflow\\\\\\");\\\\r\\\\n        return c;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\\\r\\\\n     * division by zero. The result is rounded towards zero.\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `/` operator. Note: this function uses a\\\\r\\\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\\\r\\\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - The divisor cannot be zero.\\\\r\\\\n     */\\\\r\\\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        require(b > 0, \\\\\\"SafeMath: division by zero\\\\\\");\\\\r\\\\n        return a / b;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\\\r\\\\n     * reverting when dividing by zero.\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `%` operator. This function uses a `revert`\\\\r\\\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\\\r\\\\n     * invalid opcode to revert (consuming all remaining gas).\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - The divisor cannot be zero.\\\\r\\\\n     */\\\\r\\\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\\\r\\\\n        require(b > 0, \\\\\\"SafeMath: modulo by zero\\\\\\");\\\\r\\\\n        return a % b;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\\\r\\\\n     * overflow (when the result is negative).\\\\r\\\\n     *\\\\r\\\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\\\r\\\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `-` operator.\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - Subtraction cannot overflow.\\\\r\\\\n     */\\\\r\\\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\\\r\\\\n        require(b <= a, errorMessage);\\\\r\\\\n        return a - b;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\\\r\\\\n     * division by zero. The result is rounded towards zero.\\\\r\\\\n     *\\\\r\\\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\\\r\\\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `/` operator. Note: this function uses a\\\\r\\\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\\\r\\\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - The divisor cannot be zero.\\\\r\\\\n     */\\\\r\\\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\\\r\\\\n        require(b > 0, errorMessage);\\\\r\\\\n        return a / b;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    /**\\\\r\\\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\\\r\\\\n     * reverting with custom message when dividing by zero.\\\\r\\\\n     *\\\\r\\\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\\\r\\\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\\\r\\\\n     *\\\\r\\\\n     * Counterpart to Solidity\'s `%` operator. This function uses a `revert`\\\\r\\\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\\\r\\\\n     * invalid opcode to revert (consuming all remaining gas).\\\\r\\\\n     *\\\\r\\\\n     * Requirements:\\\\r\\\\n     *\\\\r\\\\n     * - The divisor cannot be zero.\\\\r\\\\n     */\\\\r\\\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\\\r\\\\n        require(b > 0, errorMessage);\\\\r\\\\n        return a % b;\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\",\\"keccak256\\":\\"0x84ede4cea94f436b1d6ee43d1d107cd6723fe3eb3e84a92f96cc3dd5b255d62b\\",\\"license\\":\\"MIT\\"}},\\"version\\":1}","bytecode":"0x60c0604052600660808190526507370616365360d41b60a090815262000029916002919062000167565b503480156200003757600080fd5b5060405162002736380380620027368339810160408190526200005a916200029d565b848460006200006862000163565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060018080556003839055600482905533600090815260056020526040902060028054620000f29392820192811615610100026000190116819004620001fc565b503360066002604051620001079190620002f8565b90815260405160209181900391909101902080546001600160a01b03199081166001600160a01b039384161790915560098054821697831697909717909655600a94909455505060088054909316911617905550620003879050565b3390565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200019f5760008555620001ea565b82601f10620001ba57805160ff1916838001178555620001ea565b82800160010185558215620001ea579182015b82811115620001ea578251825591602001919060010190620001cd565b50620001f892915062000286565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620002345760008555620001ea565b82601f10620002475780548555620001ea565b82800160010185558215620001ea57600052602060002091601f016020900482015b82811115620001ea57825482559160010191906001019062000269565b5b80821115620001f8576000815560010162000287565b600080600080600060a08688031215620002b5578081fd5b85519450602086015193506040860151620002d0816200036e565b606087015160808801519194509250620002ea816200036e565b809150509295509295909350565b60008083546001808216600081146200031a5760018114620003325762000363565b60ff198316865260028304607f168601935062000363565b600283048786526020808720875b838110156200035b5781548a82015290850190820162000340565b505050860193505b509195945050505050565b6001600160a01b03811681146200038457600080fd5b50565b61239f80620003976000396000f3fe608060405234801561001057600080fd5b50600436106101d85760003560e01c80639501b7d911610104578063ce4d2e04116100a2578063e985e36711610071578063e985e367146103df578063ed740e97146103e7578063ee38db95146103ef578063f2fde38b146103f7576101d8565b8063ce4d2e041461038c578063d2e3d33b14610394578063d6b03080146103a7578063e2d7d5c7146103ba576101d8565b8063a9405923116100de578063a94059231461034b578063ae90295c1461035e578063b6bb5ac614610371578063c57be39814610379576101d8565b80639501b7d9146103105780639bd86c3414610323578063a0b5f77114610343576101d8565b80632e1a7d4d1161017c5780636ab3846b1161014b5780636ab3846b146102e5578063715018a6146102f85780637be4996e146103005780638da5cb5b14610308576101d8565b80632e1a7d4d146102975780634410d3bb146102aa5780634cccf7c3146102bd57806362a344fa146102c5576101d8565b806306bcf02f116101b857806306bcf02f146102305780630f208beb146102435780631dcbe500146102645780632a8755ef14610284576101d8565b806241e230146101dd578062f7e4f6146101fb578063050d0adf14610210575b600080fd5b6101e561040a565b6040516101f2919061225a565b60405180910390f35b61020e610209366004611dea565b610410565b005b61022361021e366004611cbe565b610477565b6040516101f29190611ef4565b61020e61023e366004611dea565b610503565b610256610251366004611cda565b61056a565b6040516101f2929190612263565b610277610272366004611cbe565b61058e565b6040516101f29190611f4c565b61020e610292366004611cbe565b6105c3565b61020e6102a5366004611dea565b610647565b61020e6102b8366004611e69565b610790565b6101e5610acf565b6102d86102d3366004611d12565b610ad5565b6040516101f29190611ec7565b61020e6102f3366004611dea565b610b07565b61020e610b6e565b6101e5610c1a565b6102d8610c20565b6101e561031e366004611cbe565b610c2f565b610336610331366004611cbe565b610c41565b6040516101f29190611f57565b610336610cf2565b6102d8610359366004611cbe565b610d7d565b61020e61036c366004611e1a565b610d9e565b6101e5610efb565b61020e610387366004611d12565b610f01565b6101e5611182565b61020e6103a2366004611da7565b611188565b61020e6103b5366004611cbe565b6113a3565b6103cd6103c8366004611dea565b611427565b6040516101f296959493929190611f8a565b6102d8611477565b6102d8611486565b61020e611495565b61020e610405366004611cbe565b6115d0565b600b5481565b6104186116d2565b6001600160a01b0316610429610c20565b6001600160a01b031614610472576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b600a55565b6001600160a01b0381166000908152600560209081526040808320805482518185028101850190935280835260609492939192909184015b828210156104f7576000848152602090819020604080518082019091526002850290910180546001600160a01b031682526001908101548284015290835290920191016104af565b5050505090505b919050565b61050b6116d2565b6001600160a01b031661051c610c20565b6001600160a01b031614610565576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b600355565b600d6020908152600092835260408084209091529082529020805460019091015482565b6001600160a01b03818116600090815260056020526040812060010154909116156105bb575060016104fe565b506000919050565b6105cb6116d2565b6001600160a01b03166105dc610c20565b6001600160a01b031614610625576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6002600154141561069f576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600155600a54339043116106d05760405162461bcd60e51b81526004016106c7906121c1565b60405180910390fd5b6000600783815481106106df57fe5b600091825260208083206001600160a01b038087168552600d835260408086206006909502909201805482168652939092529092205460085491935061072b92919091169084906116d6565b6001600160a01b038281166000818152600d60209081526040808320865486168452909152808220829055845490931681528281205492517f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649190a350506001805550565b600260015414156107e8576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026001556007805433916000918590811061080057fe5b9060005260206000209060060201905060035442118015610822575060045442105b61083e5760405162461bcd60e51b81526004016106c790612163565b80600401548310156108625760405162461bcd60e51b81526004016106c790611ffe565b80546001600160a01b03166108895760405162461bcd60e51b81526004016106c79061212c565b60006109398260000160009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156108de57600080fd5b505afa1580156108f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109169190611e8a565b60ff16600a0a61093384600201548761172d90919063ffffffff16565b9061178f565b905083826005015401826001015411156109655760405162461bcd60e51b81526004016106c790612094565b60038201546001600160a01b038085166000908152600d6020908152604080832087549094168352929052206001015461099f90866117f6565b11156109bd5760405162461bcd60e51b81526004016106c790612191565b6001600160a01b038084166000908152600d602090815260408083208654909416835292905220546109ef90826117f6565b6001600160a01b038481166000908152600d6020908152604080832087548516845290915280822093909355845490911681522060010154610a3190856117f6565b6001600160a01b038085166000908152600d602090815260408083208754909416835292905220600101556005820154610a6b90856117f6565b60058301556009548254610a8e916001600160a01b039182169186911687611850565b60405181906001600160a01b038516907f3992fc65efb8c400da83200be6943546d4d81d308b29889a44dda4ae2474920390600090a3505060018055505050565b60045481565b6000600682604051610ae79190611eab565b908152604051908190036020019020546001600160a01b03169050919050565b610b0f6116d2565b6001600160a01b0316610b20610c20565b6001600160a01b031614610b69576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b600455565b610b766116d2565b6001600160a01b0316610b87610c20565b6001600160a01b031614610bd0576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600a5481565b6000546001600160a01b031690565b600c6020526000908152604090205481565b6001600160a01b0381166000908152600560209081526040918290206002908101805484516001821615610100026000190190911692909204601f81018490048402830184019094528382526060939192909190830182828015610ce65780601f10610cbb57610100808354040283529160200191610ce6565b820191906000526020600020905b815481529060010190602001808311610cc957829003601f168201915b50505050509050919050565b6002805460408051602060018416156101000260001901909316849004601f81018490048402820184019092528181529291830182828015610d755780601f10610d4a57610100808354040283529160200191610d75565b820191906000526020600020905b815481529060010190602001808311610d5857829003601f168201915b505050505081565b6001600160a01b039081166000908152600560205260409020600101541690565b610da66116d2565b6001600160a01b0316610db7610c20565b6001600160a01b031614610e00576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b8460078781548110610e0e57fe5b906000526020600020906006020160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508360078781548110610e5157fe5b9060005260206000209060060201600101819055508260078781548110610e7457fe5b9060005260206000209060060201600201819055508160078781548110610e9757fe5b9060005260206000209060060201600301819055508060078781548110610eba57fe5b906000526020600020906006020160040181905550600060078781548110610ede57fe5b906000526020600020906006020160050181905550505050505050565b60075490565b60035442118015610f13575060045442105b610f1c57600080fd5b60003390506000600683604051610f339190611eab565b908152604051908190036020019020546001600160a01b0316905080610f6b5760405162461bcd60e51b81526004016106c790612035565b816001600160a01b0316816001600160a01b03161415610f9d5760405162461bcd60e51b81526004016106c79061205d565b6001600160a01b03808316600081815260056020908152604080832094861683528083209383526003840190915290205415610feb5760405162461bcd60e51b81526004016106c7906120cb565b60018201546001600160a01b0316156110165760405162461bcd60e51b81526004016106c79061222d565b6040805180820182526001600160a01b0380871680835242602080850191825286546001818101895560008981528381209751600290930290970180549287166001600160a01b031993841617815593519381019390935588549386526003880190915294842091909155850180549187169190931617909155611099856118b0565b905060006001600160a01b03166006826040516110b69190611eab565b908152604051908190036020019020546001600160a01b0316146110ec5760405162461bcd60e51b81526004016106c790612102565b80516111019060028501906020840190611c1d565b50846006826040516111139190611eab565b90815260405190819003602001812080546001600160a01b039384166001600160a01b0319909116179055868216918616907f6999f352a5e3cba57581ad80d080b117be848e91ed5beca3f78046d6379a36bc90611172908590611f57565b60405180910390a3505050505050565b60035481565b6111906116d2565b6001600160a01b03166111a1610c20565b6001600160a01b0316146111ea576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b6001600160a01b0385166000908152600c60205260409020548590156112225760405162461bcd60e51b81526004016106c790611fbd565b6040805160c0810182526001600160a01b0388811680835260208084018a81528486018a8152606086018a8152608087018a8152600060a08901818152600780546001810182558184529a517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6886006909c029b8c0180546001600160a01b03191691909b161790995594517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6898a015592517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a89015590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b880155517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68c87015590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68d909501949094559154908352600c90915291902060001991909101905561139861138f868661172d565b600b54906117f6565b600b55505050505050565b6113ab6116d2565b6001600160a01b03166113bc610c20565b6001600160a01b031614611405576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6007818154811061143757600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b0390941695509193909286565b6008546001600160a01b031681565b6009546001600160a01b031681565b61149d6116d2565b6001600160a01b03166114ae610c20565b6001600160a01b0316146114f7576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b6008546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611528903090600401611ec7565b60206040518083038186803b15801561154057600080fd5b505afa158015611554573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115789190611e02565b905060008111801561159457506009546001600160a01b031615155b6115b05760405162461bcd60e51b81526004016106c790612207565b6009546008546115cd916001600160a01b039182169116836116d6565b50565b6115d86116d2565b6001600160a01b03166115e9610c20565b6001600160a01b031614611632576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b6001600160a01b0381166116775760405162461bcd60e51b81526004018080602001828103825260268152602001806122b36026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261172890849061194e565b505050565b60008261173c57506000611789565b8282028284828161174957fe5b04146117865760405162461bcd60e51b81526004018080602001828103825260218152602001806122ff6021913960400191505060405180910390fd5b90505b92915050565b60008082116117e5576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816117ee57fe5b049392505050565b600082820183811015611786576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526118aa90859061194e565b50505050565b6060600082436040516020016118c7929190611edb565b60408051808303601f190181528282528051602090910120600680845283830190925292506000919060208201818036833701905050905060005b81518110156119465782816020811061191757fe5b1a60f81b82828151811061192757fe5b60200101906001600160f81b031916908160001a905350600101611902565b509392505050565b60006119a3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119ff9092919063ffffffff16565b805190915015611728578080602001905160208110156119c257600080fd5b50516117285760405162461bcd60e51b815260040180806020018281038252602a815260200180612340602a913960400191505060405180910390fd5b6060611a0e8484600085611a18565b90505b9392505050565b606082471015611a595760405162461bcd60e51b81526004018080602001828103825260268152602001806122d96026913960400191505060405180910390fd5b611a6285611b73565b611ab3576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310611af15780518252601f199092019160209182019101611ad2565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611b53576040519150601f19603f3d011682016040523d82523d6000602084013e611b58565b606091505b5091509150611b68828286611b79565b979650505050505050565b3b151590565b60608315611b88575081611a11565b825115611b985782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611be2578181015183820152602001611bca565b50505050905090810190601f168015611c0f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282611c535760008555611c99565b82601f10611c6c57805160ff1916838001178555611c99565b82800160010185558215611c99579182015b82811115611c99578251825591602001919060010190611c7e565b50611ca5929150611ca9565b5090565b5b80821115611ca55760008155600101611caa565b600060208284031215611ccf578081fd5b81356117868161229d565b60008060408385031215611cec578081fd5b8235611cf78161229d565b91506020830135611d078161229d565b809150509250929050565b60006020808385031215611d24578182fd5b823567ffffffffffffffff80821115611d3b578384fd5b818501915085601f830112611d4e578384fd5b813581811115611d5a57fe5b604051601f8201601f1916810185018381118282101715611d7757fe5b6040528181528382018501881015611d8d578586fd5b818585018683013790810190930193909352509392505050565b600080600080600060a08688031215611dbe578081fd5b8535611dc98161229d565b97602087013597506040870135966060810135965060800135945092505050565b600060208284031215611dfb578081fd5b5035919050565b600060208284031215611e13578081fd5b5051919050565b60008060008060008060c08789031215611e32578081fd5b863595506020870135611e448161229d565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008060408385031215611e7b578182fd5b50508035926020909101359150565b600060208284031215611e9b578081fd5b815160ff81168114611786578182fd5b60008251611ebd818460208701612271565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b602080825282518282018190526000919060409081850190868401855b82811015611f3f57815180516001600160a01b03168552860151868501529284019290850190600101611f11565b5091979650505050505050565b901515815260200190565b6000602082528251806020840152611f76816040850160208701612271565b601f01601f19169190910160400192915050565b6001600160a01b03969096168652602086019490945260408501929092526060840152608083015260a082015260c00190565b60208082526021908201527f6e6f6e4475706c6963617465643a206475706c696361746564206c70546f6b656040820152603760f91b606082015260800190565b6020808252601b908201527f72657665727365643a736861726520697320746f6f20736d616c6c0000000000604082015260600190565b6020808252600e908201526d18dbd919481b9bdd08199bdd5b9960921b604082015260600190565b60208082526019908201527f4e6f7420616c6c6f7720696e76697465722062792073656c6600000000000000604082015260600190565b6020808252601d908201527f72657665727365643a206e6f7420656e6f7567682063757272656e6379000000604082015260600190565b6020808252601f908201527f43616e206e6f7420616363657074206368696c6420696e7669746174696f6e00604082015260600190565b60208082526010908201526f383632b0b9b2903a393c9030b3b0b4b760811b604082015260600190565b6020808252601f908201527f72657665727365643a206e6f20737570706f727465642063757272656e637900604082015260600190565b60208082526014908201527372657665727365643a6e6f7420696e2074696d6560601b604082015260600190565b6020808252601690820152751c995d995c9cd9590e88195e18d95959081b1a5b5a5d60521b604082015260600190565b60208082526026908201527f77697468647261773a20626c6f636b206e756d626572206973206e6f7420756e6040820152651b1bd8dad95960d21b606082015260800190565b6020808252600c908201526b6e6f2072656d61696e696e6760a01b604082015260600190565b602080825260139082015272416c726561647920626f6e6420696e7669746560681b604082015260600190565b90815260200190565b918252602082015260400190565b60005b8381101561228c578181015183820152602001612274565b838111156118aa5750506000910152565b6001600160a01b03811681146115cd57600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220a5ec928e189cf5fd15d333232f2887d4c41196f07f3dd5c8103ae092165f8aa964736f6c63430007060033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106101d85760003560e01c80639501b7d911610104578063ce4d2e04116100a2578063e985e36711610071578063e985e367146103df578063ed740e97146103e7578063ee38db95146103ef578063f2fde38b146103f7576101d8565b8063ce4d2e041461038c578063d2e3d33b14610394578063d6b03080146103a7578063e2d7d5c7146103ba576101d8565b8063a9405923116100de578063a94059231461034b578063ae90295c1461035e578063b6bb5ac614610371578063c57be39814610379576101d8565b80639501b7d9146103105780639bd86c3414610323578063a0b5f77114610343576101d8565b80632e1a7d4d1161017c5780636ab3846b1161014b5780636ab3846b146102e5578063715018a6146102f85780637be4996e146103005780638da5cb5b14610308576101d8565b80632e1a7d4d146102975780634410d3bb146102aa5780634cccf7c3146102bd57806362a344fa146102c5576101d8565b806306bcf02f116101b857806306bcf02f146102305780630f208beb146102435780631dcbe500146102645780632a8755ef14610284576101d8565b806241e230146101dd578062f7e4f6146101fb578063050d0adf14610210575b600080fd5b6101e561040a565b6040516101f2919061225a565b60405180910390f35b61020e610209366004611dea565b610410565b005b61022361021e366004611cbe565b610477565b6040516101f29190611ef4565b61020e61023e366004611dea565b610503565b610256610251366004611cda565b61056a565b6040516101f2929190612263565b610277610272366004611cbe565b61058e565b6040516101f29190611f4c565b61020e610292366004611cbe565b6105c3565b61020e6102a5366004611dea565b610647565b61020e6102b8366004611e69565b610790565b6101e5610acf565b6102d86102d3366004611d12565b610ad5565b6040516101f29190611ec7565b61020e6102f3366004611dea565b610b07565b61020e610b6e565b6101e5610c1a565b6102d8610c20565b6101e561031e366004611cbe565b610c2f565b610336610331366004611cbe565b610c41565b6040516101f29190611f57565b610336610cf2565b6102d8610359366004611cbe565b610d7d565b61020e61036c366004611e1a565b610d9e565b6101e5610efb565b61020e610387366004611d12565b610f01565b6101e5611182565b61020e6103a2366004611da7565b611188565b61020e6103b5366004611cbe565b6113a3565b6103cd6103c8366004611dea565b611427565b6040516101f296959493929190611f8a565b6102d8611477565b6102d8611486565b61020e611495565b61020e610405366004611cbe565b6115d0565b600b5481565b6104186116d2565b6001600160a01b0316610429610c20565b6001600160a01b031614610472576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b600a55565b6001600160a01b0381166000908152600560209081526040808320805482518185028101850190935280835260609492939192909184015b828210156104f7576000848152602090819020604080518082019091526002850290910180546001600160a01b031682526001908101548284015290835290920191016104af565b5050505090505b919050565b61050b6116d2565b6001600160a01b031661051c610c20565b6001600160a01b031614610565576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b600355565b600d6020908152600092835260408084209091529082529020805460019091015482565b6001600160a01b03818116600090815260056020526040812060010154909116156105bb575060016104fe565b506000919050565b6105cb6116d2565b6001600160a01b03166105dc610c20565b6001600160a01b031614610625576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6002600154141561069f576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600155600a54339043116106d05760405162461bcd60e51b81526004016106c7906121c1565b60405180910390fd5b6000600783815481106106df57fe5b600091825260208083206001600160a01b038087168552600d835260408086206006909502909201805482168652939092529092205460085491935061072b92919091169084906116d6565b6001600160a01b038281166000818152600d60209081526040808320865486168452909152808220829055845490931681528281205492517f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649190a350506001805550565b600260015414156107e8576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026001556007805433916000918590811061080057fe5b9060005260206000209060060201905060035442118015610822575060045442105b61083e5760405162461bcd60e51b81526004016106c790612163565b80600401548310156108625760405162461bcd60e51b81526004016106c790611ffe565b80546001600160a01b03166108895760405162461bcd60e51b81526004016106c79061212c565b60006109398260000160009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156108de57600080fd5b505afa1580156108f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109169190611e8a565b60ff16600a0a61093384600201548761172d90919063ffffffff16565b9061178f565b905083826005015401826001015411156109655760405162461bcd60e51b81526004016106c790612094565b60038201546001600160a01b038085166000908152600d6020908152604080832087549094168352929052206001015461099f90866117f6565b11156109bd5760405162461bcd60e51b81526004016106c790612191565b6001600160a01b038084166000908152600d602090815260408083208654909416835292905220546109ef90826117f6565b6001600160a01b038481166000908152600d6020908152604080832087548516845290915280822093909355845490911681522060010154610a3190856117f6565b6001600160a01b038085166000908152600d602090815260408083208754909416835292905220600101556005820154610a6b90856117f6565b60058301556009548254610a8e916001600160a01b039182169186911687611850565b60405181906001600160a01b038516907f3992fc65efb8c400da83200be6943546d4d81d308b29889a44dda4ae2474920390600090a3505060018055505050565b60045481565b6000600682604051610ae79190611eab565b908152604051908190036020019020546001600160a01b03169050919050565b610b0f6116d2565b6001600160a01b0316610b20610c20565b6001600160a01b031614610b69576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b600455565b610b766116d2565b6001600160a01b0316610b87610c20565b6001600160a01b031614610bd0576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600a5481565b6000546001600160a01b031690565b600c6020526000908152604090205481565b6001600160a01b0381166000908152600560209081526040918290206002908101805484516001821615610100026000190190911692909204601f81018490048402830184019094528382526060939192909190830182828015610ce65780601f10610cbb57610100808354040283529160200191610ce6565b820191906000526020600020905b815481529060010190602001808311610cc957829003601f168201915b50505050509050919050565b6002805460408051602060018416156101000260001901909316849004601f81018490048402820184019092528181529291830182828015610d755780601f10610d4a57610100808354040283529160200191610d75565b820191906000526020600020905b815481529060010190602001808311610d5857829003601f168201915b505050505081565b6001600160a01b039081166000908152600560205260409020600101541690565b610da66116d2565b6001600160a01b0316610db7610c20565b6001600160a01b031614610e00576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b8460078781548110610e0e57fe5b906000526020600020906006020160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508360078781548110610e5157fe5b9060005260206000209060060201600101819055508260078781548110610e7457fe5b9060005260206000209060060201600201819055508160078781548110610e9757fe5b9060005260206000209060060201600301819055508060078781548110610eba57fe5b906000526020600020906006020160040181905550600060078781548110610ede57fe5b906000526020600020906006020160050181905550505050505050565b60075490565b60035442118015610f13575060045442105b610f1c57600080fd5b60003390506000600683604051610f339190611eab565b908152604051908190036020019020546001600160a01b0316905080610f6b5760405162461bcd60e51b81526004016106c790612035565b816001600160a01b0316816001600160a01b03161415610f9d5760405162461bcd60e51b81526004016106c79061205d565b6001600160a01b03808316600081815260056020908152604080832094861683528083209383526003840190915290205415610feb5760405162461bcd60e51b81526004016106c7906120cb565b60018201546001600160a01b0316156110165760405162461bcd60e51b81526004016106c79061222d565b6040805180820182526001600160a01b0380871680835242602080850191825286546001818101895560008981528381209751600290930290970180549287166001600160a01b031993841617815593519381019390935588549386526003880190915294842091909155850180549187169190931617909155611099856118b0565b905060006001600160a01b03166006826040516110b69190611eab565b908152604051908190036020019020546001600160a01b0316146110ec5760405162461bcd60e51b81526004016106c790612102565b80516111019060028501906020840190611c1d565b50846006826040516111139190611eab565b90815260405190819003602001812080546001600160a01b039384166001600160a01b0319909116179055868216918616907f6999f352a5e3cba57581ad80d080b117be848e91ed5beca3f78046d6379a36bc90611172908590611f57565b60405180910390a3505050505050565b60035481565b6111906116d2565b6001600160a01b03166111a1610c20565b6001600160a01b0316146111ea576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b6001600160a01b0385166000908152600c60205260409020548590156112225760405162461bcd60e51b81526004016106c790611fbd565b6040805160c0810182526001600160a01b0388811680835260208084018a81528486018a8152606086018a8152608087018a8152600060a08901818152600780546001810182558184529a517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6886006909c029b8c0180546001600160a01b03191691909b161790995594517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6898a015592517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a89015590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b880155517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68c87015590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68d909501949094559154908352600c90915291902060001991909101905561139861138f868661172d565b600b54906117f6565b600b55505050505050565b6113ab6116d2565b6001600160a01b03166113bc610c20565b6001600160a01b031614611405576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6007818154811061143757600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b0390941695509193909286565b6008546001600160a01b031681565b6009546001600160a01b031681565b61149d6116d2565b6001600160a01b03166114ae610c20565b6001600160a01b0316146114f7576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b6008546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611528903090600401611ec7565b60206040518083038186803b15801561154057600080fd5b505afa158015611554573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115789190611e02565b905060008111801561159457506009546001600160a01b031615155b6115b05760405162461bcd60e51b81526004016106c790612207565b6009546008546115cd916001600160a01b039182169116836116d6565b50565b6115d86116d2565b6001600160a01b03166115e9610c20565b6001600160a01b031614611632576040805162461bcd60e51b81526020600482018190526024820152600080516020612320833981519152604482015290519081900360640190fd5b6001600160a01b0381166116775760405162461bcd60e51b81526004018080602001828103825260268152602001806122b36026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261172890849061194e565b505050565b60008261173c57506000611789565b8282028284828161174957fe5b04146117865760405162461bcd60e51b81526004018080602001828103825260218152602001806122ff6021913960400191505060405180910390fd5b90505b92915050565b60008082116117e5576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816117ee57fe5b049392505050565b600082820183811015611786576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526118aa90859061194e565b50505050565b6060600082436040516020016118c7929190611edb565b60408051808303601f190181528282528051602090910120600680845283830190925292506000919060208201818036833701905050905060005b81518110156119465782816020811061191757fe5b1a60f81b82828151811061192757fe5b60200101906001600160f81b031916908160001a905350600101611902565b509392505050565b60006119a3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119ff9092919063ffffffff16565b805190915015611728578080602001905160208110156119c257600080fd5b50516117285760405162461bcd60e51b815260040180806020018281038252602a815260200180612340602a913960400191505060405180910390fd5b6060611a0e8484600085611a18565b90505b9392505050565b606082471015611a595760405162461bcd60e51b81526004018080602001828103825260268152602001806122d96026913960400191505060405180910390fd5b611a6285611b73565b611ab3576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310611af15780518252601f199092019160209182019101611ad2565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611b53576040519150601f19603f3d011682016040523d82523d6000602084013e611b58565b606091505b5091509150611b68828286611b79565b979650505050505050565b3b151590565b60608315611b88575081611a11565b825115611b985782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611be2578181015183820152602001611bca565b50505050905090810190601f168015611c0f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282611c535760008555611c99565b82601f10611c6c57805160ff1916838001178555611c99565b82800160010185558215611c99579182015b82811115611c99578251825591602001919060010190611c7e565b50611ca5929150611ca9565b5090565b5b80821115611ca55760008155600101611caa565b600060208284031215611ccf578081fd5b81356117868161229d565b60008060408385031215611cec578081fd5b8235611cf78161229d565b91506020830135611d078161229d565b809150509250929050565b60006020808385031215611d24578182fd5b823567ffffffffffffffff80821115611d3b578384fd5b818501915085601f830112611d4e578384fd5b813581811115611d5a57fe5b604051601f8201601f1916810185018381118282101715611d7757fe5b6040528181528382018501881015611d8d578586fd5b818585018683013790810190930193909352509392505050565b600080600080600060a08688031215611dbe578081fd5b8535611dc98161229d565b97602087013597506040870135966060810135965060800135945092505050565b600060208284031215611dfb578081fd5b5035919050565b600060208284031215611e13578081fd5b5051919050565b60008060008060008060c08789031215611e32578081fd5b863595506020870135611e448161229d565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008060408385031215611e7b578182fd5b50508035926020909101359150565b600060208284031215611e9b578081fd5b815160ff81168114611786578182fd5b60008251611ebd818460208701612271565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b602080825282518282018190526000919060409081850190868401855b82811015611f3f57815180516001600160a01b03168552860151868501529284019290850190600101611f11565b5091979650505050505050565b901515815260200190565b6000602082528251806020840152611f76816040850160208701612271565b601f01601f19169190910160400192915050565b6001600160a01b03969096168652602086019490945260408501929092526060840152608083015260a082015260c00190565b60208082526021908201527f6e6f6e4475706c6963617465643a206475706c696361746564206c70546f6b656040820152603760f91b606082015260800190565b6020808252601b908201527f72657665727365643a736861726520697320746f6f20736d616c6c0000000000604082015260600190565b6020808252600e908201526d18dbd919481b9bdd08199bdd5b9960921b604082015260600190565b60208082526019908201527f4e6f7420616c6c6f7720696e76697465722062792073656c6600000000000000604082015260600190565b6020808252601d908201527f72657665727365643a206e6f7420656e6f7567682063757272656e6379000000604082015260600190565b6020808252601f908201527f43616e206e6f7420616363657074206368696c6420696e7669746174696f6e00604082015260600190565b60208082526010908201526f383632b0b9b2903a393c9030b3b0b4b760811b604082015260600190565b6020808252601f908201527f72657665727365643a206e6f20737570706f727465642063757272656e637900604082015260600190565b60208082526014908201527372657665727365643a6e6f7420696e2074696d6560601b604082015260600190565b6020808252601690820152751c995d995c9cd9590e88195e18d95959081b1a5b5a5d60521b604082015260600190565b60208082526026908201527f77697468647261773a20626c6f636b206e756d626572206973206e6f7420756e6040820152651b1bd8dad95960d21b606082015260800190565b6020808252600c908201526b6e6f2072656d61696e696e6760a01b604082015260600190565b602080825260139082015272416c726561647920626f6e6420696e7669746560681b604082015260600190565b90815260200190565b918252602082015260400190565b60005b8381101561228c578181015183820152602001612274565b838111156118aa5750506000910152565b6001600160a01b03811681146115cd57600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220a5ec928e189cf5fd15d333232f2887d4c41196f07f3dd5c8103ae092165f8aa964736f6c63430007060033","devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":7,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1756,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":2937,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"defaultCode","offset":0,"slot":"2","type":"t_bytes_storage"},{"astId":2939,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"beginsTime","offset":0,"slot":"3","type":"t_uint256"},{"astId":2941,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"endsTime","offset":0,"slot":"4","type":"t_uint256"},{"astId":2945,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"_relations","offset":0,"slot":"5","type":"t_mapping(t_address,t_struct(User)5209_storage)"},{"astId":2949,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"_codeUsed","offset":0,"slot":"6","type":"t_mapping(t_bytes_memory_ptr,t_address)"},{"astId":2405,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"supportedCurrency","offset":0,"slot":"7","type":"t_array(t_struct(Currency)2397_storage)dyn_storage"},{"astId":2407,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"saleToken","offset":0,"slot":"8","type":"t_contract(IERC20)5189"},{"astId":2409,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"cashier","offset":0,"slot":"9","type":"t_address"},{"astId":2411,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"unlockedBlock","offset":0,"slot":"10","type":"t_uint256"},{"astId":2413,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"totalReverse","offset":0,"slot":"11","type":"t_uint256"},{"astId":2417,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"currencyExistence","offset":0,"slot":"12","type":"t_mapping(t_contract(IERC20)5189,t_uint256)"},{"astId":2423,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"userInfo","offset":0,"slot":"13","type":"t_mapping(t_address,t_mapping(t_contract(IERC20)5189,t_struct(Player)2402_storage))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Currency)2397_storage)dyn_storage":{"base":"t_struct(Currency)2397_storage","encoding":"dynamic_array","label":"struct MultiPresale.Currency[]","numberOfBytes":"32"},"t_array(t_struct(Invitee)5197_storage)dyn_storage":{"base":"t_struct(Invitee)5197_storage","encoding":"dynamic_array","label":"struct IRelationship.Invitee[]","numberOfBytes":"32"},"t_bytes_memory_ptr":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_contract(IERC20)5189":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_contract(IERC20)5189,t_struct(Player)2402_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(contract IERC20 => struct MultiPresale.Player))","numberOfBytes":"32","value":"t_mapping(t_contract(IERC20)5189,t_struct(Player)2402_storage)"},"t_mapping(t_address,t_struct(User)5209_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct IRelationship.User)","numberOfBytes":"32","value":"t_struct(User)5209_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes_memory_ptr,t_address)":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_contract(IERC20)5189,t_struct(Player)2402_storage)":{"encoding":"mapping","key":"t_contract(IERC20)5189","label":"mapping(contract IERC20 => struct MultiPresale.Player)","numberOfBytes":"32","value":"t_struct(Player)2402_storage"},"t_mapping(t_contract(IERC20)5189,t_uint256)":{"encoding":"mapping","key":"t_contract(IERC20)5189","label":"mapping(contract IERC20 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(Currency)2397_storage":{"encoding":"inplace","label":"struct MultiPresale.Currency","members":[{"astId":2386,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"token","offset":0,"slot":"0","type":"t_contract(IERC20)5189"},{"astId":2388,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"amount","offset":0,"slot":"1","type":"t_uint256"},{"astId":2390,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"perShare","offset":0,"slot":"2","type":"t_uint256"},{"astId":2392,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"limitPerShare","offset":0,"slot":"3","type":"t_uint256"},{"astId":2394,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"minPerShare","offset":0,"slot":"4","type":"t_uint256"},{"astId":2396,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"sold","offset":0,"slot":"5","type":"t_uint256"}],"numberOfBytes":"192"},"t_struct(Invitee)5197_storage":{"encoding":"inplace","label":"struct IRelationship.Invitee","members":[{"astId":5194,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"invitee","offset":0,"slot":"0","type":"t_address"},{"astId":5196,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"timestamp","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(Player)2402_storage":{"encoding":"inplace","label":"struct MultiPresale.Player","members":[{"astId":2399,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"locked","offset":0,"slot":"0","type":"t_uint256"},{"astId":2401,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"cost","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(User)5209_storage":{"encoding":"inplace","label":"struct IRelationship.User","members":[{"astId":5200,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"inviteeList","offset":0,"slot":"0","type":"t_array(t_struct(Invitee)5197_storage)dyn_storage"},{"astId":5202,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"inviter","offset":0,"slot":"1","type":"t_address"},{"astId":5204,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"code","offset":0,"slot":"2","type":"t_bytes_storage"},{"astId":5208,"contract":"contracts/MultiPresale.sol:MultiPresale","label":"indexes","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}')},c979:function(e,t,n){e.exports=n.p+"img/btcpi.eeb7be88.svg"},d6a2:function(e,t,n){e.exports=n.p+"img/developers.b3f13dc4.svg"},d70e:function(e,t,n){e.exports=n.p+"img/businesses.e17b92e5.svg"},e296:function(e,t,n){},e40a:function(e,t,n){e.exports=n.p+"img/pancakeswap.24665d45.svg"},e6ad:function(e,t,n){"use strict";n("b1df")},ef1c:function(e,t,n){e.exports=n.p+"img/2.0fda5ddd.svg"},f0697:function(e,t,n){},f6c8:function(e,t,n){e.exports=n.p+"img/usdt-logo.0b1770a6.png"}});